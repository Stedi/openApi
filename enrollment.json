{
    "openapi": "3.1.0",
    "info": {
        "title": "Stedi Enrollment",
        "version": "2024-09-01",
        "description": "The Stedi Enrollment Service manages provider enrollments with healthcare payers.\nIt tracks enrollment status, provider details, and supports batch enrollment processing\nto ensure providers have the necessary credentials before processing healthcare transactions.\n",
        "contact": {
            "email": "healthcare@stedi.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://stedi.com"
        }
    },
    "paths": {
        "/enrollments": {
            "get": {
                "description": "Lists transaction enrollment records with optional filtering and pagination.",
                "operationId": "ListEnrollments",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of elements to return in a page. If not specified, the default is 100.",
                        "schema": {
                            "type": "number",
                            "maximum": 500,
                            "minimum": 1,
                            "description": "The maximum number of elements to return in a page. If not specified, the default is 100."
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "description": "An opaque token returned by a previous call to this endpoint in the `nextPageToken` property. You can use it to request the next page of results. If not specified, Stedi returns the first page of results.",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1,
                            "description": "An opaque token returned by a previous call to this endpoint in the `nextPageToken` property. You can use it to request the next page of results. If not specified, Stedi returns the first page of results."
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter for enrollments with properties matching a query string. You can provide all or part of a provider name, NPI, or tax ID. You can also provide all or part of a payer's [Stedi payer ID](https://www.stedi.com/docs/healthcare/supported-payers#stedi-payer-id) - primary payer IDs and aliases aren't supported. The search is case-insensitive and supports fuzzy matching.\n\nFor example, providing `?filter=OS` returns enrollments with `provider.name` containing `os` or `OS` (such as `Joseph`) and Stedi payer IDs containing `OS`, such as `OSBLI` for OptumHealth Salt Lake County.",
                        "schema": {
                            "type": "string",
                            "description": "Filter for enrollments with properties matching a query string. You can provide all or part of a provider name, NPI, or tax ID. You can also provide all or part of a payer's [Stedi payer ID](https://www.stedi.com/docs/healthcare/supported-payers#stedi-payer-id) - primary payer IDs and aliases aren't supported. The search is case-insensitive and supports fuzzy matching.\n\nFor example, providing `?filter=OS` returns enrollments with `provider.name` containing `os` or `OS` (such as `Joseph`) and Stedi payer IDs containing `OS`, such as `OSBLI` for OptumHealth Salt Lake County."
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter for enrollments with specific statuses. You can include this parameter multiple times to filter for multiple statuses.\n\nFor example, `?status=LIVE&status=REJECTED` returns enrollments that are in either `LIVE` or `REJECTED` status.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/EnrollmentStatus"
                            },
                            "description": "Filter for enrollments with specific statuses. You can include this parameter multiple times to filter for multiple statuses.\n\nFor example, `?status=LIVE&status=REJECTED` returns enrollments that are in either `LIVE` or `REJECTED` status."
                        },
                        "explode": true
                    },
                    {
                        "name": "providerNpis",
                        "in": "query",
                        "description": "Filter for enrollments associated with specific provider NPIs. You can include this parameter multiple times to filter for multiple NPIs.\n\nFor example, `?providerNpis=1234567890&providerNpis=0987654321` returns enrollments associated with either of the specified NPIs.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter for enrollments associated with specific provider NPIs. You can include this parameter multiple times to filter for multiple NPIs.\n\nFor example, `?providerNpis=1234567890&providerNpis=0987654321` returns enrollments associated with either of the specified NPIs."
                        },
                        "explode": true
                    },
                    {
                        "name": "providerTaxIds",
                        "in": "query",
                        "description": "Filter for enrollments associated with specific provider tax IDs. You can include this parameter multiple times to filter for multiple tax IDs.\n\nFor example, `?providerTaxIds=123456789&providerTaxIds=987654321` returns enrollments associated with either of the specified tax IDs.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter for enrollments associated with specific provider tax IDs. You can include this parameter multiple times to filter for multiple tax IDs.\n\nFor example, `?providerTaxIds=123456789&providerTaxIds=987654321` returns enrollments associated with either of the specified tax IDs."
                        },
                        "explode": true
                    },
                    {
                        "name": "providerNames",
                        "in": "query",
                        "description": "Filter for enrollments associated with specific provider names. You can include this parameter multiple times to filter for multiple names.\n\nFor example, `?providerNames=John%20Doe&providerNames=Jane%20Doe` returns enrollments associated with either John Doe or Jane Doe.\n\nThis search is case-sensitive and doesn't support fuzzy matching. The name you provide must match the provider's name exactly, including spaces and capitalization.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter for enrollments associated with specific provider names. You can include this parameter multiple times to filter for multiple names.\n\nFor example, `?providerNames=John%20Doe&providerNames=Jane%20Doe` returns enrollments associated with either John Doe or Jane Doe.\n\nThis search is case-sensitive and doesn't support fuzzy matching. The name you provide must match the provider's name exactly, including spaces and capitalization."
                        },
                        "explode": true
                    },
                    {
                        "name": "payerIds",
                        "in": "query",
                        "description": "Filter for enrollments associated with specific [Stedi payer IDs](https://www.stedi.com/docs/healthcare/supported-payers#stedi-payer-id). You can include this parameter multiple times to filter for multiple payer IDs.\n\nFor example, `?payerIds=HGJLR&payerIds=EWDCI` returns enrollments associated with either of the specified payer IDs.\n\nThis parameter only supports Stedi payer IDs, not primary payer IDs or aliases. It also doesn't support fuzzy matching. The payer ID you provide must match the Stedi payer ID exactly, including capitalization.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter for enrollments associated with specific [Stedi payer IDs](https://www.stedi.com/docs/healthcare/supported-payers#stedi-payer-id). You can include this parameter multiple times to filter for multiple payer IDs.\n\nFor example, `?payerIds=HGJLR&payerIds=EWDCI` returns enrollments associated with either of the specified payer IDs.\n\nThis parameter only supports Stedi payer IDs, not primary payer IDs or aliases. It also doesn't support fuzzy matching. The payer ID you provide must match the Stedi payer ID exactly, including capitalization."
                        },
                        "explode": true
                    },
                    {
                        "name": "sources",
                        "in": "query",
                        "description": "Filter for enrollments submitted through specific sources, such as the API or UI. You can include this parameter multiple times to filter for multiple sources.\n\nFor example, `?sources=API&sources=UI` returns enrollments submitted through either of the specified sources.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/EnrollmentSource"
                            },
                            "description": "Filter for enrollments submitted through specific sources, such as the API or UI. You can include this parameter multiple times to filter for multiple sources.\n\nFor example, `?sources=API&sources=UI` returns enrollments submitted through either of the specified sources."
                        },
                        "explode": true
                    },
                    {
                        "name": "transactions",
                        "in": "query",
                        "description": "Filter for enrollments for specific transaction types. You can include this parameter multiple times to filter for multiple types.\n\nFor example, `?transactions=eligibilityCheck&transactions=claimStatus` returns enrollments for both 270/271 eligibility checks and 276/277 real-time claim status.",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TransactionType"
                            },
                            "description": "Filter for enrollments for specific transaction types. You can include this parameter multiple times to filter for multiple types.\n\nFor example, `?transactions=eligibilityCheck&transactions=claimStatus` returns enrollments for both 270/271 eligibility checks and 276/277 real-time claim status."
                        },
                        "explode": true
                    },
                    {
                        "name": "createdFrom",
                        "in": "query",
                        "description": "Filter for enrollments created from a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi returns enrollments with a `createdAt` timestamp on or after this date.",
                        "schema": {
                            "type": "string",
                            "description": "Filter for enrollments created from a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi returns enrollments with a `createdAt` timestamp on or after this date.",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "createdTo",
                        "in": "query",
                        "description": "Filter for enrollments created before a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi only returns enrollments with a `createdAt` timestamp before this date.\n\nThe time must be later than `createdFrom`, if present.",
                        "schema": {
                            "type": "string",
                            "description": "Filter for enrollments created before a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi only returns enrollments with a `createdAt` timestamp before this date.\n\nThe time must be later than `createdFrom`, if present.",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "statusUpdatedFrom",
                        "in": "query",
                        "description": "Filter for enrollments whose status was last updated from a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi returns enrollments with a `statusLastUpdatedAt` timestamp on or after this date.",
                        "schema": {
                            "type": "string",
                            "description": "Filter for enrollments whose status was last updated from a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi returns enrollments with a `statusLastUpdatedAt` timestamp on or after this date.",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "statusUpdatedTo",
                        "in": "query",
                        "description": "Filter for enrollments whose status was last updated before a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi only returns enrollments with a `statusLastUpdatedAt` before this date.\n\nThe time must be later than `statusUpdatedFrom`, if present.",
                        "schema": {
                            "type": "string",
                            "description": "Filter for enrollments whose status was last updated before a specific date.\n\nFor example, if you set this to `2025-01-01T00:00:00Z`, Stedi only returns enrollments with a `statusLastUpdatedAt` before this date.\n\nThe time must be later than `statusUpdatedFrom`, if present.",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "importId",
                        "in": "query",
                        "description": "The import ID associated with an enrollment through a CSV bulk import. This ID is only available for enrollments created through the CSV import process.",
                        "schema": {
                            "type": "string",
                            "description": "The import ID associated with an enrollment through a CSV bulk import. This ID is only available for enrollments created through the CSV import process."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListEnrollments 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListEnrollmentsResponseContent"
                                },
                                "examples": {
                                    "ListEnrollments_example1": {
                                        "summary": "List Enrollments",
                                        "description": "",
                                        "value": {
                                            "nextPageToken": "945ff6de213d3ef481d028065d4c12fb996a166a3a90ef98564318decfae50ce4b36d74b7e9d9bafa6e1d169",
                                            "items": [
                                                {
                                                    "id": "db6675c5-7bg7-4af9-8c68-a54a336d2911",
                                                    "provider": {
                                                        "name": "Test Medical Provider",
                                                        "id": "db6665c5-7b97-4af9-8c68-a00a336c2998",
                                                        "npi": "1234567890",
                                                        "taxId": "123456789",
                                                        "taxIdType": "EIN"
                                                    },
                                                    "payer": {
                                                        "name": "UnitedHealthcare",
                                                        "stediPayerId": "87726"
                                                    },
                                                    "transactions": {
                                                        "claimPayment": {
                                                            "enroll": true
                                                        }
                                                    },
                                                    "status": "LIVE",
                                                    "source": "API",
                                                    "statusLastUpdatedAt": "2025-05-01T12:00:00Z",
                                                    "createdAt": "2025-04-01T12:00:00Z",
                                                    "updatedAt": "2025-05-01T12:00:00Z",
                                                    "documents": [
                                                        {
                                                            "id": "dc6665a5-7b97-4agh-8c74-a00a336c2989",
                                                            "enrollmentId": "db6675c5-7bg7-4af9-8c68-a54a336d2911",
                                                            "status": "UPLOADED",
                                                            "name": "pdf-agreement.pdf",
                                                            "createdAt": "2025-04-01T12:00:00Z",
                                                            "updatedAt": "2025-04-02T12:00:00Z"
                                                        }
                                                    ],
                                                    "history": [
                                                        {
                                                            "newStatus": "DRAFT",
                                                            "changedBy": "user@example.com",
                                                            "changedAt": "2025-04-15T09:00:00Z",
                                                            "type": "STATUS_CHANGE"
                                                        },
                                                        {
                                                            "previousStatus": "DRAFT",
                                                            "newStatus": "SUBMITTED",
                                                            "changedBy": "user@example.com",
                                                            "changedAt": "2025-04-15T09:05:00Z",
                                                            "type": "STATUS_CHANGE"
                                                        },
                                                        {
                                                            "previousStatus": "SUBMITTED",
                                                            "newStatus": "PROVISIONING",
                                                            "changedBy": "system",
                                                            "changedAt": "2025-04-20T14:30:00Z",
                                                            "type": "STATUS_CHANGE"
                                                        },
                                                        {
                                                            "previousStatus": "PROVISIONING",
                                                            "newStatus": "LIVE",
                                                            "changedBy": "system",
                                                            "changedAt": "2025-05-01T12:00:00Z",
                                                            "type": "STATUS_CHANGE"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new transaction enrollment request. Transaction enrollment registers a provider to exchange specific transaction types with a payer.",
                "operationId": "CreateEnrollment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEnrollmentRequestContent"
                            },
                            "examples": {
                                "CreateEnrollment_example1": {
                                    "summary": "Create Enrollment",
                                    "description": "",
                                    "value": {
                                        "transactions": {
                                            "claimPayment": {
                                                "enroll": true
                                            }
                                        },
                                        "primaryContact": {
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "email": "test@example.com",
                                            "phone": "555-123-34354",
                                            "streetAddress1": "123 Some Str.",
                                            "city": "A City",
                                            "state": "MD",
                                            "zipCode": "20814"
                                        },
                                        "userEmail": "test@example.com",
                                        "payer": {
                                            "idOrAlias": "87726"
                                        },
                                        "provider": {
                                            "id": "db6665c5-7b97-4af9-8c68-a00a336c2998"
                                        },
                                        "source": "API",
                                        "status": "SUBMITTED"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "CreateEnrollment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateEnrollmentResponseContent"
                                },
                                "examples": {
                                    "CreateEnrollment_example1": {
                                        "summary": "Create Enrollment",
                                        "description": "",
                                        "value": {
                                            "id": "db6675c5-7bg7-4af9-8c68-a54a336d2911",
                                            "primaryContact": {
                                                "firstName": "John",
                                                "lastName": "Doe",
                                                "email": "test@example.com",
                                                "phone": "555-123-34354",
                                                "streetAddress1": "123 Some Str.",
                                                "city": "A City",
                                                "state": "MD",
                                                "zipCode": "20814"
                                            },
                                            "userEmail": "test@example.com",
                                            "createdAt": "2023-11-07T05:31:56Z",
                                            "updatedAt": "2023-11-07T05:31:56Z",
                                            "submittedAt": "2023-11-07T05:31:56Z",
                                            "transactions": {
                                                "claimPayment": {
                                                    "enroll": true
                                                }
                                            },
                                            "status": "SUBMITTED",
                                            "provider": {
                                                "name": "Test Medical Provider",
                                                "id": "db6665c5-7b97-4af9-8c68-a00a336c2998",
                                                "npi": "1234567890",
                                                "taxId": "123456789",
                                                "taxIdType": "EIN"
                                            },
                                            "payer": {
                                                "name": "UnitedHealthcare",
                                                "stediPayerId": "87726"
                                            },
                                            "source": "API",
                                            "statusLastUpdatedAt": "2023-11-07T05:31:56Z",
                                            "history": [
                                                {
                                                    "newStatus": "DRAFT",
                                                    "changedBy": "test@example.com",
                                                    "changedAt": "2023-11-07T05:31:56Z",
                                                    "type": "STATUS_CHANGE"
                                                },
                                                {
                                                    "previousStatus": "DRAFT",
                                                    "newStatus": "SUBMITTED",
                                                    "changedBy": "test@example.com",
                                                    "changedAt": "2023-11-07T05:31:56Z",
                                                    "type": "STATUS_CHANGE"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enrollments/export": {
            "post": {
                "description": "Exports enrollment records as a CSV file with optional filtering. Supports the same filtering parameters as ListEnrollments operation. Returns a presigned URL to download the generated CSV file from S3.",
                "operationId": "ExportEnrollmentsCsv",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportEnrollmentsCsvRequestContent"
                            },
                            "examples": {
                                "ExportEnrollmentsCsv_example1": {
                                    "summary": "Export All Enrollments as CSV",
                                    "description": "",
                                    "value": {}
                                },
                                "ExportEnrollmentsCsv_example2": {
                                    "summary": "Export Filtered Enrollments as CSV",
                                    "description": "",
                                    "value": {
                                        "status": [
                                            "LIVE",
                                            "SUBMITTED"
                                        ],
                                        "createdFrom": "2025-01-01T00:00:00Z",
                                        "createdTo": "2025-12-31T23:59:59Z"
                                    }
                                },
                                "ExportEnrollmentsCsv_example3": {
                                    "summary": "No Enrollments Found",
                                    "description": "",
                                    "value": {
                                        "status": [
                                            "CANCELED"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ExportEnrollmentsCsv 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportEnrollmentsCsvResponseContent"
                                },
                                "examples": {
                                    "ExportEnrollmentsCsv_example1": {
                                        "summary": "Export All Enrollments as CSV",
                                        "description": "",
                                        "value": {
                                            "downloadUrl": "https://s3.amazonaws.com/stedi-enrollment-exports/stedi_enrollment_records_export_20250625.csv?presigned-params",
                                            "filename": "stedi_enrollment_records_export_20250625.csv",
                                            "recordCount": 150
                                        }
                                    },
                                    "ExportEnrollmentsCsv_example2": {
                                        "summary": "Export Filtered Enrollments as CSV",
                                        "description": "",
                                        "value": {
                                            "downloadUrl": "https://s3.amazonaws.com/stedi-enrollment-exports/stedi_enrollment_records_export_20250625.csv?presigned-params",
                                            "filename": "stedi_enrollment_records_export_20250625.csv",
                                            "recordCount": 75
                                        }
                                    },
                                    "ExportEnrollmentsCsv_example3": {
                                        "summary": "No Enrollments Found",
                                        "description": "",
                                        "value": {
                                            "recordCount": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enrollments/{enrollmentId}": {
            "delete": {
                "description": "Deletes an enrollment request. Only enrollments in DRAFT status can be deleted. This operation is idempotent.",
                "operationId": "DeleteEnrollment",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the enrollment you want to delete.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the enrollment you want to delete."
                        },
                        "required": true,
                        "examples": {
                            "DeleteEnrollment_example1": {
                                "summary": "Delete Enrollment",
                                "description": "",
                                "value": "db6675c5-7bg7-4af9-8c68-a54a336d2911"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DeleteEnrollment 200 response"
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves an enrollment request by its ID. This operation returns the complete enrollment details including provider and payer information.",
                "operationId": "GetEnrollment",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the enrollment you want to retrieve.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the enrollment you want to retrieve."
                        },
                        "required": true,
                        "examples": {
                            "GetEnrollment_example1": {
                                "summary": "Get Enrollment",
                                "description": "",
                                "value": "db6675c5-7bg7-4af9-8c68-a54a336d2911"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetEnrollment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEnrollmentResponseContent"
                                },
                                "examples": {
                                    "GetEnrollment_example1": {
                                        "summary": "Get Enrollment",
                                        "description": "",
                                        "value": {
                                            "id": "db6675c5-7bg7-4af9-8c68-a54a336d2911",
                                            "primaryContact": {
                                                "firstName": "John",
                                                "lastName": "Doe",
                                                "email": "test@example.com",
                                                "phone": "555-123-34354",
                                                "streetAddress1": "123 Some Str.",
                                                "city": "A City",
                                                "state": "MD",
                                                "zipCode": "20814"
                                            },
                                            "userEmail": "test@example.com",
                                            "createdAt": "2023-11-07T05:31:56Z",
                                            "updatedAt": "2023-11-07T05:31:56Z",
                                            "submittedAt": "2023-11-07T05:31:56Z",
                                            "transactions": {
                                                "professionalClaimSubmission": {
                                                    "enroll": true
                                                }
                                            },
                                            "status": "PROVISIONING",
                                            "provider": {
                                                "name": "Test Medical Provider",
                                                "id": "db6665c5-7b97-4af9-8c68-a00a336c2998",
                                                "npi": "1234567890",
                                                "taxId": "123456789",
                                                "taxIdType": "EIN"
                                            },
                                            "payer": {
                                                "name": "UnitedHealthcare",
                                                "stediPayerId": "87726"
                                            },
                                            "source": "API",
                                            "statusLastUpdatedAt": "2023-11-07T06:15:22Z",
                                            "documents": [
                                                {
                                                    "id": "dc6665a5-7b97-4agh-8c74-a00a336c2989",
                                                    "enrollmentId": "db6675c5-7bg7-4af9-8c68-a54a336d2911",
                                                    "status": "UPLOADED",
                                                    "name": "pdf-agreement.pdf",
                                                    "createdAt": "2025-04-01T12:00:00Z",
                                                    "updatedAt": "2025-04-02T12:00:00Z"
                                                }
                                            ],
                                            "history": [
                                                {
                                                    "newStatus": "DRAFT",
                                                    "changedBy": "user@example.com",
                                                    "changedAt": "2023-11-07T05:31:56Z",
                                                    "type": "STATUS_CHANGE"
                                                },
                                                {
                                                    "previousStatus": "DRAFT",
                                                    "newStatus": "SUBMITTED",
                                                    "changedBy": "user@example.com",
                                                    "changedAt": "2023-11-07T05:31:56Z",
                                                    "type": "STATUS_CHANGE"
                                                },
                                                {
                                                    "previousStatus": "SUBMITTED",
                                                    "newStatus": "PROVISIONING",
                                                    "changedBy": "system",
                                                    "changedAt": "2023-11-07T06:15:22Z",
                                                    "type": "STATUS_CHANGE"
                                                }
                                            ],
                                            "tasks": [
                                                {
                                                    "id": "ac6665a5-7b97-4agh-8c74-a00a336c2989",
                                                    "responsibleParty": "PROVIDER",
                                                    "rank": 0,
                                                    "definition": {
                                                        "followInstructions": {
                                                            "instructions": "Upload a document to support your enrollment."
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Updates an existing enrollment request. Only enrollments in DRAFT status can be updated. Once an enrollment is submitted, it cannot be modified.",
                "operationId": "UpdateEnrollment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEnrollmentRequestContent"
                            },
                            "examples": {
                                "UpdateEnrollment_example1": {
                                    "summary": "Update Enrollment",
                                    "description": "",
                                    "value": {
                                        "status": "SUBMITTED",
                                        "transactions": {
                                            "claimPayment": {
                                                "enroll": true
                                            }
                                        },
                                        "primaryContact": {
                                            "firstName": "Updated First Name",
                                            "lastName": "Updated Last Name",
                                            "email": "test@example.com",
                                            "phone": "333-123-34354",
                                            "streetAddress1": "123 Some Str.",
                                            "city": "A City",
                                            "state": "MD",
                                            "zipCode": "20814"
                                        },
                                        "userEmail": "test@example.com",
                                        "payer": {
                                            "idOrAlias": "87726"
                                        },
                                        "provider": {
                                            "id": "db6665c5-7b97-4af9-8c68-a00a336c2998"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the enrollment.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the enrollment."
                        },
                        "required": true,
                        "examples": {
                            "UpdateEnrollment_example1": {
                                "summary": "Update Enrollment",
                                "description": "",
                                "value": "db6675c5-7bg7-4af9-8c68-a54a336d2911"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateEnrollment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateEnrollmentResponseContent"
                                },
                                "examples": {
                                    "UpdateEnrollment_example1": {
                                        "summary": "Update Enrollment",
                                        "description": "",
                                        "value": {
                                            "id": "db6675c5-7bg7-4af9-8c68-a54a336d2911",
                                            "primaryContact": {
                                                "firstName": "Updated First Name",
                                                "lastName": "Updated Last Name",
                                                "email": "test@example.com",
                                                "phone": "333-123-34354",
                                                "streetAddress1": "123 Some Str.",
                                                "city": "A City",
                                                "state": "MD",
                                                "zipCode": "20814"
                                            },
                                            "userEmail": "test@example.com",
                                            "createdAt": "2024-11-07T05:31:56Z",
                                            "updatedAt": "2024-11-18T07:25:42Z",
                                            "transactions": {
                                                "claimPayment": {
                                                    "enroll": true
                                                }
                                            },
                                            "status": "SUBMITTED",
                                            "provider": {
                                                "id": "db6665c5-7b97-4af9-8c68-a00a336c2998",
                                                "name": "Test Medical Provider",
                                                "npi": "1234567890",
                                                "taxId": "123456789",
                                                "taxIdType": "EIN"
                                            },
                                            "payer": {
                                                "name": "UnitedHealthcare",
                                                "stediPayerId": "87726"
                                            },
                                            "source": "API",
                                            "statusLastUpdatedAt": "2024-11-07T05:31:56Z",
                                            "history": [
                                                {
                                                    "newStatus": "SUBMITTED",
                                                    "changedBy": "test@example.com",
                                                    "changedAt": "2025-11-07T05:31:56Z",
                                                    "type": "STATUS_CHANGE"
                                                },
                                                {
                                                    "newStatus": "DRAFT",
                                                    "changedBy": "test@example.com",
                                                    "changedAt": "2024-11-07T05:31:56Z",
                                                    "type": "STATUS_CHANGE"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enrollments/{enrollmentId}/tasks/{taskId}": {
            "put": {
                "description": "Completes a task associated with an enrollment.",
                "operationId": "CompleteTask",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the enrollment.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the enrollment."
                        },
                        "required": true
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the task to complete.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the task to complete."
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "CompleteTask 204 response"
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "description": "Lists providers with optional filtering and pagination.",
                "operationId": "ListProviders",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of elements to return in a page. If not specified, the default is 100.",
                        "schema": {
                            "type": "number",
                            "maximum": 500,
                            "minimum": 1,
                            "description": "The maximum number of elements to return in a page. If not specified, the default is 100."
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "description": "An opaque token returned by a previous call to this endpoint in the `nextPageToken` property. You can use it to request the next page of results. If not specified, Stedi returns the first page of results.",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1,
                            "description": "An opaque token returned by a previous call to this endpoint in the `nextPageToken` property. You can use it to request the next page of results. If not specified, Stedi returns the first page of results."
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter for providers with properties matching a query string. You can provide all or part of a provider name, NPI, or tax ID. The search is case-insensitive and supports fuzzy matching.\n\nFor example, providing `?filter=OS` returns providers with names containing `os` (such as `Joseph`).",
                        "schema": {
                            "type": "string",
                            "description": "Filter for providers with properties matching a query string. You can provide all or part of a provider name, NPI, or tax ID. The search is case-insensitive and supports fuzzy matching.\n\nFor example, providing `?filter=OS` returns providers with names containing `os` (such as `Joseph`)."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListProviders 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProvidersResponseContent"
                                },
                                "examples": {
                                    "ListProviders_example1": {
                                        "summary": "List Providers",
                                        "description": "",
                                        "value": {
                                            "items": [
                                                {
                                                    "id": "10334e76-f073-4b5d-8984-81d8e5107857",
                                                    "name": "BDQ Dental Inc",
                                                    "npi": "1999999992",
                                                    "taxIdType": "EIN",
                                                    "taxId": "555123456"
                                                },
                                                {
                                                    "id": "10234e76-f067-4b5d-8984-81d8e5107123",
                                                    "name": "Example Medical Associates",
                                                    "npi": "1999999984",
                                                    "taxIdType": "EIN",
                                                    "taxId": "100100111"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new provider record. Providers must be created before they can be enrolled with payers.",
                "operationId": "CreateProvider",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProviderRequestContent"
                            },
                            "examples": {
                                "CreateProvider_example1": {
                                    "summary": "Create Provider",
                                    "description": "",
                                    "value": {
                                        "name": "BDQ Dental Inc",
                                        "npi": "1999999992",
                                        "taxIdType": "EIN",
                                        "taxId": "555123456",
                                        "contacts": [
                                            {
                                                "firstName": "Bob",
                                                "lastName": "Dentist",
                                                "email": "bob@fortdental.center",
                                                "phone": "555-123-2135",
                                                "streetAddress1": "123 Some Str",
                                                "city": "Chevy Chase",
                                                "zipCode": "20814",
                                                "state": "MD"
                                            },
                                            {
                                                "firstName": "Tom",
                                                "lastName": "Dentist",
                                                "email": "tom@fortdental.center",
                                                "phone": "555-123-2133",
                                                "streetAddress1": "123 Some Str",
                                                "city": "Chevy Chase",
                                                "zipCode": "20814",
                                                "state": "MD"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "CreateProvider 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProviderResponseContent"
                                },
                                "examples": {
                                    "CreateProvider_example1": {
                                        "summary": "Create Provider",
                                        "description": "",
                                        "value": {
                                            "createdAt": "2024-11-18T17:39:52.406Z",
                                            "id": "10334e76-f073-4b5d-8984-81d8e5107857",
                                            "name": "BDQ Dental Inc",
                                            "npi": "1999999992",
                                            "taxId": "555123456",
                                            "taxIdType": "EIN",
                                            "updatedAt": "2024-11-18T17:39:52.406Z",
                                            "contacts": [
                                                {
                                                    "organizationName": "",
                                                    "firstName": "Bob",
                                                    "lastName": "Dentist",
                                                    "email": "bob@fortdental.center",
                                                    "phone": "555-123-2135",
                                                    "streetAddress1": "123 Some Str",
                                                    "city": "Chevy Chase",
                                                    "zipCode": "20814",
                                                    "state": "MD"
                                                },
                                                {
                                                    "organizationName": "",
                                                    "firstName": "Tom",
                                                    "lastName": "Dentist",
                                                    "email": "tom@fortdental.center",
                                                    "phone": "555-123-2133",
                                                    "streetAddress1": "123 Some Str",
                                                    "city": "Chevy Chase",
                                                    "zipCode": "20814",
                                                    "state": "MD"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/providers/{providerId}": {
            "delete": {
                "description": "Deletes a provider record. Providers can only be deleted if they have no associated enrollments. This operation is idempotent.",
                "operationId": "DeleteProvider",
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the provider you want to delete.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the provider you want to delete."
                        },
                        "required": true,
                        "examples": {
                            "DeleteProvider_example1": {
                                "summary": "Delete Provider",
                                "description": "",
                                "value": "10334e76-f073-4b5d-8984-81d8e5107857"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DeleteProvider 200 response"
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves a provider record by its ID. This operation returns the complete provider details including contact information.",
                "operationId": "GetProvider",
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "The unique ID Stedi assigned to the provider when it was created in the system.",
                        "schema": {
                            "type": "string",
                            "description": "The unique ID Stedi assigned to the provider when it was created in the system."
                        },
                        "required": true,
                        "examples": {
                            "GetProvider_example1": {
                                "summary": "Get Provider",
                                "description": "",
                                "value": "10334e76-f073-4b5d-8984-81d8e5107857"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetProvider 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProviderResponseContent"
                                },
                                "examples": {
                                    "GetProvider_example1": {
                                        "summary": "Get Provider",
                                        "description": "",
                                        "value": {
                                            "createdAt": "2024-11-18T17:39:52.406Z",
                                            "id": "10334e76-f073-4b5d-8984-81d8e5107857",
                                            "name": "BDQ Dental Inc",
                                            "npi": "1999999992",
                                            "taxId": "555123456",
                                            "taxIdType": "EIN",
                                            "updatedAt": "2024-11-18T17:39:52.406Z",
                                            "contacts": [
                                                {
                                                    "organizationName": "",
                                                    "firstName": "Bob",
                                                    "lastName": "Dentist",
                                                    "email": "bob@fortdental.center",
                                                    "phone": "555-123-213342",
                                                    "streetAddress1": "123 Some Str",
                                                    "city": "Chevy Chase",
                                                    "zipCode": "20814",
                                                    "state": "MD"
                                                },
                                                {
                                                    "organizationName": "",
                                                    "firstName": "Tom",
                                                    "lastName": "Dentist",
                                                    "email": "tom@fortdental.center",
                                                    "phone": "555-123-213342",
                                                    "streetAddress1": "123 Some Str",
                                                    "city": "Chevy Chase",
                                                    "zipCode": "20814",
                                                    "state": "MD"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Updates an existing provider's information. Note that NPI and tax ID cannot be changed after creation.",
                "operationId": "UpdateProvider",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProviderRequestContent"
                            },
                            "examples": {
                                "UpdateProvider_example1": {
                                    "summary": "Update Provider",
                                    "description": "",
                                    "value": {
                                        "name": "TEST Updated Dental Inc",
                                        "contacts": [
                                            {
                                                "firstName": "Test",
                                                "lastName": "Tester",
                                                "email": "bob@fortdental.center",
                                                "phone": "555-123-213342",
                                                "streetAddress1": "123 Some Str",
                                                "city": "A City",
                                                "zipCode": "12345",
                                                "state": "WA"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "The Stedi-assigned identifier for the provider you want to update.",
                        "schema": {
                            "type": "string",
                            "description": "The Stedi-assigned identifier for the provider you want to update."
                        },
                        "required": true,
                        "examples": {
                            "UpdateProvider_example1": {
                                "summary": "Update Provider",
                                "description": "",
                                "value": "10334e76-f073-4b5d-8984-81d8e5107857"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateProvider 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateProviderResponseContent"
                                },
                                "examples": {
                                    "UpdateProvider_example1": {
                                        "summary": "Update Provider",
                                        "description": "",
                                        "value": {
                                            "createdAt": "2024-11-18T17:39:52.406Z",
                                            "id": "10334e76-f073-4b5d-8984-81d8e5107857",
                                            "name": "TEST Updated Dental Inc",
                                            "npi": "1999999999",
                                            "taxId": "111222333",
                                            "taxIdType": "EIN",
                                            "updatedAt": "2024-11-19T19:24:33.246Z",
                                            "contacts": [
                                                {
                                                    "organizationName": "",
                                                    "firstName": "Test",
                                                    "lastName": "Tester",
                                                    "email": "bob@fortdental.center",
                                                    "phone": "555-123-213342",
                                                    "streetAddress1": "123 Some Str",
                                                    "city": "A City",
                                                    "zipCode": "12345",
                                                    "state": "WA"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedException 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "AccessDeniedException 403 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalFailureException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessDeniedExceptionResponseContent": {
                "type": "object",
                "description": "The server response for authorization failure.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Human-readable error message"
                    },
                    "code": {
                        "type": "string",
                        "description": "Error classification code"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "AllEnrolledProviderFields": {
                "type": "object",
                "description": "Complete provider information including both read-only and mutable fields.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The provider's name, such as `Example Dental Associates, LLC`."
                    },
                    "npi": {
                        "type": "string",
                        "description": "The provider's National Provider Identifier (NPI). This is a 10-digit number assigned by the Centers for Medicare & Medicaid Services (CMS) to healthcare providers in the United States. It is used to identify providers in healthcare transactions."
                    },
                    "taxId": {
                        "type": "string",
                        "description": "The provider's tax identification number (SSN or EIN). This is used to identify the provider for tax and administrative purposes."
                    },
                    "taxIdType": {
                        "type": "string",
                        "description": "The type of tax identification number. This indicates whether the tax ID is a Social Security Number (SSN) or Employer Identification Number (EIN)."
                    },
                    "id": {
                        "type": "string",
                        "description": "The Stedi-assigned identifier for the provider. The [Create Provider](https://www.stedi.com/docs/api-reference/healthcare/post-enrollment-create-provider) endpoint returns this as the `id` property."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "npi",
                    "taxId",
                    "taxIdType"
                ]
            },
            "CreateEnrollmentRequestContent": {
                "type": "object",
                "description": "Input for CreateEnrollment.",
                "properties": {
                    "transactions": {
                        "$ref": "#/components/schemas/EnrolledTransactionsList",
                        "description": "The type of transactions included in the enrollment."
                    },
                    "primaryContact": {
                        "$ref": "#/components/schemas/ProviderContact",
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number or email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    },
                    "userEmail": {
                        "type": "string",
                        "minLength": 5,
                        "pattern": "^\\S+@\\S+\\.\\S+$",
                        "description": "The email address where Stedi should send updates about the enrollment. We'll use it to notify you when there are next steps and send updates on the enrollment's status.\n\nThis email address can be different from the `primaryContact.email` where the payer sends communications about the enrollment."
                    },
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status of the enrollment. You can submit enrollments with either `DRAFT` or `STEDI_ACTION_REQUIRED` status - the default is `DRAFT` if not included. Set this to `STEDI_ACTION_REQUIRED` when you're ready for Stedi to begin processing the enrollment. Once an enrollment is `STEDI_ACTION_REQUIRED`, only Stedi can set or update its status.\n  - `DRAFT` - You are still editing the record and it has not been submitted to Stedi.\n  - `STEDI_ACTION_REQUIRED` - You have submitted the enrollment and it is ready for Stedi to begin processing.\n  - `PROVIDER_ACTION_REQUIRED` - The enrollment requires action from the healthcare provider to proceed, such as providing additional documentation. Stedi will add a note to your enrollment request with clear instructions.\n  - `SUBMITTED` - (Deprecated) Legacy status being phased out in favor of the more specific action-required statuses.\n  - `PROVISIONING` - Stedi has begun the process of completing the enrollment with the payer.\n  - `LIVE` - The enrollment process is complete, and the specified provider can begin exchanging the listed transaction types with the payer.\n  - `REJECTED` - The payer rejected the enrollment. Common reasons for rejection include incorrect details in the request and that the provider is not credentialed with the payer. Customer support will contact you with reasons for rejection and next steps.\n  - `CANCELED` - The enrollment has been terminated per customer or provider request."
                    },
                    "source": {
                        "$ref": "#/components/schemas/EnrollmentSource",
                        "description": "The source of this enrollment."
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reasons why the enrollment request is still in `PROVISIONING` status, may take additional time to process, or was rejected by the payer. Only Stedi can set or update this property. \n\n May contain extra required steps for processing that are specific to the payer. For example, perhaps the provider needs to log into an online portal and enter additional information before the enrollment can continue. Contact Stedi customer support with questions."
                    },
                    "internalNote": {
                        "type": "string",
                        "description": "Internal notes about the enrollment. Only Stedi can read, set, or update this property."
                    },
                    "internal_note_camel_case": {
                        "type": "string",
                        "description": "Deprecated, use internalNote instead."
                    },
                    "providerTransactionAccessNumber": {
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 5,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "description": "This property is required for payers that require a Provider Transaction Access Number (PTAN).\n\nThe PTAN is a Medicare-issued number given to providers upon enrollment with Medicare. This number is usually six digits and is assigned based on the type of service and the location of the provider. Upon enrollment, Medicare Administrating Contracting (MAC) providers should receive their assigned PTAN number in their approval letter."
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "description": "Tasks associated with this enrollment representing work that needs to be completed. Each task has a responsible party and specific definition."
                    },
                    "provider": {
                        "$ref": "#/components/schemas/EnrolledProviderInput",
                        "description": "Information about the provider enrolling with the payer. You **must** use the [Create Provider](https://www.stedi.com/docs/api-reference/healthcare/post-enrollment-create-provider) endpoint to add the provider to Stedi before you can enroll them with one or more payers."
                    },
                    "payer": {
                        "$ref": "#/components/schemas/EnrolledPayerInput",
                        "description": "Information about the payer the provider is enrolling with."
                    }
                },
                "required": [
                    "payer",
                    "primaryContact",
                    "provider",
                    "transactions",
                    "userEmail"
                ]
            },
            "CreateEnrollmentResponseContent": {
                "type": "object",
                "description": "Output containing the created enrollment details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Stedi-assigned identifier for the enrollment request."
                    },
                    "primaryContact": {
                        "$ref": "#/components/schemas/ProviderContact",
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number or email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was created within Stedi.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was updated.",
                        "format": "date-time"
                    },
                    "submittedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was submitted. If the enrollment is in `DRAFT` status, `submittedAt` is not present. When the enrollment transitions from draft to `STEDI_ACTION_REQUIRED`, `submittedAt` is updated to the submission time. If the enrollment was created and submitted immediately, the `submittedAt` time will be equal or close to the `createdAt` time.",
                        "format": "date-time"
                    },
                    "statusLastUpdatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment status was last updated. This timestamp is used to track enrollment processing durations and enables filtering to identify recently changed enrollments. It automatically updates whenever an enrollment's status changes but remains unchanged during other updates.",
                        "format": "date-time"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentHistoryEntry"
                        },
                        "description": "The history of updates to this enrollment, such as status changes. This property is experimental and may change in the future."
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentDocument"
                        },
                        "description": "Documents associated with this enrollment, excluding deleted documents."
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/EnrolledTransactionsList",
                        "description": "The type of transactions included in the enrollment."
                    },
                    "userEmail": {
                        "type": "string",
                        "minLength": 5,
                        "pattern": "^\\S+@\\S+\\.\\S+$",
                        "description": "The email address where Stedi should send updates about the enrollment. We'll use it to notify you when there are next steps and send updates on the enrollment's status.\n\nThis email address can be different from the `primaryContact.email` where the payer sends communications about the enrollment."
                    },
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status of the enrollment. You can submit enrollments with either `DRAFT` or `STEDI_ACTION_REQUIRED` status - the default is `DRAFT` if not included. Set this to `STEDI_ACTION_REQUIRED` when you're ready for Stedi to begin processing the enrollment. Once an enrollment is `STEDI_ACTION_REQUIRED`, only Stedi can set or update its status.\n  - `DRAFT` - You are still editing the record and it has not been submitted to Stedi.\n  - `STEDI_ACTION_REQUIRED` - You have submitted the enrollment and it is ready for Stedi to begin processing.\n  - `PROVIDER_ACTION_REQUIRED` - The enrollment requires action from the healthcare provider to proceed, such as providing additional documentation. Stedi will add a note to your enrollment request with clear instructions.\n  - `SUBMITTED` - (Deprecated) Legacy status being phased out in favor of the more specific action-required statuses.\n  - `PROVISIONING` - Stedi has begun the process of completing the enrollment with the payer.\n  - `LIVE` - The enrollment process is complete, and the specified provider can begin exchanging the listed transaction types with the payer.\n  - `REJECTED` - The payer rejected the enrollment. Common reasons for rejection include incorrect details in the request and that the provider is not credentialed with the payer. Customer support will contact you with reasons for rejection and next steps.\n  - `CANCELED` - The enrollment has been terminated per customer or provider request."
                    },
                    "source": {
                        "$ref": "#/components/schemas/EnrollmentSource",
                        "description": "The source of this enrollment."
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reasons why the enrollment request is still in `PROVISIONING` status, may take additional time to process, or was rejected by the payer. Only Stedi can set or update this property. \n\n May contain extra required steps for processing that are specific to the payer. For example, perhaps the provider needs to log into an online portal and enter additional information before the enrollment can continue. Contact Stedi customer support with questions."
                    },
                    "internalNote": {
                        "type": "string",
                        "description": "Internal notes about the enrollment. Only Stedi can read, set, or update this property."
                    },
                    "internal_note_camel_case": {
                        "type": "string",
                        "description": "Deprecated, use internalNote instead."
                    },
                    "providerTransactionAccessNumber": {
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 5,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "description": "This property is required for payers that require a Provider Transaction Access Number (PTAN).\n\nThe PTAN is a Medicare-issued number given to providers upon enrollment with Medicare. This number is usually six digits and is assigned based on the type of service and the location of the provider. Upon enrollment, Medicare Administrating Contracting (MAC) providers should receive their assigned PTAN number in their approval letter."
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "description": "Tasks associated with this enrollment representing work that needs to be completed. Each task has a responsible party and specific definition."
                    },
                    "provider": {
                        "$ref": "#/components/schemas/AllEnrolledProviderFields",
                        "description": "Information about the provider enrolling with the payer."
                    },
                    "payer": {
                        "$ref": "#/components/schemas/EnrolledPayerOutput",
                        "description": "Information about the payer the provider is enrolling with."
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "payer",
                    "primaryContact",
                    "provider",
                    "statusLastUpdatedAt",
                    "transactions",
                    "updatedAt",
                    "userEmail"
                ]
            },
            "CreateProviderRequestContent": {
                "type": "object",
                "description": "Information about the provider you want to add to your account. The provider **must** have a unique NPI from other providers in your account.",
                "properties": {
                    "npi": {
                        "type": "string",
                        "pattern": "^[0-9]{10}$",
                        "description": "The provider's [National Provider Identifier (NPI)](https://npiregistry.cms.hhs.gov/search). This is a 10-digit number that is unique to the provider.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `npi` as long as they have different values for `taxId`."
                    },
                    "taxIdType": {
                        "$ref": "#/components/schemas/TaxIdType",
                        "description": "The type of tax ID. Can be either an `EIN` - Employer Identification Number, or an `SSN` - Social Security Number."
                    },
                    "taxId": {
                        "type": "string",
                        "pattern": "^\\d{9}$",
                        "description": "The provider's tax ID, as specified by `taxIdType`. This identifier has to be provided without any separators, such as dashes or spaces. For example 111-22-3333 is invalid but `111223333` is valid.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `taxId` as long as they have different values for `npi`."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The provider's business name. This is typically the provider's practice name, such as `Dental Associates, LLC`, but it can also be the provider's first and last name."
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderContact"
                        },
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - Either `organizationName` _or_ `firstName` and `lastName` are required.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number and email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    }
                },
                "required": [
                    "name",
                    "npi",
                    "taxId",
                    "taxIdType"
                ]
            },
            "CreateProviderResponseContent": {
                "type": "object",
                "description": "Output containing the created provider details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier Stedi assigns to this provider."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time Stedi created the provider record.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time Stedi last updated the provider record.",
                        "format": "date-time"
                    },
                    "npi": {
                        "type": "string",
                        "pattern": "^[0-9]{10}$",
                        "description": "The provider's [National Provider Identifier (NPI)](https://npiregistry.cms.hhs.gov/search). This is a 10-digit number that is unique to the provider.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `npi` as long as they have different values for `taxId`."
                    },
                    "taxIdType": {
                        "$ref": "#/components/schemas/TaxIdType",
                        "description": "The type of tax ID. Can be either an `EIN` - Employer Identification Number, or an `SSN` - Social Security Number."
                    },
                    "taxId": {
                        "type": "string",
                        "pattern": "^\\d{9}$",
                        "description": "The provider's tax ID, as specified by `taxIdType`. This identifier has to be provided without any separators, such as dashes or spaces. For example 111-22-3333 is invalid but `111223333` is valid.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `taxId` as long as they have different values for `npi`."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The provider's business name. This is typically the provider's practice name, such as `Dental Associates, LLC`, but it can also be the provider's first and last name."
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderContact"
                        },
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - Either `organizationName` _or_ `firstName` and `lastName` are required.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number and email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "npi",
                    "taxId",
                    "taxIdType"
                ]
            },
            "DocumentStatus": {
                "type": "string",
                "description": "Indicates whether the document file has been successfully uploaded to Stedi.",
                "enum": [
                    "PENDING",
                    "UPLOADED",
                    "FAILED",
                    "DELETED"
                ]
            },
            "EnrolledPayerInput": {
                "type": "object",
                "description": "The payer you want to enroll with.",
                "properties": {
                    "id": {
                        "type": "string",
                        "deprecated": true,
                        "description": "Use `idOrAlias` instead. This property will be removed in the future."
                    },
                    "idOrAlias": {
                        "type": "string",
                        "description": "The Payer ID. This can be the primary Payer ID, the Stedi Payer ID, or any listed aliases for the payer. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list."
                    }
                }
            },
            "EnrolledPayerOutput": {
                "type": "object",
                "description": "Output structure containing payer information in enrollment responses.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The payer's name, such as `Cigna` or `UnitedHealthcare`."
                    },
                    "stediPayerId": {
                        "type": "string",
                        "description": "The unique Stedi assigned identifier for the payer."
                    }
                },
                "required": [
                    "stediPayerId"
                ]
            },
            "EnrolledProviderInput": {
                "type": "object",
                "description": "The provider you want to enroll with the payer. This must be an existing provider record within Stedi.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Stedi-assigned identifier for the provider. The [Create Provider](https://www.stedi.com/docs/api-reference/healthcare/post-enrollment-create-provider) endpoint returns this as the `id` property."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "EnrolledTransaction": {
                "type": "object",
                "description": "Represents the enrollment status for a specific transaction type.",
                "properties": {
                    "enroll": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enroll"
                ]
            },
            "EnrolledTransactionsList": {
                "description": "Specifies which transaction types are included in the enrollment.",
                "oneOf": [
                    {
                        "type": "object",
                        "title": "eligibilityCheck",
                        "properties": {
                            "eligibilityCheck": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether 270 eligibility checks are included in the enrollment."
                            }
                        },
                        "required": [
                            "eligibilityCheck"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "claimStatus",
                        "properties": {
                            "claimStatus": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether 276 claim status requests are included in the enrollment."
                            }
                        },
                        "required": [
                            "claimStatus"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "professionalClaimSubmission",
                        "properties": {
                            "professionalClaimSubmission": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether 837P professional claims are included in the enrollment."
                            }
                        },
                        "required": [
                            "professionalClaimSubmission"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "institutionalClaimSubmission",
                        "properties": {
                            "institutionalClaimSubmission": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether 837I institutional claims are included in the enrollment."
                            }
                        },
                        "required": [
                            "institutionalClaimSubmission"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "dentalClaimSubmission",
                        "properties": {
                            "dentalClaimSubmission": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether 837D dental claims are included in the enrollment."
                            }
                        },
                        "required": [
                            "dentalClaimSubmission"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "claimPayment",
                        "properties": {
                            "claimPayment": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether 835 Electronic Remittance Advice (ERAs) are included in the enrollment."
                            }
                        },
                        "required": [
                            "claimPayment"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "solicitedClaimAttachment",
                        "properties": {
                            "solicitedClaimAttachment": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether solicited claim attachments are included in the enrollment."
                            }
                        },
                        "required": [
                            "solicitedClaimAttachment"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "unsolicitedClaimAttachment",
                        "properties": {
                            "unsolicitedClaimAttachment": {
                                "$ref": "#/components/schemas/EnrolledTransaction",
                                "description": "Whether unsolicited claim attachments are included in the enrollment."
                            }
                        },
                        "required": [
                            "unsolicitedClaimAttachment"
                        ]
                    }
                ]
            },
            "EnrollmentDocument": {
                "type": "object",
                "description": "A collection of metadata about an enrollment document, including its name, status, last updated date, and the associated enrollment Id.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the document."
                    },
                    "enrollmentId": {
                        "type": "string",
                        "description": "The enrollment ID this document is associated with."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the document."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The content type of the document."
                    },
                    "size": {
                        "type": "number",
                        "description": "The size of the document in bytes."
                    },
                    "status": {
                        "$ref": "#/components/schemas/DocumentStatus",
                        "description": "Indicates whether the document file has been successfully uploaded to Stedi."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the document was created.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the document was last updated.",
                        "format": "date-time"
                    }
                },
                "required": [
                    "createdAt",
                    "enrollmentId",
                    "id",
                    "name",
                    "status",
                    "updatedAt"
                ]
            },
            "EnrollmentHistoryChangeType": {
                "type": "string",
                "description": "The type of change recorded in the enrollment history.",
                "enum": [
                    "STATUS_CHANGE"
                ]
            },
            "EnrollmentHistoryEntry": {
                "type": "object",
                "description": "An update to an enrollment, such as a change in the enrollment's status. This object is experimental and may change in the future.",
                "properties": {
                    "previousStatus": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status before this change occurred. This will be `UNDEFINED` for the enrollment's initial status after creation."
                    },
                    "newStatus": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status after this change occurred."
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "The source or system that triggered this change."
                    },
                    "changedAt": {
                        "type": "string",
                        "description": "The date and time when this change occurred.",
                        "format": "date-time"
                    },
                    "type": {
                        "$ref": "#/components/schemas/EnrollmentHistoryChangeType",
                        "description": "The type of change that occurred."
                    }
                },
                "required": [
                    "changedAt",
                    "changedBy",
                    "newStatus",
                    "type"
                ]
            },
            "EnrollmentSource": {
                "type": "string",
                "description": "The source of the enrollment.",
                "enum": [
                    "API",
                    "UI",
                    "IMPORT"
                ]
            },
            "EnrollmentStatus": {
                "type": "string",
                "description": "The status of the enrollment. You can submit enrollments with either `DRAFT` or `STEDI_ACTION_REQUIRED` status - the default is `DRAFT` if not included. Set this to `STEDI_ACTION_REQUIRED` when you're ready for Stedi to begin processing the enrollment. Once an enrollment is `STEDI_ACTION_REQUIRED`, only Stedi can set or update its status.",
                "enum": [
                    "DRAFT",
                    "SUBMITTED",
                    "PROVISIONING",
                    "LIVE",
                    "REJECTED",
                    "CANCELED",
                    "STEDI_ACTION_REQUIRED",
                    "PROVIDER_ACTION_REQUIRED"
                ]
            },
            "EnrollmentSummary": {
                "type": "object",
                "description": "Summary of an enrollment with essential fields for list operations.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Stedi-assigned identifier for the enrollment."
                    },
                    "provider": {
                        "$ref": "#/components/schemas/AllEnrolledProviderFields",
                        "description": "Information about the provider enrolling with the payer."
                    },
                    "payer": {
                        "$ref": "#/components/schemas/EnrolledPayerOutput",
                        "description": "Information about the payer the provider is enrolling with."
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/EnrolledTransactionsList",
                        "description": "The type of transactions included in the enrollment."
                    },
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status of the enrollment.\n  - `DRAFT` - You are still editing the record and it has not been submitted to Stedi.\n  - `STEDI_ACTION_REQUIRED` - You have submitted the enrollment and it is ready for Stedi to begin processing.\n  - `PROVIDER_ACTION_REQUIRED` - The enrollment requires action from the healthcare provider to proceed, such as providing additional documentation. Stedi will add a note to your enrollment request with clear instructions.\n  - `SUBMITTED` - (Deprecated) Legacy status being phased out in favor of the more specific action-required statuses.\n  - `PROVISIONING` - Stedi has begun the process of completing the enrollment with the payer.\n  - `LIVE` - The enrollment process is complete, and the specified provider can begin exchanging the listed transaction types with the payer.\n  - `REJECTED` - The payer rejected the enrollment. Common reasons for rejection include incorrect details in the request and that the provider is not credentialed with the payer. Customer support will contact you with reasons for rejection and next steps.\n  - `CANCELED` - The enrollment has been terminated per customer or provider request."
                    },
                    "source": {
                        "$ref": "#/components/schemas/EnrollmentSource",
                        "description": "The source of the enrollment."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was created within Stedi.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was updated.",
                        "format": "date-time"
                    },
                    "submittedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was submitted. If the enrollment is in draft status, `submittedAt` is not present. When the enrollment transitions from draft to submitted, `submittedAt` will be updated to the submission time. If the enrollment was created and submitted immediately, `submittedAt` will be equal or close to `createdAt`.",
                        "format": "date-time"
                    },
                    "statusLastUpdatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment status was last updated. This timestamp is used to track enrollment processing durations and enables filtering to identify recently changed enrollments. It automatically updates whenever an enrollment's status changes but remains unchanged during other updates.",
                        "format": "date-time"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentHistoryEntry"
                        },
                        "description": "The history of updates to this enrollment, such as status changes. This property is experimental and may change in the future."
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentDocument"
                        },
                        "description": "Documents associated with this enrollment, such as signed enrollment forms. This list doesn't include deleted documents.\n\nEach document object contains metadata such as the document's name, status, and timestamps for creation and last update."
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "description": "Tasks associated with this enrollment, such as reminders or follow-ups."
                    },
                    "importId": {
                        "type": "string",
                        "description": "The import ID associated with the enrollment if it was created through a CSV bulk import (`source` is set to `IMPORT`). This property is only present for enrollments created through the CSV import process."
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "payer",
                    "provider",
                    "source",
                    "status",
                    "statusLastUpdatedAt",
                    "transactions",
                    "updatedAt"
                ]
            },
            "ExportEnrollmentsCsvRequestContent": {
                "type": "object",
                "description": "Input for ExportEnrollmentsCsv operation with filtering options.",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A partial search term matched against multiple columns."
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentStatus"
                        },
                        "description": "One or multiple statuses to filter by."
                    },
                    "providerNpis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or multiple provider NPIs to filter by."
                    },
                    "providerTaxIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or multiple provider tax IDs to filter by."
                    },
                    "providerNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or multiple provider names to filter by."
                    },
                    "payerIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or multiple payer IDs to filter by."
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentSource"
                        },
                        "description": "One or multiple sources to filter by."
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionType"
                        },
                        "description": "A list of enrollment transaction types to filter by."
                    },
                    "createdFrom": {
                        "type": "string",
                        "description": "The start date to filter enrollments created from this date.",
                        "format": "date-time"
                    },
                    "createdTo": {
                        "type": "string",
                        "description": "The end date to filter enrollments created up to this date.",
                        "format": "date-time"
                    },
                    "statusUpdatedFrom": {
                        "type": "string",
                        "description": "The start date to filter enrollments whose status was last updated from this date. When used with statusUpdatedTo, must be earlier than statusUpdatedTo.",
                        "format": "date-time"
                    },
                    "statusUpdatedTo": {
                        "type": "string",
                        "description": "The end date to filter enrollments whose status was last updated up to this date. When used with statusUpdatedFrom, must be later than statusUpdatedFrom.",
                        "format": "date-time"
                    }
                }
            },
            "ExportEnrollmentsCsvResponseContent": {
                "type": "object",
                "description": "Output containing export results. If no enrollments found, downloadUrl and filename will be undefined and recordCount will be 0.",
                "properties": {
                    "downloadUrl": {
                        "type": "string",
                        "description": "A presigned URL for downloading the generated CSV file from S3. Undefined if no enrollments found."
                    },
                    "filename": {
                        "type": "string",
                        "description": "The filename of the generated CSV file. Undefined if no enrollments found."
                    },
                    "recordCount": {
                        "type": "number",
                        "description": "The number of enrollment records exported to the CSV file. 0 if no enrollments found."
                    }
                },
                "required": [
                    "recordCount"
                ]
            },
            "FollowInstructionsTask": {
                "type": "object",
                "description": "Follow-instructions task data containing text instructions for a user to follow.",
                "properties": {
                    "instructions": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Human-readable instructions for the responsible party to follow."
                    }
                },
                "required": [
                    "instructions"
                ]
            },
            "GetEnrollmentResponseContent": {
                "type": "object",
                "description": "Output containing the enrollment details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Stedi-assigned identifier for the enrollment request."
                    },
                    "primaryContact": {
                        "$ref": "#/components/schemas/ProviderContact",
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number or email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was created within Stedi.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was updated.",
                        "format": "date-time"
                    },
                    "submittedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was submitted. If the enrollment is in `DRAFT` status, `submittedAt` is not present. When the enrollment transitions from draft to `STEDI_ACTION_REQUIRED`, `submittedAt` is updated to the submission time. If the enrollment was created and submitted immediately, the `submittedAt` time will be equal or close to the `createdAt` time.",
                        "format": "date-time"
                    },
                    "statusLastUpdatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment status was last updated. This timestamp is used to track enrollment processing durations and enables filtering to identify recently changed enrollments. It automatically updates whenever an enrollment's status changes but remains unchanged during other updates.",
                        "format": "date-time"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentHistoryEntry"
                        },
                        "description": "The history of updates to this enrollment, such as status changes. This property is experimental and may change in the future."
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentDocument"
                        },
                        "description": "Documents associated with this enrollment, such as signed enrollment forms. This list doesn't include deleted documents.\n\nEach document object contains metadata such as the document's name, status, and timestamps for creation and last update."
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/EnrolledTransactionsList",
                        "description": "The type of transactions included in the enrollment."
                    },
                    "userEmail": {
                        "type": "string",
                        "minLength": 5,
                        "pattern": "^\\S+@\\S+\\.\\S+$",
                        "description": "The email address where Stedi should send updates about the enrollment. We'll use it to notify you when there are next steps and send updates on the enrollment's status.\n\nThis email address can be different from the `primaryContact.email` where the payer sends communications about the enrollment."
                    },
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status of the enrollment. You can submit enrollments with either `DRAFT` or `STEDI_ACTION_REQUIRED` status - the default is `DRAFT` if not included. Set this to `STEDI_ACTION_REQUIRED` when you're ready for Stedi to begin processing the enrollment. Once an enrollment is `STEDI_ACTION_REQUIRED`, only Stedi can set or update its status.\n  - `DRAFT` - You are still editing the record and it has not been submitted to Stedi.\n  - `STEDI_ACTION_REQUIRED` - You have submitted the enrollment and it is ready for Stedi to begin processing.\n  - `PROVIDER_ACTION_REQUIRED` - The enrollment requires action from the healthcare provider to proceed, such as providing additional documentation. Stedi will add a note to your enrollment request with clear instructions.\n  - `SUBMITTED` - (Deprecated) Legacy status being phased out in favor of the more specific action-required statuses.\n  - `PROVISIONING` - Stedi has begun the process of completing the enrollment with the payer.\n  - `LIVE` - The enrollment process is complete, and the specified provider can begin exchanging the listed transaction types with the payer.\n  - `REJECTED` - The payer rejected the enrollment. Common reasons for rejection include incorrect details in the request and that the provider is not credentialed with the payer. Customer support will contact you with reasons for rejection and next steps.\n  - `CANCELED` - The enrollment has been terminated per customer or provider request."
                    },
                    "source": {
                        "$ref": "#/components/schemas/EnrollmentSource",
                        "description": "The source of this enrollment."
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reasons why the enrollment request is still in `PROVISIONING` status, may take additional time to process, or was rejected by the payer. Only Stedi can set or update this property. \n\n May contain extra required steps for processing that are specific to the payer. For example, perhaps the provider needs to log into an online portal and enter additional information before the enrollment can continue. Contact Stedi customer support with questions."
                    },
                    "internalNote": {
                        "type": "string",
                        "description": "Internal notes about the enrollment. Only Stedi can read, set, or update this property."
                    },
                    "internal_note_camel_case": {
                        "type": "string",
                        "description": "Deprecated, use internalNote instead."
                    },
                    "providerTransactionAccessNumber": {
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 5,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "description": "This property is required for payers that require a Provider Transaction Access Number (PTAN).\n\nThe PTAN is a Medicare-issued number given to providers upon enrollment with Medicare. This number is usually six digits and is assigned based on the type of service and the location of the provider. Upon enrollment, Medicare Administrating Contracting (MAC) providers should receive their assigned PTAN number in their approval letter."
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "description": "Tasks associated with this enrollment representing work that needs to be completed. Each task has a responsible party and specific definition."
                    },
                    "provider": {
                        "$ref": "#/components/schemas/AllEnrolledProviderFields",
                        "description": "Information about the provider enrolling with the payer."
                    },
                    "payer": {
                        "$ref": "#/components/schemas/EnrolledPayerOutput",
                        "description": "Information about the payer the provider is enrolling with."
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "payer",
                    "primaryContact",
                    "provider",
                    "statusLastUpdatedAt",
                    "transactions",
                    "updatedAt",
                    "userEmail"
                ]
            },
            "GetProviderResponseContent": {
                "type": "object",
                "description": "Output containing the provider details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier Stedi assigns to this provider."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time Stedi created the provider record.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time Stedi last updated the provider record.",
                        "format": "date-time"
                    },
                    "npi": {
                        "type": "string",
                        "pattern": "^[0-9]{10}$",
                        "description": "The provider's [National Provider Identifier (NPI)](https://npiregistry.cms.hhs.gov/search). This is a 10-digit number that is unique to the provider.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `npi` as long as they have different values for `taxId`."
                    },
                    "taxIdType": {
                        "$ref": "#/components/schemas/TaxIdType",
                        "description": "The type of tax ID. Can be either an `EIN` - Employer Identification Number, or an `SSN` - Social Security Number."
                    },
                    "taxId": {
                        "type": "string",
                        "pattern": "^\\d{9}$",
                        "description": "The provider's tax ID, as specified by `taxIdType`. This identifier has to be provided without any separators, such as dashes or spaces. For example 111-22-3333 is invalid but `111223333` is valid.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `taxId` as long as they have different values for `npi`."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The provider's business name. This is typically the provider's practice name, such as `Dental Associates, LLC`, but it can also be the provider's first and last name."
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderContact"
                        },
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - Either `organizationName` _or_ `firstName` and `lastName` are required.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number and email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "npi",
                    "taxId",
                    "taxIdType"
                ]
            },
            "InternalFailureExceptionResponseContent": {
                "type": "object",
                "description": "The server response when an unexpected error occurred while processing request.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Human-readable error message"
                    },
                    "code": {
                        "type": "string",
                        "description": "Error classification code"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "ListEnrollmentsResponseContent": {
                "type": "object",
                "description": "Output containing a paginated list of enrollments.",
                "properties": {
                    "nextPageToken": {
                        "type": "string",
                        "maxLength": 1024,
                        "minLength": 1,
                        "description": "Token for pagination to retrieve the next page of results; null if there are no more results"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentSummary"
                        },
                        "description": "Details about the enrollments matching the search criteria."
                    }
                }
            },
            "ListProvidersResponseContent": {
                "type": "object",
                "description": "Output containing a paginated list of providers.",
                "properties": {
                    "nextPageToken": {
                        "type": "string",
                        "maxLength": 1024,
                        "minLength": 1,
                        "description": "Token for pagination to retrieve the next page of results; null if there are no more results"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderSummary"
                        },
                        "description": "Details about every provider your organization has created within Stedi."
                    }
                }
            },
            "ProviderContact": {
                "type": "object",
                "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - Either `organizationName` _or_ `firstName` and `lastName` are required.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number and email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly.",
                "properties": {
                    "organizationName": {
                        "type": "string",
                        "description": "The contact's business name. This should match exactly what the payer has on file for the provider."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The contact's first name. This should match exactly what the payer has on file for the provider."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The contact's last name. This should match exactly what the payer has on file for the provider."
                    },
                    "email": {
                        "type": "string",
                        "minLength": 5,
                        "pattern": "^\\S+@\\S+\\.\\S+$",
                        "description": "The contact's email address. Set this to where you want the payer to send communications regarding the enrollment. This can be different from the provider's email if needed."
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 8,
                        "description": "The contact's phone number, starting with the area code and formatted with dashes as separators. For example, `555-555-5555`. Set this to where you want the payer to direct communications regarding the enrollment. This can be different from the provider's phone number if needed."
                    },
                    "streetAddress1": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The contact's street address, including the street number, name, and any suite or apartment number. This should match exactly what the payer has on file for the provider."
                    },
                    "streetAddress2": {
                        "type": "string",
                        "description": "The contact's street address continued. This should match exactly what the payer has on file for the provider."
                    },
                    "city": {
                        "type": "string",
                        "minLength": 2,
                        "description": "The contact's city. This should match exactly what the payer has on file for the provider."
                    },
                    "zipCode": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The contact's five-digit ZIP code. This should match exactly what the payer has on file for the provider."
                    },
                    "state": {
                        "type": "string",
                        "minLength": 2,
                        "description": "The contact's two-letter state abbreviation. For example, `PA`, or `MD`. This should match exactly what the payer has on file for the provider."
                    }
                },
                "required": [
                    "city",
                    "email",
                    "phone",
                    "state",
                    "streetAddress1",
                    "zipCode"
                ]
            },
            "ProviderSummary": {
                "type": "object",
                "description": "Summary information for a provider, typically used in list operations.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier Stedi assigns to this provider internally."
                    },
                    "name": {
                        "type": "string",
                        "description": "The provider's business name. This is typically the provider's practice name, such as `Dental Associates, LLC`, but it can also be the provider's first and last name."
                    },
                    "npi": {
                        "type": "string",
                        "description": "The provider's [National Provider Identifier (NPI)](https://npiregistry.cms.hhs.gov/search)."
                    },
                    "taxIdType": {
                        "$ref": "#/components/schemas/TaxIdType",
                        "description": "The type of tax ID. Can be either an `EIN` - Employer Identification Number, or an `SSN` - Social Security Number."
                    },
                    "taxId": {
                        "type": "string",
                        "description": "The provider's tax ID, as specified by `taxIdType`. This identifier is formatted without any separators, such as dashes or spaces. For example 111-22-3333 is represented as `111223333`."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "npi",
                    "taxId",
                    "taxIdType"
                ]
            },
            "ResourceNotFoundExceptionResponseContent": {
                "type": "object",
                "description": "The requested resource could not be found.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Human readable exception message."
                    },
                    "code": {
                        "type": "string",
                        "description": "Classification of the exception type."
                    }
                },
                "required": [
                    "message"
                ]
            },
            "ResponsibleParty": {
                "type": "string",
                "description": "The party responsible for completing a task.",
                "enum": [
                    "PROVIDER",
                    "STEDI"
                ]
            },
            "Task": {
                "type": "object",
                "description": "A task representing work that needs to be completed.",
                "properties": {
                    "isComplete": {
                        "type": "boolean",
                        "description": "Whether the task has been completed."
                    },
                    "completedAt": {
                        "type": "number",
                        "description": "The timestamp when the task was completed.",
                        "format": "double"
                    },
                    "completedBy": {
                        "type": "string",
                        "description": "Identifier of who completed the task."
                    },
                    "responsibleParty": {
                        "$ref": "#/components/schemas/ResponsibleParty",
                        "description": "The party responsible for completing this task."
                    },
                    "definition": {
                        "$ref": "#/components/schemas/TaskDefinition",
                        "description": "The specific definition and data for this task."
                    },
                    "rank": {
                        "type": "number",
                        "minimum": 0,
                        "description": "The rank order of this task. Lower numbers are completed first."
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the task."
                    }
                },
                "required": [
                    "definition",
                    "id",
                    "rank",
                    "responsibleParty"
                ]
            },
            "TaskDefinition": {
                "description": "A discriminated union of task definitions. Initially supports FollowInstructions tasks with future extensibility for additional task types.",
                "oneOf": [
                    {
                        "type": "object",
                        "title": "followInstructions",
                        "properties": {
                            "followInstructions": {
                                "$ref": "#/components/schemas/FollowInstructionsTask",
                                "description": "A task that requires the responsible party to follow specific instructions."
                            }
                        },
                        "required": [
                            "followInstructions"
                        ]
                    }
                ]
            },
            "TaxIdType": {
                "type": "string",
                "description": "The type of tax identification number.",
                "enum": [
                    "EIN",
                    "SSN"
                ]
            },
            "TransactionType": {
                "type": "string",
                "description": "Types of healthcare transactions supported for enrollment.",
                "enum": [
                    "claimStatus",
                    "eligibilityCheck",
                    "institutionalClaimSubmission",
                    "professionalClaimSubmission",
                    "dentalClaimSubmission",
                    "claimPayment",
                    "solicitedClaimAttachment",
                    "unsolicitedClaimAttachment"
                ]
            },
            "UnauthorizedExceptionResponseContent": {
                "type": "object",
                "description": "The server response when the authorizer failed to authenticate the caller.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Human-readable error message"
                    },
                    "code": {
                        "type": "string",
                        "description": "Error classification code"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "UpdateEnrollmentRequestContent": {
                "type": "object",
                "description": "Input for UpdateEnrollment.",
                "properties": {
                    "transactions": {
                        "$ref": "#/components/schemas/EnrolledTransactionsList",
                        "description": "The type of transactions included in the enrollment."
                    },
                    "primaryContact": {
                        "$ref": "#/components/schemas/ProviderContact",
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number or email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    },
                    "userEmail": {
                        "type": "string",
                        "minLength": 5,
                        "pattern": "^\\S+@\\S+\\.\\S+$",
                        "description": "The email address where Stedi should send updates about the enrollment. We'll use it to notify you when there are next steps and send updates on the enrollment's status.\n\nThis email address can be different from the `primaryContact.email` where the payer sends communications about the enrollment."
                    },
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status of the enrollment. You can submit enrollments with either `DRAFT` or `STEDI_ACTION_REQUIRED` status - the default is `DRAFT` if not included. Set this to `STEDI_ACTION_REQUIRED` when you're ready for Stedi to begin processing the enrollment. Once an enrollment is `STEDI_ACTION_REQUIRED`, only Stedi can set or update its status.\n  - `DRAFT` - You are still editing the record and it has not been submitted to Stedi.\n  - `STEDI_ACTION_REQUIRED` - You have submitted the enrollment and it is ready for Stedi to begin processing.\n  - `PROVIDER_ACTION_REQUIRED` - The enrollment requires action from the healthcare provider to proceed, such as providing additional documentation. Stedi will add a note to your enrollment request with clear instructions.\n  - `SUBMITTED` - (Deprecated) Legacy status being phased out in favor of the more specific action-required statuses.\n  - `PROVISIONING` - Stedi has begun the process of completing the enrollment with the payer.\n  - `LIVE` - The enrollment process is complete, and the specified provider can begin exchanging the listed transaction types with the payer.\n  - `REJECTED` - The payer rejected the enrollment. Common reasons for rejection include incorrect details in the request and that the provider is not credentialed with the payer. Customer support will contact you with reasons for rejection and next steps.\n  - `CANCELED` - The enrollment has been terminated per customer or provider request."
                    },
                    "source": {
                        "$ref": "#/components/schemas/EnrollmentSource",
                        "description": "The source of this enrollment."
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reasons why the enrollment request is still in `PROVISIONING` status, may take additional time to process, or was rejected by the payer. Only Stedi can set or update this property. \n\n May contain extra required steps for processing that are specific to the payer. For example, perhaps the provider needs to log into an online portal and enter additional information before the enrollment can continue. Contact Stedi customer support with questions."
                    },
                    "internalNote": {
                        "type": "string",
                        "description": "Internal notes about the enrollment. Only Stedi can read, set, or update this property."
                    },
                    "internal_note_camel_case": {
                        "type": "string",
                        "description": "Deprecated, use internalNote instead."
                    },
                    "providerTransactionAccessNumber": {
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 5,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "description": "This property is required for payers that require a Provider Transaction Access Number (PTAN).\n\nThe PTAN is a Medicare-issued number given to providers upon enrollment with Medicare. This number is usually six digits and is assigned based on the type of service and the location of the provider. Upon enrollment, Medicare Administrating Contracting (MAC) providers should receive their assigned PTAN number in their approval letter."
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "description": "Tasks associated with this enrollment representing work that needs to be completed. Each task has a responsible party and specific definition."
                    },
                    "provider": {
                        "$ref": "#/components/schemas/EnrolledProviderInput",
                        "description": "Information about the provider enrolling with the payer."
                    },
                    "payer": {
                        "$ref": "#/components/schemas/EnrolledPayerInput",
                        "description": "Information about the payer the provider is enrolling with."
                    }
                },
                "required": [
                    "payer",
                    "primaryContact",
                    "provider",
                    "transactions",
                    "userEmail"
                ]
            },
            "UpdateEnrollmentResponseContent": {
                "type": "object",
                "description": "Output containing the updated enrollment details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Stedi-assigned identifier for the enrollment request."
                    },
                    "primaryContact": {
                        "$ref": "#/components/schemas/ProviderContact",
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number or email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was created within Stedi.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was updated.",
                        "format": "date-time"
                    },
                    "submittedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment was submitted. If the enrollment is in `DRAFT` status, `submittedAt` is not present. When the enrollment transitions from draft to `STEDI_ACTION_REQUIRED`, `submittedAt` is updated to the submission time. If the enrollment was created and submitted immediately, the `submittedAt` time will be equal or close to the `createdAt` time.",
                        "format": "date-time"
                    },
                    "statusLastUpdatedAt": {
                        "type": "string",
                        "description": "The date and time when the enrollment status was last updated. This timestamp is used to track enrollment processing durations and enables filtering to identify recently changed enrollments. It automatically updates whenever an enrollment's status changes but remains unchanged during other updates.",
                        "format": "date-time"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentHistoryEntry"
                        },
                        "description": "The history of updates to this enrollment, such as status changes. This property is experimental and may change in the future."
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrollmentDocument"
                        },
                        "description": "Documents associated with this enrollment, excluding deleted documents."
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/EnrolledTransactionsList",
                        "description": "The type of transactions included in the enrollment."
                    },
                    "userEmail": {
                        "type": "string",
                        "minLength": 5,
                        "pattern": "^\\S+@\\S+\\.\\S+$",
                        "description": "The email address where Stedi should send updates about the enrollment. We'll use it to notify you when there are next steps and send updates on the enrollment's status.\n\nThis email address can be different from the `primaryContact.email` where the payer sends communications about the enrollment."
                    },
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus",
                        "description": "The status of the enrollment. You can submit enrollments with either `DRAFT` or `STEDI_ACTION_REQUIRED` status - the default is `DRAFT` if not included. Set this to `STEDI_ACTION_REQUIRED` when you're ready for Stedi to begin processing the enrollment. Once an enrollment is `STEDI_ACTION_REQUIRED`, only Stedi can set or update its status.\n  - `DRAFT` - You are still editing the record and it has not been submitted to Stedi.\n  - `STEDI_ACTION_REQUIRED` - You have submitted the enrollment and it is ready for Stedi to begin processing.\n  - `PROVIDER_ACTION_REQUIRED` - The enrollment requires action from the healthcare provider to proceed, such as providing additional documentation. Stedi will add a note to your enrollment request with clear instructions.\n  - `SUBMITTED` - (Deprecated) Legacy status being phased out in favor of the more specific action-required statuses.\n  - `PROVISIONING` - Stedi has begun the process of completing the enrollment with the payer.\n  - `LIVE` - The enrollment process is complete, and the specified provider can begin exchanging the listed transaction types with the payer.\n  - `REJECTED` - The payer rejected the enrollment. Common reasons for rejection include incorrect details in the request and that the provider is not credentialed with the payer. Customer support will contact you with reasons for rejection and next steps.\n  - `CANCELED` - The enrollment has been terminated per customer or provider request."
                    },
                    "source": {
                        "$ref": "#/components/schemas/EnrollmentSource",
                        "description": "The source of this enrollment."
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reasons why the enrollment request is still in `PROVISIONING` status, may take additional time to process, or was rejected by the payer. Only Stedi can set or update this property. \n\n May contain extra required steps for processing that are specific to the payer. For example, perhaps the provider needs to log into an online portal and enter additional information before the enrollment can continue. Contact Stedi customer support with questions."
                    },
                    "internalNote": {
                        "type": "string",
                        "description": "Internal notes about the enrollment. Only Stedi can read, set, or update this property."
                    },
                    "internal_note_camel_case": {
                        "type": "string",
                        "description": "Deprecated, use internalNote instead."
                    },
                    "providerTransactionAccessNumber": {
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 5,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "description": "This property is required for payers that require a Provider Transaction Access Number (PTAN).\n\nThe PTAN is a Medicare-issued number given to providers upon enrollment with Medicare. This number is usually six digits and is assigned based on the type of service and the location of the provider. Upon enrollment, Medicare Administrating Contracting (MAC) providers should receive their assigned PTAN number in their approval letter."
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "description": "Tasks associated with this enrollment representing work that needs to be completed. Each task has a responsible party and specific definition."
                    },
                    "provider": {
                        "$ref": "#/components/schemas/AllEnrolledProviderFields",
                        "description": "Information about the provider enrolling with the payer."
                    },
                    "payer": {
                        "$ref": "#/components/schemas/EnrolledPayerOutput",
                        "description": "Information about the payer the provider is enrolling with."
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "payer",
                    "primaryContact",
                    "provider",
                    "statusLastUpdatedAt",
                    "transactions",
                    "updatedAt",
                    "userEmail"
                ]
            },
            "UpdateProviderRequestContent": {
                "type": "object",
                "description": "Input for UpdateProvider.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The provider's business name. This is typically the provider's practice name, such as `Dental Associates, LLC`, but it can also be the provider's first and last name."
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderContact"
                        },
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - Either `organizationName` _or_ `firstName` and `lastName` are required.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number and email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UpdateProviderResponseContent": {
                "type": "object",
                "description": "Output containing the updated provider details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier Stedi assigns to this provider."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time Stedi created the provider record.",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time Stedi last updated the provider record.",
                        "format": "date-time"
                    },
                    "npi": {
                        "type": "string",
                        "pattern": "^[0-9]{10}$",
                        "description": "The provider's [National Provider Identifier (NPI)](https://npiregistry.cms.hhs.gov/search). This is a 10-digit number that is unique to the provider.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `npi` as long as they have different values for `taxId`."
                    },
                    "taxIdType": {
                        "$ref": "#/components/schemas/TaxIdType",
                        "description": "The type of tax ID. Can be either an `EIN` - Employer Identification Number, or an `SSN` - Social Security Number."
                    },
                    "taxId": {
                        "type": "string",
                        "pattern": "^\\d{9}$",
                        "description": "The provider's tax ID, as specified by `taxIdType`. This identifier has to be provided without any separators, such as dashes or spaces. For example 111-22-3333 is invalid but `111223333` is valid.\n\nEach provider record must have a unique `npi` and `taxId` combination. For example, you can create two provider records with the same `taxId` as long as they have different values for `npi`."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 5,
                        "description": "The provider's business name. This is typically the provider's practice name, such as `Dental Associates, LLC`, but it can also be the provider's first and last name."
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderContact"
                        },
                        "description": "The contact information for the provider. This is where the payer will send communications about the enrollment, if needed.\n  - Either `organizationName` _or_ `firstName` and `lastName` are required.\n  - The name and address should match exactly what the payer has on file for the provider. Some payers reject enrollment requests with addresses that don't match their records.\n  - If you're submitting enrollment requests on a provider's behalf, you may want to set the phone number and email to your own contact details. Do this when you want the payer to contact you about the enrollment status instead of the provider directly."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "npi",
                    "taxId",
                    "taxIdType"
                ]
            },
            "ValidationExceptionField": {
                "type": "object",
                "description": "Describes one specific validation failure for an input member.",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "A JSONPointer expression to the structure member whose value failed to satisfy the modeled constraints."
                    },
                    "message": {
                        "type": "string",
                        "description": "A detailed description of the validation failure."
                    }
                },
                "required": [
                    "message",
                    "path"
                ]
            },
            "ValidationExceptionResponseContent": {
                "type": "object",
                "description": "A standard error for input validation failures.\nThis should be thrown by services when a member of the input structure\nfalls outside of the modeled or documented constraints.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "A summary of the validation failure."
                    },
                    "fieldList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationExceptionField"
                        },
                        "description": "A list of specific failures encountered while validating the input.\nA member can appear in this list more than once if it failed to satisfy multiple constraints."
                    }
                },
                "required": [
                    "message"
                ]
            }
        },
        "securitySchemes": {
            "httpApiKeyAuth": {
                "type": "apiKey",
                "description": "A [Stedi API Key](https://portal.stedi.com/app/settings/api-keys) for authentication.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "httpApiKeyAuth": []
        }
    ],
    "x-stedi": {
        "lifecycle": "general_availability",
        "product": "enrollment",
        "public": true
    },
    "tags": [],
    "servers": [
        {
            "url": "https://enrollments.us.stedi.com/2024-09-01",
            "description": "Production"
        }
    ]
}
