{
  "openapi": "3.0.2",
  "info": {
    "title": "Core",
    "version": "2023-08-01",
    "contact": {
      "email": "core@stedi.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://stedi.com"
    }
  },
  "paths": {
    "/events/{eventId}/destinations/attempts": {
      "get": {
        "description": "Fetch webhook delivery attempts for a specific event id.",
        "operationId": "GetWebhookDeliveryAttempts",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event you want to get webhook delivery logs for",
            "schema": {
              "type": "string",
              "description": "The ID of the event you want to get webhook delivery logs for"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetWebhookDeliveryAttempts 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookDeliveryAttemptsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/destinations/attempts/{attemptId}": {
      "get": {
        "description": "Fetch webhook delivery attempt details for a specific event id and attempt id.",
        "operationId": "GetWebhookDeliveryAttemptDetails",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event you want to get logs for",
            "schema": {
              "type": "string",
              "description": "The ID of the event you want to get logs for"
            },
            "required": true
          },
          {
            "name": "attemptId",
            "in": "path",
            "description": "The ID of the attempt you want to get detailed logs for",
            "schema": {
              "type": "string",
              "description": "The ID of the attempt you want to get detailed logs for"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetWebhookDeliveryAttemptDetails 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookDeliveryAttemptDetailsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/retry": {
      "post": {
        "description": "This endpoint retriggers the specified processing event.",
        "operationId": "RetryEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event you want Stedi to re-emit.",
            "schema": {
              "type": "string",
              "description": "The ID of the event you want Stedi to re-emit."
            },
            "required": true,
            "examples": {
              "RetryEvent_example1": {
                "summary": "Retry event",
                "description": "",
                "value": "f75168e4-e682-4410-bfec-b5b1541c7f21"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RetryEvent 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetryEventResponseContent"
                },
                "examples": {
                  "RetryEvent_example1": {
                    "summary": "Retry event",
                    "description": "",
                    "value": {
                      "eventId": "f75168e4-e682-4410-bfec-b5b1541c7f22"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions": {
      "get": {
        "description": "Fetch a list of executions, sorted by the date they were created from newest to oldest.",
        "operationId": "ListExecutions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100."
            },
            "examples": {
              "ListExecutions_example1": {
                "summary": "List executions",
                "description": "",
                "value": 200
              }
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "An opaque token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "An opaque token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListExecutions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExecutionsResponseContent"
                },
                "examples": {
                  "ListExecutions_example1": {
                    "summary": "List executions",
                    "description": "",
                    "value": {
                      "items": [
                        {
                          "createdAt": "2025-04-04T17:14:35.481Z",
                          "direction": "INBOUND",
                          "executionId": "55907f88-999e-4912-9e9b-78326f8bade8",
                          "faultCount": 0,
                          "partnershipId": "local-clearinghouse-test",
                          "source": {
                            "dirname": ".",
                            "name": "test-inbound-ingest-30848232-fa0c-4151-8217-d03205e806f9.edi"
                          },
                          "retryable": true,
                          "status": "COMPLETED",
                          "transactionCount": 1,
                          "updatedAt": "2025-04-04T17:14:42.854Z"
                        },
                        {
                          "createdAt": "2025-04-02T21:30:08.387Z",
                          "direction": "INBOUND",
                          "executionId": "95236a56-a020-4522-8fef-bcffcec0ec1d",
                          "faultCount": 0,
                          "partnershipId": "local-clearinghouse-test",
                          "source": {
                            "dirname": ".",
                            "name": "test-inbound-ingest-3f2efd94-2a81-4b57-b4de-9b970a50db60.edi"
                          },
                          "retryable": true,
                          "status": "COMPLETED",
                          "transactionCount": 1,
                          "updatedAt": "2025-04-02T21:30:16.185Z"
                        },
                        {
                          "createdAt": "2025-02-28T19:16:26.041Z",
                          "direction": "OUTBOUND",
                          "executionId": "06bdccdc-4ab9-4add-b1dc-a76a0183f299",
                          "faultCount": 0,
                          "partnershipId": "local-clearinghouse-test",
                          "source": {
                            "dirname": "f894c51a-14639/to-stedi",
                            "name": "837-clearinghouse_outbound.edi"
                          },
                          "retryable": true,
                          "status": "COMPLETED",
                          "transactionCount": 1,
                          "updatedAt": "2025-02-28T19:16:27.706Z"
                        }
                      ],
                      "nextPageToken": "eyJwYWdlIjoxLCJwYWdlU2l6ZSI6MTAsInBhZ2VUb3RhbCI6MzE0fQ=="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}": {
      "get": {
        "description": "Retrieve the file execution details for a given `executionId`.",
        "operationId": "GetExecution",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetExecution_example1": {
                "summary": "Get execution",
                "description": "",
                "value": "1f8b2-3c4d-5e6f-7g8h-9i0j1k2l3m4n"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecution 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionResponseContent"
                },
                "examples": {
                  "GetExecution_example1": {
                    "summary": "Get execution",
                    "description": "",
                    "value": {
                      "connectionId": "01J8JH26KBJTARWD17Q0S0ZD19",
                      "connectionType": "bucket",
                      "createdAt": "2025-02-12T22:21:08.815Z",
                      "direction": "INBOUND",
                      "executionId": "b1356ef2-a10d-482a-b2db-408f1d5e7ff5",
                      "faultCount": 0,
                      "partnershipId": "local-clearinghouse-test",
                      "source": {
                        "dirname": "clearinghouse/incoming",
                        "name": "7a79135a-73ae-427b-b762-9d4d437d4aab.x12"
                      },
                      "retryable": true,
                      "status": "COMPLETED",
                      "transactionCount": 1,
                      "updatedAt": "2025-02-12T22:21:15.839Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/input": {
      "get": {
        "description": "Fetch a file execution's input document before any translation and mappings.",
        "operationId": "GetExecutionInputDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetExecutionInputDocument_example1": {
                "summary": "Get execution input document",
                "description": "",
                "value": "06bdccdc-4aaa-4aaa-4aaa-abaa11110000"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "GetExecutionInputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionInputDocumentResponseContent"
                },
                "examples": {
                  "GetExecutionInputDocument_example1": {
                    "summary": "Get execution input document",
                    "description": "",
                    "value": {
                      "documentDownloadUrl": "https://stedi-default-core-artifacts.s3.us-east-1.amazonaws.com/write/input/06bdccdc-4aaa-4aaa..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/input-url": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's input document before it passes through any translation and mappings. Generally, this will be EDI. This endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.",
        "operationId": "GetExecutionInputDocumentUrl",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutionInputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionInputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/metadata": {
      "get": {
        "description": "Fetch a file execution's metadata document.",
        "operationId": "GetExecutionMetadataDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetExecutionMetadataDocument_example1": {
                "summary": "Get execution metadata document",
                "description": "",
                "value": "06bdccdc-baa1-baa1-b111-a76a11110000"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "GetExecutionMetadataDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionMetadataDocumentResponseContent"
                },
                "examples": {
                  "GetExecutionMetadataDocument_example1": {
                    "summary": "Get execution metadata document",
                    "description": "",
                    "value": {
                      "documentDownloadUrl": "https://stedi-default-core-artifacts.s3.us-east-1.amazonaws.com/06bdccdc-baa1-baa1-b111..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/metadata-url": {
      "get": {
        "description": "This endpoint is used to retrieve a file execution's metadata document, limited to inbound/outbound x12 files. This endpoint returns the metadata document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.",
        "operationId": "GetExecutionMetadataDocumentUrl",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutionMetadataDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionMetadataDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/output": {
      "get": {
        "description": "Fetch a file execution's output document. Only available for outbound files.",
        "operationId": "GetExecutionOutputDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file delivered event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-delivered), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file delivered event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-delivered), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetExecutionOutputDocument_example1": {
                "summary": "Get execution output document",
                "description": "",
                "value": "06bdccdc-4aaa-4add-b111-abaa11110000"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "GetExecutionOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionOutputDocumentResponseContent"
                },
                "examples": {
                  "GetExecutionOutputDocument_example1": {
                    "summary": "Get execution output document",
                    "description": "",
                    "value": {
                      "documentDownloadUrl": "https://stedi-default-core-artifacts.s3.us-east-1.amazonaws.com/write/output/06aaccdc-4aaa-4add..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/output-url": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's output document. This endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.",
        "operationId": "GetExecutionOutputDocumentUrl",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutionOutputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionOutputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/transactions": {
      "get": {
        "description": "Fetch a list of transactions for a file execution, including the full transaction details.",
        "operationId": "ListExecutionTransactions",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "ListExecutionTransactions_example1": {
                "summary": "List execution transactions",
                "description": "",
                "value": "1f8b2-3c4d-5e6f-7g8h-9i0j1k2l3m4n"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "maximum": 500,
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100."
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListExecutionTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExecutionTransactionsResponseContent"
                },
                "examples": {
                  "ListExecutionTransactions_example1": {
                    "summary": "List execution transactions",
                    "description": "",
                    "value": {
                      "items": [
                        {
                          "direction": "INBOUND",
                          "mode": "test",
                          "status": "succeeded",
                          "fileExecutionId": "b1356ef2-a10d-482a-b2db-408f1d5e7ff5",
                          "transactionId": "af5398d0-ac4b-4d79-8307-01b982ce7ca6",
                          "processedAt": "2025-02-12T22:21:15.474Z",
                          "artifacts": [
                            {
                              "artifactType": "application/edi-x12",
                              "sizeBytes": 751,
                              "model": "transaction",
                              "usage": "input",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/af5398d0-ac4b-4d79-8307-01b982ce7ca6/input"
                            },
                            {
                              "artifactType": "application/json",
                              "sizeBytes": 4544,
                              "model": "transaction",
                              "usage": "output",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/af5398d0-ac4b-4d79-8307-01b982ce7ca6/output"
                            }
                          ],
                          "partnership": {
                            "partnershipId": "local-clearinghouse-test",
                            "partnershipType": "x12",
                            "sender": {
                              "profileId": "clearinghouse-test"
                            },
                            "receiver": {
                              "profileId": "local"
                            }
                          },
                          "businessIdentifiers": [
                            {
                              "elementId": "127",
                              "element": "BHT-03",
                              "name": "Reference Identification",
                              "value": "181135085"
                            },
                            {
                              "elementId": "127",
                              "element": "TRN-02",
                              "name": "Reference Identification",
                              "value": "20250212170508224"
                            },
                            {
                              "elementId": "127",
                              "element": "TRN-02",
                              "name": "Reference Identification",
                              "value": "12341234"
                            },
                            {
                              "elementId": "127",
                              "element": "TRN-02",
                              "name": "Reference Identification",
                              "value": "01J99GTR3J1X4C303BCMEX2KSZ"
                            }
                          ],
                          "x12": {
                            "metadata": {
                              "interchange": {
                                "acknowledgmentRequestedCode": "0",
                                "controlNumber": 11
                              },
                              "functionalGroup": {
                                "controlNumber": 11,
                                "release": "005010X214",
                                "date": "2025-02-12",
                                "time": "22:20:43",
                                "functionalIdentifierCode": "HN"
                              },
                              "transaction": {
                                "controlNumber": "1001",
                                "transactionSetIdentifier": "277"
                              },
                              "receiver": {
                                "applicationCode": "599264680681",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "599264680681"
                                }
                              },
                              "sender": {
                                "applicationCode": "STEDITEST",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "STEDITEST"
                                }
                              }
                            },
                            "transactionSetting": {
                              "guideId": "01JJ49XQMFNV2KQQZDGWTZAZNR",
                              "transactionSettingId": "01J8JH23XAQ2X5FFZ8T3393VDJ"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/fragments/{fragmentGroupId}": {
      "post": {
        "description": "This endpoint stages a fragment for outbound delivery.",
        "operationId": "CreateOutboundFragment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOutboundFragmentRequestContent"
              },
              "examples": {
                "CreateOutboundFragment_example1": {
                  "summary": "Stage fragment",
                  "description": "",
                  "value": {
                    "guideId": "01HQ1XPE9C3SCEB2ND7VC53A8M",
                    "fragment": {
                      "baseline_item_data_PO1_loop": [
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "123",
                            "quantity_02": 3,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 3
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "456",
                            "quantity_02": 4,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 4
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "789",
                            "quantity_02": 5,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 5
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "756",
                            "quantity_02": 3,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 3
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "432",
                            "quantity_02": 4,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 4
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "543",
                            "quantity_02": 5,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 5
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "fragmentGroupId",
            "in": "path",
            "description": "A unique ID for a group of fragments on Stedi. Stedi creates a new fragment group if one does not exist with the specified ID.",
            "schema": {
              "type": "string",
              "description": "A unique ID for a group of fragments on Stedi. Stedi creates a new fragment group if one does not exist with the specified ID."
            },
            "required": true,
            "examples": {
              "CreateOutboundFragment_example1": {
                "summary": "Stage fragment",
                "description": "",
                "value": "fragmentGroup-02-21-2024"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CreateOutboundFragment 201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOutboundFragmentResponseContent"
                },
                "examples": {
                  "CreateOutboundFragment_example1": {
                    "summary": "Stage fragment",
                    "description": "",
                    "value": {
                      "fragmentGroupId": "some-transaction-id",
                      "createdAt": "2024-02-21T00:00:00Z",
                      "fragmentId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/partnerships/{partnershipId}/transaction-groups/{transactionGroupId}/generate-edi": {
      "post": {
        "description": "This endpoint generates and delivers a fully-formed EDI file containing the staged transactions in the specified transaction group.",
        "operationId": "GenerateTransactionGroupEdi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTransactionGroupEdiRequestContent"
              },
              "examples": {
                "GenerateTransactionGroupEdi_example1": {
                  "summary": "Generate EDI for transaction group",
                  "description": "",
                  "value": {
                    "filename": "my-output-file.edi",
                    "overrides": {
                      "interchangeUsageIndicator": "T",
                      "acknowledgmentRequestedCode": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**."
            },
            "required": true,
            "examples": {
              "GenerateTransactionGroupEdi_example1": {
                "summary": "Generate EDI for transaction group",
                "description": "",
                "value": "ACME_BSW"
              }
            }
          },
          {
            "name": "transactionGroupId",
            "in": "path",
            "description": "A unique ID for a transaction group stored on Stedi. You can only call this endpoint with a given `transactionGroupId` once. Afterward, the transaction group is locked.",
            "schema": {
              "type": "string",
              "description": "A unique ID for a transaction group stored on Stedi. You can only call this endpoint with a given `transactionGroupId` once. Afterward, the transaction group is locked."
            },
            "required": true,
            "examples": {
              "GenerateTransactionGroupEdi_example1": {
                "summary": "Generate EDI for transaction group",
                "description": "",
                "value": "tx-group-02-21-2024"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GenerateTransactionGroupEdi 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTransactionGroupEdiResponseContent"
                },
                "examples": {
                  "GenerateTransactionGroupEdi_example1": {
                    "summary": "Generate EDI for transaction group",
                    "description": "",
                    "value": {
                      "artifactId": "f75168e4-e682-4410-bfec-b5b1541c7f21.x12",
                      "fileExecutionId": "f75168e4-e682-4410-bfec-b5b1541c7f21"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/partnerships/{partnershipId}/transaction-groups/{transactionGroupId}/transactions/{transactionSettingId}": {
      "post": {
        "description": "This endpoint stages a transaction for outbound delivery.",
        "operationId": "CreateTransactionGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionGroupRequestContent"
              },
              "examples": {
                "CreateTransactionGroup_example1": {
                  "summary": "Stage transaction",
                  "description": "",
                  "value": {
                    "transaction": {
                      "heading": {
                        "transaction_set_header_ST": {
                          "transaction_set_identifier_code_01": "850",
                          "transaction_set_control_number_02": 1
                        },
                        "beginning_segment_for_purchase_order_BEG": {
                          "transaction_set_purpose_code_01": "XX",
                          "purchase_order_type_code_02": "XX",
                          "purchase_order_number_03": "XXXXX",
                          "date_05": "2023-08-11"
                        }
                      },
                      "detail": {
                        "baseline_item_data_PO1_loop": [
                          {
                            "baseline_item_data_PO1": {}
                          }
                        ]
                      },
                      "summary": {
                        "transaction_set_trailer_SE": {
                          "number_of_included_segments_01": 4,
                          "transaction_set_control_number_02": 1
                        }
                      }
                    }
                  }
                },
                "CreateTransactionGroup_example2": {
                  "summary": "Stage transaction async",
                  "description": "",
                  "value": {
                    "async": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**."
            },
            "required": true,
            "examples": {
              "CreateTransactionGroup_example1": {
                "summary": "Stage transaction",
                "description": "",
                "value": "acme_amazon"
              },
              "CreateTransactionGroup_example2": {
                "summary": "Stage transaction async",
                "description": "",
                "value": "acme_amazon"
              }
            }
          },
          {
            "name": "transactionSettingId",
            "in": "path",
            "description": "A unique ID for the outbound transaction setting Stedi should use to determine the correct guide for validation and generation. It must be attached to the partnership associated with the `partnershipId`. To find the `transactionSettingsId`, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting.",
            "schema": {
              "type": "string",
              "description": "A unique ID for the outbound transaction setting Stedi should use to determine the correct guide for validation and generation. It must be attached to the partnership associated with the `partnershipId`. To find the `transactionSettingsId`, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting."
            },
            "required": true,
            "examples": {
              "CreateTransactionGroup_example1": {
                "summary": "Stage transaction",
                "description": "",
                "value": "004010-850"
              },
              "CreateTransactionGroup_example2": {
                "summary": "Stage transaction async",
                "description": "",
                "value": "004010-850"
              }
            }
          },
          {
            "name": "transactionGroupId",
            "in": "path",
            "description": "A unique ID for a group of transactions on Stedi. Stedi creates a new transaction group if one does not exist with the specified ID.",
            "schema": {
              "type": "string",
              "description": "A unique ID for a group of transactions on Stedi. Stedi creates a new transaction group if one does not exist with the specified ID."
            },
            "required": true,
            "examples": {
              "CreateTransactionGroup_example1": {
                "summary": "Stage transaction",
                "description": "",
                "value": "tx-group-02-21-2024"
              },
              "CreateTransactionGroup_example2": {
                "summary": "Stage transaction async",
                "description": "",
                "value": "tx-group-02-21-2024"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. Required if providing `async: true` [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. Required if providing `async: true` [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CreateTransactionGroup 201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionGroupResponseContent"
                },
                "examples": {
                  "CreateTransactionGroup_example1": {
                    "summary": "Stage transaction",
                    "description": "",
                    "value": {
                      "transactionGroupId": "tx-group-02-21-2024",
                      "createdAt": "2024-02-21T00:00:00Z",
                      "transactionId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  },
                  "CreateTransactionGroup_example2": {
                    "summary": "Stage transaction async",
                    "description": "",
                    "value": {
                      "transactionGroupId": "tx-group-02-21-2024",
                      "createdAt": "2024-02-21T00:00:00Z",
                      "transactionId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e",
                      "uploadUrl": "https://s3.amazonaws.com/bucket/key"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/partnerships/{partnershipId}/transactions/{transactionSettingId}": {
      "post": {
        "description": "This endpoint generates and delivers fully-formed EDI files containing a single transaction. It is the simplest way to generate EDI with Stedi.",
        "operationId": "CreatePartnershipOutboundTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePartnershipOutboundTransactionRequestContent"
              },
              "examples": {
                "CreatePartnershipOutboundTransaction_example1": {
                  "summary": "Generate Transaction with Guide JSON",
                  "description": "",
                  "value": {
                    "filename": "my-output-file.edi",
                    "transaction": {
                      "heading": {
                        "transaction_set_header_ST": {
                          "transaction_set_identifier_code_01": "850",
                          "transaction_set_control_number_02": 1
                        },
                        "beginning_segment_for_purchase_order_BEG": {
                          "transaction_set_purpose_code_01": "XX",
                          "purchase_order_type_code_02": "XX",
                          "purchase_order_number_03": "XXXXX",
                          "date_05": "2023-08-11"
                        }
                      },
                      "detail": {
                        "baseline_item_data_PO1_loop": [
                          {
                            "baseline_item_data_PO1": {}
                          }
                        ]
                      },
                      "summary": {
                        "transaction_set_trailer_SE": {
                          "number_of_included_segments_01": 4,
                          "transaction_set_control_number_02": 1
                        }
                      }
                    }
                  }
                },
                "CreatePartnershipOutboundTransaction_example2": {
                  "summary": "Generate Transaction with Fragments",
                  "description": "",
                  "value": {
                    "filename": "my-output-file-fragments.edi",
                    "fragmentGroupIds": [
                      "some-fragment-group-id"
                    ],
                    "transaction": {
                      "heading": {
                        "transaction_set_header_ST": {
                          "transaction_set_identifier_code_01": "850",
                          "transaction_set_control_number_02": 1
                        },
                        "beginning_segment_for_purchase_order_BEG": {
                          "transaction_set_purpose_code_01": "XX",
                          "purchase_order_type_code_02": "XX",
                          "purchase_order_number_03": "XXXX",
                          "date_05": "2023-12-12"
                        }
                      },
                      "detail": {
                        "baseline_item_data_PO1_loop": []
                      },
                      "summary": {}
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**."
            },
            "required": true,
            "examples": {
              "CreatePartnershipOutboundTransaction_example1": {
                "summary": "Generate Transaction with Guide JSON",
                "description": "",
                "value": "ACME_AMAZON"
              },
              "CreatePartnershipOutboundTransaction_example2": {
                "summary": "Generate Transaction with Fragments",
                "description": "",
                "value": "ACME_AMAZON"
              }
            }
          },
          {
            "name": "transactionSettingId",
            "in": "path",
            "description": "A unique ID for the outbound transaction setting Stedi should use to determine the correct guide for validation and generation. It must be attached to the partnership associated with the `partnershipId`. To find the `transactionSettingsId`, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting. If you are generating a transaction with fragments, the associated guide must be configured to use fragments.",
            "schema": {
              "type": "string",
              "description": "A unique ID for the outbound transaction setting Stedi should use to determine the correct guide for validation and generation. It must be attached to the partnership associated with the `partnershipId`. To find the `transactionSettingsId`, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting. If you are generating a transaction with fragments, the associated guide must be configured to use fragments."
            },
            "required": true,
            "examples": {
              "CreatePartnershipOutboundTransaction_example1": {
                "summary": "Generate Transaction with Guide JSON",
                "description": "",
                "value": "some-setting-id"
              },
              "CreatePartnershipOutboundTransaction_example2": {
                "summary": "Generate Transaction with Fragments",
                "description": "",
                "value": "some-setting-id"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreatePartnershipOutboundTransaction 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePartnershipOutboundTransactionResponseContent"
                },
                "examples": {
                  "CreatePartnershipOutboundTransaction_example1": {
                    "summary": "Generate Transaction with Guide JSON",
                    "description": "",
                    "value": {
                      "fileExecutionId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  },
                  "CreatePartnershipOutboundTransaction_example2": {
                    "summary": "Generate Transaction with Fragments",
                    "description": "",
                    "value": {
                      "fileExecutionId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/pg-executions/{executionId}": {
      "get": {
        "description": "Retrieve the file execution details for a given executionId.",
        "operationId": "PgGetExecution",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "PgGetExecution 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgGetExecutionResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/pg-executions/{executionId}/faults": {
      "get": {
        "description": "Fetch a list of faults for a given file execution, sorted by the date they were created from newest to oldest.",
        "operationId": "PgListExecutionFaults",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "maximum": 500,
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. If not specified, the default is 100."
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PgListExecutionFaults 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgListExecutionFaultsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/pg-executions/{executionId}/input": {
      "get": {
        "description": "This endpoint retrieves an execution's input document before it passes through any translation and mappings.",
        "operationId": "PgGetExecutionInputDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "PgGetExecutionInputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgGetExecutionInputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/pg-executions/{executionId}/metadata": {
      "get": {
        "description": "This endpoint retrieves an execution's metadata document.",
        "operationId": "PgGetExecutionMetadataDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "PgGetExecutionMetadataDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgGetExecutionMetadataDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/pg-executions/{executionId}/output": {
      "get": {
        "description": "This endpoint retrieves an execution's output document.",
        "operationId": "PgGetExecutionOutputDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file delivered event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-delivered), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file delivered event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-delivered), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "PgGetExecutionOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgGetExecutionOutputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/pg-executions/{executionId}/transactions": {
      "get": {
        "description": "Fetch a list of transactions for a file execution, including the full transaction details.",
        "operationId": "PgListExecutionTransactions",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the file execution within Stedi. This ID is included in the [file processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#file-processed), or you can retrieve it manually from the file's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "PgListExecutionTransactions_example1": {
                "summary": "List execution transactions",
                "description": "",
                "value": "1f8b2-3c4d-5e6f-7g8h-9i0j1k2l3m4n"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "maximum": 500,
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100."
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PgListExecutionTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgListExecutionTransactionsResponseContent"
                },
                "examples": {
                  "PgListExecutionTransactions_example1": {
                    "summary": "List execution transactions",
                    "description": "",
                    "value": {
                      "items": [
                        {
                          "direction": "INBOUND",
                          "mode": "test",
                          "status": "succeeded",
                          "fileExecutionId": "b1356ef2-a10d-482a-b2db-408f1d5e7ff5",
                          "transactionId": "af5398d0-ac4b-4d79-8307-01b982ce7ca6",
                          "processedAt": "2025-02-12T22:21:15.474Z",
                          "artifacts": [
                            {
                              "artifactType": "application/edi-x12",
                              "sizeBytes": 751,
                              "model": "transaction",
                              "usage": "input",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/af5398d0-ac4b-4d79-8307-01b982ce7ca6/input"
                            },
                            {
                              "artifactType": "application/json",
                              "sizeBytes": 4544,
                              "model": "transaction",
                              "usage": "output",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/af5398d0-ac4b-4d79-8307-01b982ce7ca6/output"
                            }
                          ],
                          "partnership": {
                            "partnershipId": "local-clearinghouse-test",
                            "partnershipType": "x12",
                            "sender": {
                              "profileId": "clearinghouse-test"
                            },
                            "receiver": {
                              "profileId": "local"
                            }
                          },
                          "businessIdentifiers": [
                            {
                              "elementId": "127",
                              "element": "BHT-03",
                              "name": "Reference Identification",
                              "value": "181135085"
                            },
                            {
                              "elementId": "127",
                              "element": "TRN-02",
                              "name": "Reference Identification",
                              "value": "20250212170508224"
                            },
                            {
                              "elementId": "127",
                              "element": "TRN-02",
                              "name": "Reference Identification",
                              "value": "12341234"
                            },
                            {
                              "elementId": "127",
                              "element": "TRN-02",
                              "name": "Reference Identification",
                              "value": "01J99GTR3J1X4C303BCMEX2KSZ"
                            }
                          ],
                          "x12": {
                            "metadata": {
                              "interchange": {
                                "acknowledgmentRequestedCode": "0",
                                "controlNumber": 11
                              },
                              "functionalGroup": {
                                "controlNumber": 11,
                                "release": "005010X214",
                                "date": "2025-02-12",
                                "time": "22:20:43",
                                "functionalIdentifierCode": "HN"
                              },
                              "transaction": {
                                "controlNumber": "1001",
                                "transactionSetIdentifier": "277"
                              },
                              "receiver": {
                                "applicationCode": "599264680681",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "599264680681"
                                }
                              },
                              "sender": {
                                "applicationCode": "STEDITEST",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "STEDITEST"
                                }
                              }
                            },
                            "transactionSetting": {
                              "guideId": "01JJ49XQMFNV2KQQZDGWTZAZNR",
                              "transactionSettingId": "01J8JH23XAQ2X5FFZ8T3393VDJ"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/polling/executions": {
      "get": {
        "description": "Poll for new file executions that Stedi has recently processed.",
        "operationId": "ListPollingExecutions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100."
            },
            "examples": {
              "ListPollingExecutions_example1": {
                "summary": "List executions",
                "description": "",
                "value": 200
              }
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.\n\nYou must supply either this property or `startDateTime` in every request.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.\n\nYou must supply either this property or `startDateTime` in every request."
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "An ISO 8601 formatted string. For example `2023-08-28T00:00:00Z`. Stedi returns executions processed after this time.\n\nYou must supply either this property or `pageToken` in every request. The `startDateTime` must be at least one minute in the past.",
            "schema": {
              "type": "string",
              "description": "An ISO 8601 formatted string. For example `2023-08-28T00:00:00Z`. Stedi returns executions processed after this time.\n\nYou must supply either this property or `pageToken` in every request. The `startDateTime` must be at least one minute in the past.",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListPollingExecutions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPollingExecutionsResponseContent"
                },
                "examples": {
                  "ListPollingExecutions_example1": {
                    "summary": "List executions",
                    "description": "",
                    "value": {
                      "items": [
                        {
                          "createdAt": "2025-04-04T17:14:35.481Z",
                          "direction": "INBOUND",
                          "executionId": "55907f88-999e-4912-9e9b-78326f8bade8",
                          "faultCount": 0,
                          "partnershipId": "local-clearinghouse-test",
                          "source": {
                            "dirname": ".",
                            "name": "test-inbound-ingest-30848232-fa0c-4151-8217-d03205e806f9.edi"
                          },
                          "retryable": true,
                          "status": "COMPLETED",
                          "transactionCount": 1,
                          "updatedAt": "2025-04-04T17:14:42.854Z"
                        },
                        {
                          "createdAt": "2025-04-02T21:30:08.387Z",
                          "direction": "INBOUND",
                          "executionId": "95236a56-a020-4522-8fef-bcffcec0ec1d",
                          "faultCount": 0,
                          "partnershipId": "local-clearinghouse-test",
                          "source": {
                            "dirname": ".",
                            "name": "test-inbound-ingest-3f2efd94-2a81-4b57-b4de-9b970a50db60.edi"
                          },
                          "retryable": true,
                          "status": "COMPLETED",
                          "transactionCount": 1,
                          "updatedAt": "2025-04-02T21:30:16.185Z"
                        },
                        {
                          "createdAt": "2025-02-28T19:16:26.041Z",
                          "direction": "OUTBOUND",
                          "executionId": "06bdccdc-4ab9-4add-b1dc-a76a0183f299",
                          "faultCount": 0,
                          "partnershipId": "local-clearinghouse-test",
                          "source": {
                            "dirname": ".",
                            "name": "837-clearinghouse_outbound.edi"
                          },
                          "retryable": true,
                          "status": "COMPLETED",
                          "transactionCount": 1,
                          "updatedAt": "2025-02-28T19:16:27.706Z"
                        }
                      ],
                      "nextPageToken": "eyJwYWdlIjoxLCJwYWdlU2l6ZSI6MTAsInBhZ2VUb3RhbCI6MzE0fQ=="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/polling/transactions": {
      "get": {
        "description": "Poll for new transactions that Stedi has processed.",
        "operationId": "ListPollingTransactions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100."
            },
            "examples": {
              "ListPollingTransactions_example1": {
                "summary": "List transactions",
                "description": "",
                "value": 200
              }
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.\n\nYou must supply either this property or `startDateTime` in every request.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.\n\nYou must supply either this property or `startDateTime` in every request."
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "An ISO 8601 formatted string. For example `2023-08-28T00:00:00Z`. It must be at least one minute in the past.Stedi returns transactions processed after this time.\n\nYou must supply either this property or `pageToken` in every request. ",
            "schema": {
              "type": "string",
              "description": "An ISO 8601 formatted string. For example `2023-08-28T00:00:00Z`. It must be at least one minute in the past.Stedi returns transactions processed after this time.\n\nYou must supply either this property or `pageToken` in every request.",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListPollingTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPollingTransactionsResponseContent"
                },
                "examples": {
                  "ListPollingTransactions_example1": {
                    "summary": "List transactions",
                    "description": "",
                    "value": {
                      "items": [
                        {
                          "direction": "INBOUND",
                          "mode": "test",
                          "status": "succeeded",
                          "fileExecutionId": "95236a56-a020-4522-8fef-bcffcec0ec1d",
                          "transactionId": "c8dd3a67-b8ca-4b0e-aa73-e0de82414b8f",
                          "processedAt": "2025-04-02T21:30:15.801Z",
                          "artifacts": [
                            {
                              "artifactType": "application/edi-x12",
                              "sizeBytes": 8374,
                              "model": "transaction",
                              "usage": "input",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/4443355-b8ca-4b0e-aa73-e0de12314b8f/input"
                            },
                            {
                              "artifactType": "application/json",
                              "sizeBytes": 76898,
                              "model": "transaction",
                              "usage": "output",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/111222333-b8ca-4b0e-aa73-e0de67454b8f/output"
                            }
                          ],
                          "partnership": {
                            "partnershipId": "local-clearinghouse-test",
                            "partnershipType": "x12",
                            "sender": {
                              "profileId": "clearinghouse-test"
                            },
                            "receiver": {
                              "profileId": "local"
                            }
                          },
                          "businessIdentifiers": [
                            {
                              "elementId": "127",
                              "element": "BHT-03",
                              "name": "Reference Identification",
                              "value": "XXXXXX"
                            }
                          ],
                          "x12": {
                            "metadata": {
                              "interchange": {
                                "acknowledgmentRequestedCode": "0",
                                "controlNumber": 1
                              },
                              "functionalGroup": {
                                "controlNumber": 1,
                                "release": "005010X222A1",
                                "date": "2025-04-02",
                                "time": "21:29:57",
                                "functionalIdentifierCode": "HC"
                              },
                              "transaction": {
                                "controlNumber": "0001",
                                "transactionSetIdentifier": "837"
                              },
                              "receiver": {
                                "applicationCode": "STEDI-TEST",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "STEDI-TEST"
                                }
                              },
                              "sender": {
                                "applicationCode": "TestSender",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "TestSender"
                                }
                              }
                            },
                            "transactionSetting": {
                              "guideId": "01JQW6E5RSBSTKS3ZQ1SPR4019",
                              "transactionSettingId": "01JQW6E72Q3HDXM40YYAQCBZDY"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "description": "Fetch a list of transactions, sorted by the date they were created from newest to oldest.",
        "operationId": "ListTransactions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "maximum": 500,
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. You can set this to a maximum of 500 elements. If not specified, the default is 100."
            },
            "examples": {
              "ListTransactions_example1": {
                "summary": "List transactions",
                "description": "",
                "value": 200
              }
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A token returned by a previous call to this operation in the `nextPageToken`. If not specified, Stedi returns the first page of results."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTransactionsResponseContent"
                },
                "examples": {
                  "ListTransactions_example1": {
                    "summary": "List transactions",
                    "description": "",
                    "value": {
                      "items": [
                        {
                          "direction": "INBOUND",
                          "mode": "test",
                          "status": "succeeded",
                          "fileExecutionId": "95236a56-a020-4522-8fef-bcffcec0ec1d",
                          "transactionId": "c8dd3a67-b8ca-4b0e-aa73-e0de82414b8f",
                          "processedAt": "2025-04-02T21:30:15.801Z",
                          "artifacts": [
                            {
                              "artifactType": "application/edi-x12",
                              "sizeBytes": 8374,
                              "model": "transaction",
                              "usage": "input",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/112233344-b8ca-4h1e-aa73-123482414b8f/input"
                            },
                            {
                              "artifactType": "application/json",
                              "sizeBytes": 76898,
                              "model": "transaction",
                              "usage": "output",
                              "url": "https://core.us.stedi.com/2023-08-01/transactions/1115555-b8ca-1234-aa73-e0je82414hb8f/output"
                            }
                          ],
                          "partnership": {
                            "partnershipId": "stedi_test-sender",
                            "partnershipType": "x12",
                            "sender": {
                              "profileId": "test-sender"
                            },
                            "receiver": {
                              "profileId": "stedi"
                            }
                          },
                          "businessIdentifiers": [
                            {
                              "elementId": "127",
                              "element": "BHT-03",
                              "name": "Reference Identification",
                              "value": "XXXXXX"
                            }
                          ],
                          "x12": {
                            "metadata": {
                              "interchange": {
                                "acknowledgmentRequestedCode": "0",
                                "controlNumber": 1
                              },
                              "functionalGroup": {
                                "controlNumber": 1,
                                "release": "005010X222A1",
                                "date": "2025-04-02",
                                "time": "21:29:57",
                                "functionalIdentifierCode": "HC"
                              },
                              "transaction": {
                                "controlNumber": "0001",
                                "transactionSetIdentifier": "837"
                              },
                              "receiver": {
                                "applicationCode": "STEDI-TEST",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "STEDI-TEST"
                                }
                              },
                              "sender": {
                                "applicationCode": "TestSender",
                                "isa": {
                                  "qualifier": "ZZ",
                                  "id": "TestSender"
                                }
                              }
                            },
                            "transactionSetting": {
                              "guideId": "01JQW6E5RSBSTKS3ZQ1SPR4019",
                              "transactionSettingId": "01JQW6E72Q3HDXM40YYAQCBZDY"
                            }
                          }
                        }
                      ],
                      "nextPageToken": "be08e5ba4bf36da9da27dcb651e64a6e5502685499994f354"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "description": "Fetch details for a specific transaction.",
        "operationId": "GetTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransaction_example1": {
                "summary": "List transactions",
                "description": "",
                "value": "a15b68ca-fae0-42de-b8a3-f436668b8604"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransaction 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionResponseContent"
                },
                "examples": {
                  "GetTransaction_example1": {
                    "summary": "List transactions",
                    "description": "",
                    "value": {
                      "direction": "INBOUND",
                      "mode": "test",
                      "status": "succeeded",
                      "fileExecutionId": "95236a56-a020-4522-8fef-bcffcec0ec1d",
                      "transactionId": "c8dd3a67-b8ca-4b0e-aa73-e0de82414b8f",
                      "processedAt": "2025-04-02T21:30:15.801Z",
                      "artifacts": [
                        {
                          "artifactType": "application/edi-x12",
                          "sizeBytes": 8374,
                          "model": "transaction",
                          "usage": "input",
                          "url": "https://core.us.stedi.com/2023-08-01/transactions/c8dd1111-b8ca-4330e-aa73-e0de33314b8f/input"
                        },
                        {
                          "artifactType": "application/json",
                          "sizeBytes": 76898,
                          "model": "transaction",
                          "usage": "output",
                          "url": "https://core.us.stedi.com/2023-08-01/transactions/c8dd3a67-b8ca-4b0e-kk73-55667882414b8f/output"
                        }
                      ],
                      "partnership": {
                        "partnershipId": "stedi_test-sender",
                        "partnershipType": "x12",
                        "sender": {
                          "profileId": "test-sender"
                        },
                        "receiver": {
                          "profileId": "stedi"
                        }
                      },
                      "businessIdentifiers": [
                        {
                          "elementId": "127",
                          "element": "BHT-03",
                          "name": "Reference Identification",
                          "value": "XXXXXX"
                        }
                      ],
                      "x12": {
                        "metadata": {
                          "interchange": {
                            "acknowledgmentRequestedCode": "0",
                            "controlNumber": 1
                          },
                          "functionalGroup": {
                            "controlNumber": 1,
                            "release": "005010X222A1",
                            "date": "2025-04-02",
                            "time": "21:29:57",
                            "functionalIdentifierCode": "HC"
                          },
                          "transaction": {
                            "controlNumber": "0001",
                            "transactionSetIdentifier": "837"
                          },
                          "receiver": {
                            "applicationCode": "STEDI-TEST",
                            "isa": {
                              "qualifier": "ZZ",
                              "id": "STEDI-TEST"
                            }
                          },
                          "sender": {
                            "applicationCode": "TestSender",
                            "isa": {
                              "qualifier": "ZZ",
                              "id": "TestSender"
                            }
                          }
                        },
                        "transactionSetting": {
                          "guideId": "01JQW6E5RSBSTKS3ZQ1SPR4019",
                          "transactionSettingId": "01JQW6E72Q3HDXM40YYAQCBZDY"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/attachment/{artifactId}": {
      "get": {
        "description": "Retrieve a transaction's output document.",
        "operationId": "GetTransactionAttachmentDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "artifactId",
            "in": "path",
            "description": "A unique identifier for the artifact within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the artifact within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionAttachmentDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionAttachmentDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/attachment/{artifactId}/url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's attachment document url.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionAttachmentDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "artifactId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionAttachmentDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionAttachmentDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/fragments/{fragmentIndex}": {
      "get": {
        "description": "Retrieve metadata for a fragment.",
        "operationId": "GetTransactionFragment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransactionFragment_example1": {
                "summary": "Get fragment",
                "description": "",
                "value": "a15b68ca-fae0-42de-b8a3-f436668b8604"
              }
            }
          },
          {
            "name": "fragmentIndex",
            "in": "path",
            "description": "The identifier for a specific fragment within a processed transaction. This ID is included in the [fragment processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#fragment-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "number",
              "description": "The identifier for a specific fragment within a processed transaction. This ID is included in the [fragment processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#fragment-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransactionFragment_example1": {
                "summary": "Get fragment",
                "description": "",
                "value": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionFragment 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionFragmentResponseContent"
                },
                "examples": {
                  "GetTransactionFragment_example1": {
                    "summary": "Get fragment",
                    "description": "",
                    "value": {
                      "direction": "INBOUND",
                      "mode": "production",
                      "fileExecutionId": "29d6b95d-c611-bce6-b893-0e64821cd238",
                      "transactionId": "7d0c6f84-4cec-4f4a-a681-e7a36eb48d25",
                      "processedAt": "2023-10-12T15:34:01.435Z",
                      "partnership": {
                        "partnershipId": "me_another-merch",
                        "partnershipType": "x12",
                        "sender": {
                          "profileId": "merch"
                        },
                        "receiver": {
                          "profileId": "me"
                        }
                      },
                      "x12": {
                        "metadata": {
                          "interchange": {
                            "acknowledgmentRequestedCode": "0",
                            "controlNumber": 103
                          },
                          "functionalGroup": {
                            "controlNumber": 103,
                            "release": "005010X220A1",
                            "date": "2004-12-27",
                            "time": "13:24",
                            "functionalIdentifierCode": "BE"
                          },
                          "transaction": {
                            "controlNumber": "13331",
                            "transactionSetIdentifier": "846"
                          },
                          "receiver": {
                            "applicationCode": "THISISME",
                            "isa": {
                              "qualifier": "02",
                              "id": "THISISME"
                            }
                          },
                          "sender": {
                            "applicationCode": "ANOTHERMERCH",
                            "isa": {
                              "qualifier": "02",
                              "id": "ANOTHERMERCH"
                            }
                          }
                        },
                        "transactionSetting": {
                          "guideId": "01HAPYY1YPFWGVJH1HD75SP0A2",
                          "transactionSettingId": "01HCAHP7PY84DBZG0FM5JB4MCE"
                        }
                      },
                      "fragments": {
                        "batchSize": 800,
                        "keyName": "item_identification_LIN_loop",
                        "fragmentCount": 1065
                      },
                      "fragmentIndex": 0,
                      "artifacts": [
                        {
                          "artifactType": "application/json",
                          "sizeBytes": 389388,
                          "model": "fragment",
                          "usage": "output",
                          "url": "https://core.us.stedi.com/2023-08-01/transactions/7d0c6f84-4cec-4f4a-a681-e7a36eb48d25/fragments/0/output"
                        }
                      ],
                      "transactionUrl": "https://core.us.stedi.com/2023-08-01/transactions/7d0c6f84-4cec-4f4a-a681-e7a36eb48d25"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/fragments/{fragmentIndex}/output": {
      "get": {
        "description": "Retrieve a transaction fragment's output document after it has been translated.",
        "operationId": "GetTransactionFragmentOutputDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransactionFragmentOutputDocument_example1": {
                "summary": "Get fragment output",
                "description": "",
                "value": "a15b68ca-fae0-42de-b8a3-f436668b8604"
              }
            }
          },
          {
            "name": "fragmentIndex",
            "in": "path",
            "description": "The identifier for a specific fragment within a processed transaction. This ID is included in the [fragment processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#fragment-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "number",
              "description": "The identifier for a specific fragment within a processed transaction. This ID is included in the [fragment processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#fragment-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransactionFragmentOutputDocument_example1": {
                "summary": "Get fragment output",
                "description": "",
                "value": 1
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionFragmentOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionFragmentOutputDocumentResponseContent"
                },
                "examples": {
                  "GetTransactionFragmentOutputDocument_example1": {
                    "summary": "Get fragment output",
                    "description": "",
                    "value": {
                      "documentDownloadUrl": "https://core.us.stedi.com/2023-08-01/transactions/7d0c6f84-4cec-4f4a..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/fragments/{fragmentIndex}/output-url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction fragment's output document URL after it has been translated via Core.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content.\nThere are no size restrictions on documents when fetching from this endpoint, however they are generally smaller and consumable by nature of being a fragment.\n",
        "operationId": "GetTransactionFragmentOutputDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "fragmentIndex",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionFragmentOutputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionFragmentOutputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/input": {
      "get": {
        "description": "Retrieve a transaction's input document.",
        "operationId": "GetTransactionInputDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransactionInputDocument_example1": {
                "summary": "List transactions",
                "description": "",
                "value": "c8dd3a67-b8ca-4b0e-aa73-e0de82414b8f"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionInputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionInputDocumentResponseContent"
                },
                "examples": {
                  "GetTransactionInputDocument_example1": {
                    "summary": "List transactions",
                    "description": "",
                    "value": {
                      "documentDownloadUrl": "https://stedi-default-core-artifacts.s3.us-east-1.amazonaws.com/55907f88-999e-4912-9e9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/input-url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's input document url before it passes through any translation and mappings, generally this will be EDI.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionInputDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionInputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionInputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/output": {
      "get": {
        "description": "Retrieve a transaction's output document.",
        "operationId": "GetTransactionOutputDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [transaction processed event](https://www.stedi.com/docs/edi-platform/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true,
            "examples": {
              "GetTransactionOutputDocument_example1": {
                "summary": "List transactions",
                "description": "",
                "value": "c8dd3a67-b8ca-4b0e-aa73-e0de82414b8f"
              }
            }
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionOutputDocumentResponseContent"
                },
                "examples": {
                  "GetTransactionOutputDocument_example1": {
                    "summary": "List transactions",
                    "description": "",
                    "value": {
                      "documentDownloadUrl": "https://stedi-default-core-artifacts.s3.us-east-1.amazonaws.com/55907f88-999e-4912-9e9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/output-url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's output document url after it has been translated via Core.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionOutputDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionOutputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionOutputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/x12/partnerships/{partnershipId}/configuration": {
      "delete": {
        "operationId": "DeleteX12PartnershipConfiguration",
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "DeleteX12PartnershipConfiguration 200 response"
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetX12PartnershipConfiguration",
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetX12PartnershipConfiguration 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetX12PartnershipConfigurationResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PutX12PartnershipConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutX12PartnershipConfigurationRequestContent"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "PutX12PartnershipConfiguration 200 response"
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/x12/partnerships/{partnershipId}/generate-edi": {
      "post": {
        "description": "This endpoint generates and delivers fully-formed EDI files to your trading partners.",
        "operationId": "GenerateEdi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateEdiRequestContent"
              },
              "examples": {
                "GenerateEdi_example1": {
                  "summary": "Generate EDI",
                  "description": "",
                  "value": {
                    "filename": "my-output-file.edi",
                    "overrides": {
                      "interchangeUsageIndicator": "T",
                      "acknowledgmentRequestedCode": "1"
                    },
                    "transactionGroups": [
                      {
                        "transactionSettingId": "some-setting-id",
                        "overrides": {
                          "localApplicationId": "customLocal",
                          "partnerApplicationId": "customPartner"
                        },
                        "transactions": [
                          {
                            "heading": {
                              "transaction_set_header_ST": {
                                "transaction_set_identifier_code_01": "850",
                                "transaction_set_control_number_02": 1
                              },
                              "beginning_segment_for_purchase_order_BEG": {
                                "transaction_set_purpose_code_01": "XX",
                                "purchase_order_type_code_02": "XX",
                                "purchase_order_number_03": "XXXXX",
                                "date_05": "2023-08-11"
                              }
                            },
                            "detail": {
                              "baseline_item_data_PO1_loop": [
                                {
                                  "baseline_item_data_PO1": {}
                                }
                              ]
                            },
                            "summary": {
                              "transaction_set_trailer_SE": {
                                "number_of_included_segments_01": 4,
                                "transaction_set_control_number_02": 1
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9._-]+)$",
              "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**."
            },
            "required": true,
            "examples": {
              "GenerateEdi_example1": {
                "summary": "Generate EDI",
                "description": "",
                "value": "ACME_BSW"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GenerateEdi 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateEdiResponseContent"
                },
                "examples": {
                  "GenerateEdi_example1": {
                    "summary": "Generate EDI",
                    "description": "",
                    "value": {
                      "edi": "ISA*00*          *00*          *14*ANOTHERMERCH   *ZZ*THISISME       *230828*0900*^*00801*000000002*1*P*>~GS*PO*ANOTHERMERCH*THISISME*20230828*090020*000000002*X*008010~ST*850*0001~BEG*XX*XX*XXXXX**20230811~PO1~SE*4*0001~GE*1*000000002~IEA*1*000000002~",
                      "artifactId": "f75168e4-e682-4410-bfec-b5b1541c7f21.x12",
                      "fileExecutionId": "f75168e4-e682-4410-bfec-b5b1541c7f21"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessDeniedExceptionResponseContent": {
        "type": "object",
        "description": "The server response for authorization failure.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "Artifact": {
        "type": "object",
        "properties": {
          "artifactType": {
            "$ref": "#/components/schemas/ArtifactType"
          },
          "usage": {
            "$ref": "#/components/schemas/ArtifactUsage"
          },
          "sizeBytes": {
            "type": "number",
            "description": "The size of the artifact in bytes."
          },
          "url": {
            "type": "string",
            "description": "A URL to download the artifact."
          },
          "model": {
            "$ref": "#/components/schemas/ArtifactModel"
          }
        },
        "required": [
          "artifactType",
          "model",
          "sizeBytes",
          "url",
          "usage"
        ]
      },
      "ArtifactModel": {
        "type": "string",
        "description": "The model of the artifact, which indicates the type of process or operation it represents. For example, an execution artifact represents a file that was processed, a fragment artifact represents a part of a larger transaction, and a fault artifact represents an error that occurred during processing.",
        "enum": [
          "execution",
          "fragment",
          "transaction",
          "fault"
        ]
      },
      "ArtifactType": {
        "type": "string",
        "description": "The format of the artifact.",
        "enum": [
          "text/csv",
          "application/edifact",
          "application/filepart",
          "application/json",
          "application/pdf",
          "text/psv",
          "text/tsv",
          "application/edi-x12",
          "application/xml",
          "application/zip",
          "image/jpeg",
          "image/png",
          "image/tiff",
          "text/plain"
        ]
      },
      "ArtifactUsage": {
        "type": "string",
        "description": "The type of data the artifact contains. For example, an input artifact represents the original data Stedi received before processing, while an output artifact represents the processed data.\n\nFor example, for an inbound 835 ERA from a payer, the input artifact would be the original X12 EDI, and the output artifact would be the JSON representation of the ERA.",
        "enum": [
          "attachment",
          "input",
          "metadata",
          "output"
        ]
      },
      "BusinessIdentifier": {
        "type": "object",
        "properties": {
          "elementId": {
            "type": "string",
            "description": "The identifier of the element containing the business identifier in the EDI specification."
          },
          "element": {
            "type": "string",
            "description": "The element where the business identifier was found. For example, `BEG-03`."
          },
          "name": {
            "type": "string",
            "description": "The friendly name of the business identifier. For example, `Purchase Order Number`."
          },
          "value": {
            "type": "string",
            "description": "The value of the business identifier."
          }
        },
        "required": [
          "element",
          "elementId",
          "name",
          "value"
        ]
      },
      "ConnectionType": {
        "type": "string",
        "description": "The type of connection used for exchanging files.",
        "enum": [
          "bucket",
          "remote-ftp",
          "stedi-ftp",
          "as2"
        ]
      },
      "CoreCharacterSet": {
        "type": "string",
        "description": "When generating EDI, the character set determines the set of characters allowed in the EDI message. Characters outside of the specified set (after applying any repairs specified in RepairOptions) will result in an error.",
        "enum": [
          "Basic",
          "Extended",
          "ExtendedHipaa"
        ]
      },
      "CoreX12UsageIndicator": {
        "type": "string",
        "description": "Set [ISA-15](https://www.stedi.com/edi/x12/segment/ISA#ISA-15) to a different value. If not set, the default value is `P (Production Data)`.",
        "enum": [
          "I",
          "T",
          "P"
        ]
      },
      "CreateOutboundFragmentRequestContent": {
        "type": "object",
        "properties": {
          "guideId": {
            "type": "string",
            "description": "The ID of the Stedi guide for the outbound transaction setting. The guide must be configured to use fragments. You can find this ID on the [Guides](https://www.stedi.com/app/guides) page in the Stedi app."
          },
          "fragment": {
            "description": "The fragment to stage for outbound delivery. Without a mapping, the fragment must be < 5MB and the shape must match the [Guide JSON](https://www.stedi.com/docs/edi-platform/operate/transform-json/guide-json) format for the specified guide. With a mapping, the fragment must be < 4MB and the shape must match the source schema of the specified mapping."
          },
          "mappingId": {
            "type": "string",
            "description": "Specify a mapping id to transform the fragment to Stedi's Guide JSON format."
          }
        },
        "required": [
          "fragment",
          "guideId"
        ]
      },
      "CreateOutboundFragmentResponseContent": {
        "type": "object",
        "properties": {
          "fragmentGroupId": {
            "type": "string",
            "description": "The fragment group ID where you created and added the fragment."
          },
          "createdAt": {
            "type": "string",
            "description": "The time Stedi created the fragment.",
            "format": "date-time"
          },
          "fragmentId": {
            "type": "string",
            "description": "A unique ID for the fragment Stedi created within the fragment group."
          }
        },
        "required": [
          "createdAt",
          "fragmentGroupId",
          "fragmentId"
        ]
      },
      "CreatePartnershipOutboundTransactionRequestContent": {
        "type": "object",
        "properties": {
          "characterSet": {
            "$ref": "#/components/schemas/CoreCharacterSet"
          },
          "repairOptions": {
            "$ref": "#/components/schemas/RepairOptions"
          },
          "transaction": {
            "description": "The data for an EDI transaction. If you are not using a mapping, this transaction data must be < 5MB and the shape should match the [Guide JSON](https://www.stedi.com/docs/edi-platform/operate/transform-json/guide-json) format for the specified outbound transaction setting. If you are using a mapping, this transaction data must be < 4MB and the shape must match the source schema for the specified mapping."
          },
          "filename": {
            "type": "string",
            "maxLength": 300,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9.*'()!_-]+)$",
            "description": "Set a custom name for the generated EDI file. Stedi overwrites files with the same name, so we recommend making the filename unique by including a timestamp or other identifier. If you do not specify a filename, Stedi autogenerates a unique name using the same ID generated for the `fileExecutionId`."
          },
          "fragmentGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "Specify the fragment groups to include when creating this transaction. You can only generate EDI with a fragment group once. After you include a fragment group in generation call, Stedi locks the fragment to prevent accidentally generating transactions with duplicate data."
          },
          "mappingId": {
            "type": "string",
            "description": "Specify a mapping ID to transform the transaction data to Guide JSON format. You can find the mapping ID on the [Mappings](https://www.stedi.com/app/mappings) page in the Stedi app."
          },
          "interchangeOverrides": {
            "$ref": "#/components/schemas/InterchangeOverrides"
          }
        },
        "required": [
          "transaction"
        ]
      },
      "CreatePartnershipOutboundTransactionResponseContent": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "This property is currently not supported. It is reserved for future use."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "An ID for the process Stedi uses to generate the EDI file. This ID appears on the details page for the generated file in the Stedi app, and you can use it to trace the file's status and delivery."
          }
        }
      },
      "CreateTransactionGroupRequestContent": {
        "type": "object",
        "properties": {
          "transaction": {
            "description": "The data for an EDI transaction. If you are not using a mapping, this transaction data must be < 5MB and the shape should match the [Guide JSON](https://www.stedi.com/docs/edi-platform/operate/transform-json/guide-json) format for the specified outbound transaction setting. If you are using a mapping, this transaction data must be < 4MB and the shape must match the source schema for the specified mapping. Either `transaction` or `async: true` is required."
          },
          "mappingId": {
            "type": "string",
            "description": "Specify a mapping id to transform the transaction to Stedi's Guide JSON format. Can not be used with async: true."
          },
          "groupOverrides": {
            "$ref": "#/components/schemas/TransactionGroupOverrides"
          },
          "async": {
            "type": "boolean",
            "description": "Determines if the transaction should be uploaded asynchronously through a presigned url. Either `transaction` or `async: true` is required. Idempotency-Key header is required when using async: true."
          }
        }
      },
      "CreateTransactionGroupResponseContent": {
        "type": "object",
        "properties": {
          "transactionGroupId": {
            "type": "string",
            "description": "The transaction group ID where you created and added the transaction."
          },
          "createdAt": {
            "type": "string",
            "description": "The time Stedi staged the transaction.",
            "format": "date-time"
          },
          "transactionId": {
            "type": "string",
            "description": "A unique ID for the staged transaction Stedi created within the group."
          },
          "uploadUrl": {
            "type": "string",
            "description": "A pre-signed URL to upload the file using a `PUT` request."
          }
        },
        "required": [
          "createdAt",
          "transactionGroupId",
          "transactionId"
        ]
      },
      "DeliveryReport": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "A unique identifier for the delivery attempt."
          },
          "executionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "partnershipId": {
            "type": "string",
            "description": "An identifier for the partnership within the Stedi platform."
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "An autogenerated identifier for the connection within the Stedi platform."
          },
          "attempt": {
            "type": "number",
            "description": "The attempt number for the delivery."
          },
          "filename": {
            "type": "string",
            "description": "The name of the file Stedi attempted to deliver."
          },
          "status": {
            "$ref": "#/components/schemas/DeliveryReportStatus"
          },
          "message": {
            "type": "string",
            "description": "A message providing more information about the delivery attempt. For example `Delivered to sftp://transfer.us.stedi.com/outbound/06bdccdc-4ab9-4add-b1dc-a76a0183f299.x12'."
          },
          "metadata": {
            "$ref": "#/components/schemas/DeliveryReportMetadata"
          }
        },
        "required": [
          "attempt",
          "connectionId",
          "connectionType",
          "createdAt",
          "executionId",
          "filename",
          "id",
          "message",
          "partnershipId",
          "status"
        ]
      },
      "DeliveryReportMetadata": {
        "type": "object",
        "description": "Metadata about the file delivery.",
        "properties": {
          "attempts": {
            "type": "number",
            "description": "The total number of delivery attempts for the file."
          },
          "mdn_file": {
            "$ref": "#/components/schemas/MdnFile"
          }
        }
      },
      "DeliveryReportStatus": {
        "type": "string",
        "enum": [
          "FAILED",
          "DELIVERED"
        ]
      },
      "DestinationAttempt": {
        "type": "object",
        "properties": {
          "attemptId": {
            "type": "string"
          },
          "destinationId": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DestinationAttemptStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DestinationAttemptStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE",
          "PROCESSING"
        ]
      },
      "DetailedDestinationAttemptLog": {
        "type": "object",
        "properties": {
          "messageType": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "response": {
            "type": "string"
          }
        }
      },
      "Direction": {
        "type": "string",
        "description": "The direction of the transaction. Inbound transactions are those you receive from a payer, provider, or other trading partner. Outbound transactions are those you send to a payer, provider, or other trading partner.",
        "enum": [
          "INBOUND",
          "OUTBOUND",
          "UNKNOWN"
        ]
      },
      "ExceptionCause": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "stack": {
            "type": "string"
          }
        }
      },
      "ExecutionFault": {
        "type": "object",
        "description": "A failure to process a given file within stedi.",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "executionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi."
          },
          "faultCode": {
            "$ref": "#/components/schemas/ExecutionFaultCode"
          },
          "faultMessage": {
            "type": "string"
          },
          "guideId": {
            "type": "string",
            "description": "The unique identifier for the Stedi guide used to process the transactions in the file.\n\n[Stedi guides](https://www.stedi.com/docs/edi-platform/guides) are machine-readable specifications that describe how to structure and validate EDI files for each transaction type."
          },
          "receiverProfile": {
            "$ref": "#/components/schemas/ExecutionPartnershipProfile"
          },
          "senderProfile": {
            "$ref": "#/components/schemas/ExecutionPartnershipProfile"
          },
          "translateFaultContext": {},
          "transactionSetIdentifier": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            }
          }
        },
        "required": [
          "createdAt",
          "executionId",
          "faultCode",
          "faultMessage",
          "id"
        ]
      },
      "ExecutionFaultCode": {
        "type": "string",
        "description": "A code specifying the reason for the fault.",
        "enum": [
          "DELIVERY_FAILURE",
          "FAILED_TO_EXTRACT_BUSINESS_IDENTIFIERS",
          "FAILED_TO_FIND_GUIDE",
          "FAILED_TO_FIND_LOCAL_PROFILE",
          "FAILED_TO_FIND_PARTNER_PROFILE",
          "FAILED_TO_FIND_PARTNERSHIP",
          "FAILED_TO_FIND_PROFILES",
          "FAILED_TO_FIND_RECEIVER_PROFILE",
          "FAILED_TO_FIND_SENDER_PROFILE",
          "FAILED_TO_FIND_CONNECTION",
          "FAILED_TO_GENERATE_CONTROL_NUMBERS",
          "FAILED_TO_PARSE",
          "FAILED_TO_PARSE_METADATA",
          "FAILED_TO_TRANSLATE",
          "FAILED_TO_ACK",
          "FAILED_TO_ACK_INTERCHANGE",
          "FILE_NOT_FOUND",
          "INVALID_EVENT",
          "INVALID_CONFIGURATION",
          "MISMATCHED_PARTNERSHIP_CONNECTION",
          "MISSING_FUNCTIONAL_GROUP_CONTROL_NUMBER",
          "MISSING_FUNCTIONAL_GROUP_RELEASE",
          "MISSING_INTERCHANGE_CONTROL_NUMBER",
          "MISSING_TRANSACTION_SET_CONTROL_NUMBER",
          "MISSING_RECEIVER_ID",
          "MISSING_RECEIVER_QUALIFIER",
          "MISSING_SENDER_ID",
          "MISSING_SENDER_QUALIFIER",
          "MULTIPLE_MATCHING_GUIDES",
          "MULTIPLE_MATCHING_TRANSACTION_SETTINGS",
          "MULTIPLE_PARTNERSHIPS",
          "NO_TRANSLATION_OUTPUT",
          "NO_TRANSACTION_SETS",
          "NOT_SUPPORTED",
          "NO_FUNCTIONAL_GROUPS",
          "NO_USAGE_INDICATOR_CODE",
          "PREVIOUSLY_RETRIED",
          "TRANSLATION_ERROR",
          "UNKNOWN_ERROR"
        ]
      },
      "ExecutionPartnershipProfile": {
        "type": "object",
        "properties": {
          "interchangeQualifier": {
            "$ref": "#/components/schemas/X12InterchangeQualifier"
          },
          "interchangeId": {
            "type": "string",
            "maxLength": 15,
            "minLength": 1,
            "pattern": "^.*[^ ].*$"
          },
          "profileId": {
            "type": "string",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "A unique identifier for the profile within the Stedi platform."
          },
          "profileType": {
            "$ref": "#/components/schemas/ProfileType"
          },
          "applicationId": {
            "type": "string",
            "maxLength": 15,
            "minLength": 2
          }
        },
        "required": [
          "interchangeId",
          "interchangeQualifier",
          "profileId",
          "profileType"
        ]
      },
      "ExecutionSource": {
        "type": "object",
        "description": "The source of the file, including the directory where Stedi received it and the file name.",
        "properties": {
          "dirname": {
            "type": "string",
            "description": "The directory where Stedi received the file for processing."
          },
          "name": {
            "type": "string",
            "description": "The name of the file."
          }
        },
        "required": [
          "dirname",
          "name"
        ]
      },
      "ExecutionStatus": {
        "type": "string",
        "description": "The status of the execution. An execution is `COMPLETED` when Stedi has finished processing the file with no errors. If the file is an outbound file, a `COMPLETED` status also means that Stedi successfully delivered it to the configured connection.",
        "enum": [
          "COMPLETED",
          "PARTIALLY_COMPLETED",
          "FAILED",
          "IGNORED",
          "IN_PROGRESS",
          "RETRYING",
          "RETRIED",
          "STARTED"
        ]
      },
      "ExecutionSummary": {
        "type": "object",
        "description": "The processed executions that match the request criteria. The `items` array is empty if there are no matching executions.",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was last updated, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "executionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "transactionCount": {
            "type": "number",
            "description": "The number of individual transactions included in the file."
          },
          "faultCount": {
            "type": "number",
            "description": "The number of errors that occurred during processing. If the file was successfully processed completely, this value is `0`."
          },
          "faultCode": {
            "$ref": "#/components/schemas/ExecutionFaultCode"
          },
          "faultMessage": {
            "type": "string",
            "description": "A message providing more information about the fault. Note that if there are multiple faults, Stedi sets the first fault as the code and corresponding message."
          },
          "fileType": {
            "$ref": "#/components/schemas/FileType"
          },
          "retryable": {
            "type": "boolean",
            "description": "If `true`, you can [retry the file](https://www.stedi.com/docs/edi-platform/operate/transaction-data#manage-failed-files) in the Stedi portal."
          },
          "parentExecutionId": {
            "type": "string",
            "description": "The ID of this execution's parent execution, if it is part of a retry chain. When you retry a file, Stedi creates a child execution with a new ID and links it to the original (parent) execution."
          },
          "childExecutionId": {
            "type": "string",
            "description": "The ID of this execution's child execution, if it is part of a retry chain. When you retry a file, Stedi creates a child execution with a new ID and links it to the original (parent) execution."
          },
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "An autogenerated identifier for the connection within the Stedi platform."
          },
          "source": {
            "$ref": "#/components/schemas/ExecutionSource"
          }
        },
        "required": [
          "createdAt",
          "direction",
          "executionId",
          "status",
          "updatedAt"
        ]
      },
      "FileType": {
        "type": "string",
        "description": "The file format. For example, `EDI/EDIFACT` for an EDIFACT file or `EDI/X12` for an X12 EDI file.",
        "enum": [
          "CSV",
          "EDI/EDIFACT",
          "FILEPART",
          "JSON",
          "PSV",
          "JSON/STEDI-GUIDE",
          "TSV",
          "UNKNOWN",
          "EDI/X12",
          "XML",
          "ZIP"
        ]
      },
      "GatewayTimeoutExceptionResponseContent": {
        "type": "object",
        "description": "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "GenerateEdiRequestContent": {
        "type": "object",
        "properties": {
          "characterSet": {
            "$ref": "#/components/schemas/CoreCharacterSet"
          },
          "repairOptions": {
            "$ref": "#/components/schemas/RepairOptions"
          },
          "transactionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionGroup"
            },
            "minItems": 1,
            "description": "Contains one or more EDI functional groups, each containing the data for one or more EDI transactions. You can override the Application IDs (GS-02 and GS-03) for each group individually. The outbound transaction setting for each group must be configured to use the same connection. If you need to send transactions to different connections, you must call the endpoint multiple times."
          },
          "filename": {
            "type": "string",
            "maxLength": 300,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9.*'()!_-]+)$",
            "description": "Set a custom name for the generated EDI file. Stedi overwrites files with the same name, so we recommend making the filename unique by including a timestamp or other identifier. If you do not specify a filename, Stedi autogenerates a unique name using an ID."
          },
          "overrides": {
            "$ref": "#/components/schemas/InterchangeOverrides"
          },
          "interchangeUsageIndicatorOverride": {
            "$ref": "#/components/schemas/CoreX12UsageIndicator"
          },
          "interchangeAuthorization": {
            "$ref": "#/components/schemas/X12InterchangeAuthorization"
          }
        },
        "required": [
          "transactionGroups"
        ]
      },
      "GenerateEdiResponseContent": {
        "type": "object",
        "properties": {
          "edi": {
            "type": "string",
            "description": "The EDI Stedi generated from the JSON transaction data."
          },
          "artifactId": {
            "type": "string",
            "description": "An ID for the generated EDI file."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "A ID for the process Stedi uses to generate the EDI file. This ID appears on the details page for this file execution in the Stedi app. Internally, Stedi uses this ID to place the file in Stedi's outbound queue."
          }
        },
        "required": [
          "artifactId",
          "fileExecutionId"
        ]
      },
      "GenerateTransactionGroupEdiRequestContent": {
        "type": "object",
        "properties": {
          "characterSet": {
            "$ref": "#/components/schemas/CoreCharacterSet"
          },
          "repairOptions": {
            "$ref": "#/components/schemas/RepairOptions"
          },
          "filename": {
            "type": "string",
            "maxLength": 300,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9.*'()!_-]+)$",
            "description": "Set a custom name for the generated EDI file. Stedi overwrites files with the same name, so we recommend making the filename unique by including a timestamp or other identifier. If you do not specify a filename, Stedi autogenerates a unique name using an ID."
          },
          "overrides": {
            "$ref": "#/components/schemas/InterchangeOverrides"
          },
          "interchangeAuthorization": {
            "$ref": "#/components/schemas/X12InterchangeAuthorization"
          }
        }
      },
      "GenerateTransactionGroupEdiResponseContent": {
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "string",
            "description": "An ID for the generated EDI file."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "A ID for the process Stedi uses to generate the EDI file. This ID appears on the details page for this file execution in the Stedi app. Internally, Stedi uses this ID to place the file in Stedi's outbound queue."
          }
        },
        "required": [
          "artifactId",
          "fileExecutionId"
        ]
      },
      "GetExecutionInputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionInputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionMetadataDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionMetadataDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionOutputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionResponseContent": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was last updated, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "executionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "transactionCount": {
            "type": "number",
            "description": "The number of individual transactions included in the file."
          },
          "faultCount": {
            "type": "number",
            "description": "The number of errors that occurred during processing. If the file was successfully processed completely, this value is `0`."
          },
          "faultCode": {
            "$ref": "#/components/schemas/ExecutionFaultCode"
          },
          "faultMessage": {
            "type": "string",
            "description": "A message providing more information about the fault. Note that if there are multiple faults, Stedi sets the first fault as the code and corresponding message."
          },
          "fileType": {
            "$ref": "#/components/schemas/FileType"
          },
          "retryable": {
            "type": "boolean",
            "description": "If `true`, you can [retry the file](https://www.stedi.com/docs/edi-platform/operate/transaction-data#manage-failed-files) in the Stedi portal."
          },
          "parentExecutionId": {
            "type": "string",
            "description": "The ID of this execution's parent execution, if it is part of a retry chain. When you retry a file, Stedi creates a child execution with a new ID and links it to the original (parent) execution."
          },
          "childExecutionId": {
            "type": "string",
            "description": "The ID of this execution's child execution, if it is part of a retry chain. When you retry a file, Stedi creates a child execution with a new ID and links it to the original (parent) execution."
          },
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "An autogenerated identifier for the connection within the Stedi platform."
          },
          "source": {
            "$ref": "#/components/schemas/ExecutionSource"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "A list of artifacts related to the transaction. Input artifacts represent the original transaction data Stedi received before processing. Output artifacts represent the processed data.\n\nFor example, for an inbound 835 ERA from a payer, the input artifact would be the original X12 EDI, and the output artifact would be the JSON representation of the ERA."
          },
          "deliveryReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryReport"
            },
            "description": "Details about delivery attempts for outbound files./n/nStedi attempts to deliver a file to all configured connections every 6 minutes for up to 3 total attempts. If it cannot deliver the file after the third attempt, it marks the file execution as `FAILED` and emits the file failed event."
          }
        },
        "required": [
          "createdAt",
          "direction",
          "executionId",
          "status",
          "updatedAt"
        ]
      },
      "GetTransactionAttachmentDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionAttachmentDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionFragmentOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionFragmentOutputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionFragmentResponseContent": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "A unique identifier for the processed transaction containing this fragment. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi portal."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "A unique identifier for the processed file containing this fragment. This ID is included in the file processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "processedAt": {
            "type": "string",
            "description": "The date and time when Stedi processed the transaction containing the fragment, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "fragmentIndex": {
            "type": "number",
            "description": "The identifier for the fragment within a processed transaction."
          },
          "fragments": {
            "$ref": "#/components/schemas/TransactionFragmentsSummary"
          },
          "transactionUrl": {
            "type": "string",
            "description": "The URL to review the transaction within the Stedi portal."
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "A list of artifacts related to the transaction containing the fragment."
          },
          "partnership": {
            "$ref": "#/components/schemas/Partnership"
          },
          "x12": {
            "$ref": "#/components/schemas/X12TransactionSummary"
          }
        },
        "required": [
          "artifacts",
          "direction",
          "fileExecutionId",
          "fragmentIndex",
          "fragments",
          "mode",
          "partnership",
          "processedAt",
          "transactionId",
          "transactionUrl"
        ]
      },
      "GetTransactionInputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionInputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionOutputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionResponseContent": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "processedAt": {
            "type": "string",
            "description": "The date and time when Stedi processed the transaction, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "A list of artifacts related to the transaction."
          },
          "partnership": {
            "$ref": "#/components/schemas/Partnership"
          },
          "x12": {
            "$ref": "#/components/schemas/X12TransactionSummary"
          },
          "fragments": {
            "$ref": "#/components/schemas/TransactionFragmentsSummary"
          },
          "translationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationError"
            },
            "description": "Details about errors that prevented Stedi from processing the transaction."
          },
          "businessIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessIdentifier"
            },
            "description": "Any business identifiers extracted from the transaction."
          }
        },
        "required": [
          "artifacts",
          "direction",
          "fileExecutionId",
          "mode",
          "partnership",
          "processedAt",
          "status",
          "transactionId"
        ]
      },
      "GetWebhookDeliveryAttemptDetailsResponseContent": {
        "type": "object",
        "properties": {
          "attemptId": {
            "type": "string"
          },
          "destinationId": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DestinationAttemptStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailedDestinationAttemptLog"
            }
          }
        }
      },
      "GetWebhookDeliveryAttemptsResponseContent": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationAttempt"
            },
            "description": "The related webhook delivery attempts for the event."
          }
        }
      },
      "GetX12PartnershipConfigurationResponseContent": {
        "type": "object",
        "properties": {
          "ackConfiguration": {
            "$ref": "#/components/schemas/X12PartnershipAckConfiguration"
          },
          "processingConfiguration": {
            "$ref": "#/components/schemas/ProcessingConfiguration"
          }
        }
      },
      "Index": {
        "type": "object",
        "properties": {
          "line": {
            "type": "number",
            "description": "The line number in the document where the problem occurred."
          },
          "column": {
            "type": "number",
            "description": "The column number in the document where the problem occurred."
          }
        },
        "required": [
          "column",
          "line"
        ]
      },
      "InterchangeAcknowledgments": {
        "type": "string",
        "description": "Control when to send interchange acknowledgments.\n\nInterchange acknowledgments confirm to your trading partner that an interchange group in the EDI file was processed without syntax errors.\nAsk your trading partner if they expect to receive interchange acknowledgments before configuring acknowledgments.\n\ncode          | description\n--------------|--------------------------\nNever         | (Default). Do not send interchange acknowledgments\nAlways        | Always send interchange acknowledgments\nWhenRequested | Send interchange acknowledgments when requested by the trading partner in the ISA 14 field",
        "enum": [
          "Never",
          "Always",
          "WhenRequested"
        ]
      },
      "InterchangeOverrides": {
        "type": "object",
        "properties": {
          "interchangeUsageIndicator": {
            "$ref": "#/components/schemas/CoreX12UsageIndicator"
          },
          "acknowledgmentRequestedCode": {
            "$ref": "#/components/schemas/X12AcknowledgmentRequestedCode"
          },
          "interchangeControlVersionNumberCode": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "description": "Set [ISA-12](https://www.stedi.com/edi/x12/segment/ISA#ISA-12) to a different value. This code indicates the version of the `ISA` header segments included in the EDI file. By default, Stedi sets `ISA-12` to to be the X12 release number of the guide associated with the transaction setting."
          },
          "delimiters": {
            "$ref": "#/components/schemas/X12Delimiters"
          }
        }
      },
      "ListExecutionTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListExecutionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListPollingExecutionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListPollingTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Mark": {
        "type": "object",
        "description": "The location in the document where the problem occurred. May be a single index or a range.",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/Index"
          },
          "end": {
            "$ref": "#/components/schemas/Index"
          }
        },
        "required": [
          "start"
        ]
      },
      "MdnFile": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "string"
          },
          "pointer": {
            "type": "string"
          }
        },
        "required": [
          "pointer",
          "repository"
        ]
      },
      "Mode": {
        "type": "string",
        "description": "Indicates whether the transaction contains test or production data. Stedi determines this from the value in [`ISA15` Usage Indicator Code](https://www.stedi.com/edi/x12/segment/ISA#ISA-15).",
        "enum": [
          "test",
          "production",
          "other"
        ]
      },
      "OutboundConnection": {
        "type": "object",
        "properties": {
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "An autogenerated identifier for the connection within the Stedi platform."
          },
          "subdirectory": {
            "type": "string",
            "maxLength": 105,
            "description": "Optional subdirectory used to store generated EDI files"
          },
          "filename": {
            "type": "string",
            "maxLength": 300,
            "description": "Optional filename expression only used for acknowledgments. Allows `$millis()` and `$acknowledgmentType()` functions and string concatenation."
          }
        },
        "required": [
          "connectionId",
          "connectionType"
        ]
      },
      "Partnership": {
        "type": "object",
        "description": "Information about the associated partnership.\n\nA partnership describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files.",
        "properties": {
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
          },
          "partnershipType": {
            "$ref": "#/components/schemas/PartnershipType"
          },
          "sender": {
            "$ref": "#/components/schemas/PartnershipSender"
          },
          "receiver": {
            "$ref": "#/components/schemas/PartnershipReceiver"
          }
        },
        "required": [
          "partnershipId",
          "partnershipType",
          "receiver",
          "sender"
        ]
      },
      "PartnershipReceiver": {
        "type": "object",
        "description": "The entity that is receiving the transaction.",
        "properties": {
          "profileId": {
            "type": "string",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "A unique identifier for the profile within the Stedi platform."
          }
        },
        "required": [
          "profileId"
        ]
      },
      "PartnershipSender": {
        "type": "object",
        "description": "The entity that initiated the transaction.",
        "properties": {
          "profileId": {
            "type": "string",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "A unique identifier for the profile within the Stedi platform."
          }
        },
        "required": [
          "profileId"
        ]
      },
      "PartnershipType": {
        "type": "string",
        "description": "The type of partnership, which determines the EDI standard used for exchanging transactions.",
        "enum": [
          "x12",
          "edifact"
        ]
      },
      "PgGetExecutionInputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "PgGetExecutionMetadataDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "PgGetExecutionOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "PgGetExecutionResponseContent": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was last updated, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "executionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "transactionCount": {
            "type": "number",
            "description": "The number of individual transactions included in the file."
          },
          "faultCount": {
            "type": "number",
            "description": "The number of errors that occurred during processing. If the file was successfully processed completely, this value is `0`."
          },
          "faultCode": {
            "$ref": "#/components/schemas/ExecutionFaultCode"
          },
          "faultMessage": {
            "type": "string",
            "description": "A message providing more information about the fault. Note that if there are multiple faults, Stedi sets the first fault as the code and corresponding message."
          },
          "fileType": {
            "$ref": "#/components/schemas/FileType"
          },
          "retryable": {
            "type": "boolean",
            "description": "If `true`, you can [retry the file](https://www.stedi.com/docs/edi-platform/operate/transaction-data#manage-failed-files) in the Stedi portal."
          },
          "parentExecutionId": {
            "type": "string",
            "description": "The ID of this execution's parent execution, if it is part of a retry chain. When you retry a file, Stedi creates a child execution with a new ID and links it to the original (parent) execution."
          },
          "childExecutionId": {
            "type": "string",
            "description": "The ID of this execution's child execution, if it is part of a retry chain. When you retry a file, Stedi creates a child execution with a new ID and links it to the original (parent) execution."
          },
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9._-]+)$",
            "description": "The unique identifier for the partnership within the Stedi platform.\n\nA [partnership](https://www.stedi.com/docs/edi-platform/configure/trading-partners/profiles-and-partnerships) describes all aspects of the EDI relationship between two profiles in your Stedi account, such as which transaction sets they will exchange and other important information for processing EDI files."
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "An autogenerated identifier for the connection within the Stedi platform."
          },
          "source": {
            "$ref": "#/components/schemas/ExecutionSource"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "A list of artifacts related to the transaction. Input artifacts represent the original transaction data Stedi received before processing. Output artifacts represent the processed data.\n\nFor example, for an inbound 835 ERA from a payer, the input artifact would be the original X12 EDI, and the output artifact would be the JSON representation of the ERA."
          },
          "deliveryReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryReport"
            },
            "description": "Details about delivery attempts for outbound files./n/nStedi attempts to deliver a file to all configured connections every 6 minutes for up to 3 total attempts. If it cannot deliver the file after the third attempt, it marks the file execution as `FAILED` and emits the file failed event."
          }
        },
        "required": [
          "createdAt",
          "direction",
          "executionId",
          "status",
          "updatedAt"
        ]
      },
      "PgListExecutionFaultsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionFault"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "PgListExecutionTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ProcessingConfiguration": {
        "type": "object",
        "properties": {
          "strategy": {
            "$ref": "#/components/schemas/ProcessingStrategy"
          }
        },
        "required": [
          "strategy"
        ]
      },
      "ProcessingStrategy": {
        "type": "string",
        "description": "The configuration of stedi core when processing an inbound transaction.\n\ncode | description\n-----|--------------------------\nAllTransactions  | all transactions in the interchange must succeed processing for any to a succeed\nAnyTransaction  | any good transaction can succeed regardless of their neighbours",
        "enum": [
          "AllTransactions",
          "AnyTransaction"
        ]
      },
      "ProfileType": {
        "type": "string",
        "enum": [
          "local",
          "partner"
        ]
      },
      "PutX12PartnershipConfigurationRequestContent": {
        "type": "object",
        "properties": {
          "ackConfiguration": {
            "$ref": "#/components/schemas/X12PartnershipAckConfiguration"
          },
          "processingConfiguration": {
            "$ref": "#/components/schemas/ProcessingConfiguration"
          }
        }
      },
      "RepairOptions": {
        "type": "object",
        "description": "Options for repairing EDI data during generation to ensure it meets X12 requirements",
        "properties": {
          "trimTrailingSpaces": {
            "type": "boolean",
            "description": "Whether to trim trailing spaces from data elements"
          },
          "uppercase": {
            "type": "boolean",
            "description": "Whether to convert text to uppercase"
          },
          "replaceConfusable": {
            "type": "boolean",
            "description": "Whether to replace characters that are visually similar but technically different"
          },
          "removeDiacritical": {
            "type": "boolean",
            "description": "Whether to remove diacritical marks from characters"
          },
          "trimTrailingZeroes": {
            "type": "boolean",
            "description": "Whether to trim trailing zeros from numeric data elements"
          }
        }
      },
      "ResourceConflictExceptionResponseContent": {
        "type": "object",
        "description": "The server could not process the request because of conflict in the current state of the resource.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "ResourceNotFoundExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the specified resource cannot be found after an API request passes authentication and authorization.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "ResourceUnderChangeExceptionResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          }
        },
        "required": [
          "message"
        ]
      },
      "RetryEventResponseContent": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "description": "The ID of the newly retried event."
          }
        }
      },
      "ServiceExceptionResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "cause": {
            "$ref": "#/components/schemas/ExceptionCause"
          }
        },
        "required": [
          "message"
        ]
      },
      "ServiceUnavailableExceptionResponseContent": {
        "type": "object",
        "description": "The server cannot handle the request due to technical reasons.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "ThrottlingExceptionResponseContent": {
        "type": "object",
        "description": "The server response when usage plan or account-level throttling limits exceeded.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "TransactionFragmentsSummary": {
        "type": "object",
        "description": "Details about fragments included in the transaction, if applicable. [Fragments](https://www.stedi.com/docs/edi-platform/fragments) break large transactions into smaller parts for easier processing and management.",
        "properties": {
          "keyName": {
            "type": "string",
            "description": "The JSON schema key name for the segment in the Stedi guide used to split the transaction into fragments. For example, in an 834 Health Care Benefit Enrollment and Maintenance, this would be `member_level_detail_INS_loop`."
          },
          "fragmentCount": {
            "type": "number",
            "description": "The total number of fragments in the transaction."
          },
          "batchSize": {
            "type": "number",
            "description": "The maximum size of each fragment in kilobytes (KB). Stedi uses this to automatically split large inbound transactions into fragments."
          }
        },
        "required": [
          "batchSize",
          "fragmentCount",
          "keyName"
        ]
      },
      "TransactionGroup": {
        "type": "object",
        "description": "A transaction group contains data for one or more EDI transactions in [Guide JSON](https://www.stedi.com/docs/edi-platform/operate/transform-json/guide-json) format.",
        "properties": {
          "transactionSettingId": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^([a-zA-Z0-9_-]+)$",
            "description": "A unique ID outbound transaction setting Stedi should use to determine the correct guide for validation and generation. To find this ID, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting."
          },
          "transactions": {
            "type": "array",
            "items": {},
            "minItems": 1,
            "description": "This payload contains the transaction data. It must conform to the JSON Schema for the guide associated with each transaction setting (Guide JSON format)."
          },
          "overrides": {
            "$ref": "#/components/schemas/TransactionGroupOverrides"
          }
        },
        "required": [
          "transactionSettingId",
          "transactions"
        ]
      },
      "TransactionGroupOverrides": {
        "type": "object",
        "description": "Customize the Application IDs for you or your trading partner.",
        "properties": {
          "localApplicationId": {
            "type": "string",
            "maxLength": 15,
            "minLength": 2,
            "description": "Set the [GS-02](https://www.stedi.com/edi/x12/segment/GS#GS-02) element to a custom value. If not set, Stedi uses the Application ID for the local profile associated with the partnership."
          },
          "partnerApplicationId": {
            "type": "string",
            "maxLength": 15,
            "minLength": 2,
            "description": "Set the [GS-03](https://www.stedi.com/edi/x12/segment/GS#GS-03) element to a custom value. If not set, Stedi uses the Application ID for the partner profile associated with the partnership."
          }
        }
      },
      "TransactionStatus": {
        "type": "string",
        "description": "A status indicating whether Stedi was able to successfully process the transaction.",
        "enum": [
          "failed",
          "succeeded"
        ]
      },
      "TransactionSummary": {
        "type": "object",
        "description": "The processed transactions that match the request criteria. The `items` array is empty if there are no matching transactions.",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the transaction's details page within the Stedi app."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "A unique identifier for the processed file within Stedi. This ID is included in the transaction processed event. You can also retrieve it manually from the file's details page in the Stedi portal."
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "processedAt": {
            "type": "string",
            "description": "The date and time when Stedi processed the transaction, in ISO 8601 format. For example, `2023-08-28T00:00:00Z`.",
            "format": "date-time"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "A list of artifacts related to the transaction."
          },
          "partnership": {
            "$ref": "#/components/schemas/Partnership"
          },
          "x12": {
            "$ref": "#/components/schemas/X12TransactionSummary"
          },
          "fragments": {
            "$ref": "#/components/schemas/TransactionFragmentsSummary"
          },
          "translationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationError"
            },
            "description": "Details about errors that prevented Stedi from processing the transaction."
          },
          "businessIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessIdentifier"
            },
            "description": "Any business identifiers extracted from the transaction."
          }
        },
        "required": [
          "artifacts",
          "direction",
          "fileExecutionId",
          "mode",
          "partnership",
          "processedAt",
          "status",
          "transactionId"
        ]
      },
      "TranslationError": {
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/components/schemas/TranslationErrorContext"
          },
          "mark": {
            "$ref": "#/components/schemas/Mark"
          },
          "message": {
            "type": "string",
            "description": "A message describing the error that occurred during translation."
          }
        },
        "required": [
          "message"
        ]
      },
      "TranslationErrorContext": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code."
          },
          "schemaPath": {
            "type": "string",
            "description": "The name of the JSON property where the error occurred."
          }
        }
      },
      "UnauthorizedExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the authorizer failed to authenticate the caller.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "X12AcknowledgmentRequestedCode": {
        "type": "string",
        "description": "Set [ISA-14](https://www.stedi.com/edi/x12/segment/ISA#ISA-14) to a different value. If not set, the default value is `0 (No Interchange Acknowledgment Requested)`.",
        "enum": [
          "0",
          "1",
          "2",
          "3"
        ]
      },
      "X12AuthorizationInformationQualifier": {
        "type": "string",
        "description": "Identifies the type of information in the Authorization Information (`ISA-01`). Default is `00 - No Authorization Information Present`.",
        "enum": [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08"
        ]
      },
      "X12Delimiters": {
        "type": "object",
        "properties": {
          "element": {
            "type": "string",
            "pattern": "^[\\W|_]{1}$",
            "description": "The data element separator character."
          },
          "composite": {
            "type": "string",
            "pattern": "^[\\W|_]{1}$",
            "description": "The component element separator character."
          },
          "repetition": {
            "type": "string",
            "pattern": "^[\\W|_]{1}$",
            "description": "The repetition separator character."
          },
          "segment": {
            "type": "string",
            "pattern": "^[\\W|_]{1}$",
            "description": "The segment terminator character."
          }
        },
        "required": [
          "composite",
          "element",
          "repetition",
          "segment"
        ]
      },
      "X12FunctionalAcknowledgmentType": {
        "type": "string",
        "description": "The transaction set to use when acknowledging a functional group.\n\ncode | description\n-----|--------------------------\n997  | Used in all transaction sets. Not used to respond to a 997\n999  | Used in some healthcare transaction sets. Not used to respond to a 999.",
        "enum": [
          "997",
          "999"
        ]
      },
      "X12InterchangeAuthorization": {
        "type": "object",
        "description": "Set values for [ISA header](https://www.stedi.com/edi/x12/segment/ISA) elements (ISA-01 to ISA-04).",
        "properties": {
          "authorizationInformationQualifier": {
            "$ref": "#/components/schemas/X12AuthorizationInformationQualifier"
          },
          "authorizationInformation": {
            "type": "string",
            "maxLength": 10,
            "pattern": "^.*[^ ].*$",
            "description": "Information used for additional identification or authorization of the interchange sender or the data in the interchange (`ISA-02`). The type of information is set by the `authorizationInformationQualifier`."
          },
          "securityInformationQualifier": {
            "$ref": "#/components/schemas/X12SecurityInformationQualifier"
          },
          "securityInformation": {
            "type": "string",
            "maxLength": 10,
            "pattern": "^.*[^ ].*$",
            "description": "The security information referenced by the `securityInformationQualifier` (`ISA-04`). Typically, this is a password."
          }
        }
      },
      "X12InterchangeQualifier": {
        "type": "string",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "AM",
          "NR",
          "SA",
          "SN",
          "ZZ"
        ]
      },
      "X12PartnershipAckConfiguration": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If not enabled the acknowledgment configuration will be deleted."
          },
          "negativeAcknowledgmentEnabled": {
            "type": "boolean"
          },
          "positiveTransactionLevelAcknowledgments": {
            "type": "boolean"
          },
          "interchangeAcknowledgments": {
            "$ref": "#/components/schemas/InterchangeAcknowledgments"
          },
          "functionalAcknowledgmentType": {
            "$ref": "#/components/schemas/X12FunctionalAcknowledgmentType"
          },
          "functionalAcknowledgmentConnection": {
            "$ref": "#/components/schemas/OutboundConnection"
          },
          "interchangeAcknowledgmentConnection": {
            "$ref": "#/components/schemas/OutboundConnection"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "X12SecurityInformationQualifier": {
        "type": "string",
        "description": "Identifies the type of information in the Security Information (ISA-03). Default is `00 - No Security Information Present`.",
        "enum": [
          "00",
          "01"
        ]
      },
      "X12TransactionMetadata": {
        "type": "object",
        "description": "Metadata about the X12 EDI transaction, including information from the interchange, functional group, and transaction headers as well as the sender and receiver IDs.",
        "properties": {
          "interchange": {
            "$ref": "#/components/schemas/X12TransactionMetadataInterchange"
          },
          "functionalGroup": {
            "$ref": "#/components/schemas/X12TransactionMetadataFunctionalGroup"
          },
          "transaction": {
            "$ref": "#/components/schemas/X12TransactionMetadataTransaction"
          },
          "sender": {
            "$ref": "#/components/schemas/X12TransactionMetadataProfile"
          },
          "receiver": {
            "$ref": "#/components/schemas/X12TransactionMetadataProfile"
          }
        },
        "required": [
          "functionalGroup",
          "interchange",
          "receiver",
          "sender",
          "transaction"
        ]
      },
      "X12TransactionMetadataFunctionalGroup": {
        "type": "object",
        "description": "Data from the Functional Group Header of the X12 EDI file.",
        "properties": {
          "controlNumber": {
            "type": "number",
            "maximum": 999999999,
            "minimum": 0,
            "description": "The Group Control Number ([`GS06`](https://www.stedi.com/edi/x12/segment/GS#GS-06))."
          },
          "date": {
            "type": "string",
            "description": "The date in the Functional Group Header ([`GS04`](https://www.stedi.com/edi/x12/segment/GS#GS-04)), formatted as `YYYY-MM-DD`. For example, `2023-08-28`."
          },
          "functionalIdentifierCode": {
            "type": "string",
            "description": "The Functional Identifier Code ([`GS01`](https://www.stedi.com/edi/x12/segment/GS#GS-01)), which indicates the type of transaction. For example, `HC` for an 837 Healthcare Claim."
          },
          "time": {
            "type": "string",
            "description": "The Time ([`GS05`](https://www.stedi.com/edi/x12/segment/GS#GS-05)), formatted as `HH:MM:SS`. For example, `21:29:57`."
          },
          "release": {
            "type": "string",
            "description": "The Version/Release/Industry Identifier Code ([`GS08`](https://www.stedi.com/edi/x12/segment/GS#GS-08)), which indicates the version of the X12 standard used. For example, `005010X222A1`."
          }
        },
        "required": [
          "controlNumber",
          "date",
          "functionalIdentifierCode",
          "release",
          "time"
        ]
      },
      "X12TransactionMetadataInterchange": {
        "type": "object",
        "description": "Data from the Interchange Control Header of the X12 EDI file.",
        "properties": {
          "acknowledgmentRequestedCode": {
            "type": "string",
            "description": "The value of [`ISA14`](https://www.stedi.com/edi/x12/segment/ISA#ISA-14) in the Interchange Control Header, which indicates whether the sender is requesting an [interchange acknowledgment](https://www.stedi.com/docs/edi-platform/configure/trading-partners/functional-acknowledgments#ta1s)."
          },
          "controlNumber": {
            "type": "number",
            "maximum": 999999999,
            "minimum": 0,
            "description": "The control number in the Interchange Control Header."
          }
        },
        "required": [
          "acknowledgmentRequestedCode",
          "controlNumber"
        ]
      },
      "X12TransactionMetadataProfile": {
        "type": "object",
        "description": "The Application Code and ISA ID for the profile.",
        "properties": {
          "applicationCode": {
            "type": "string",
            "description": "The Application Code for the profile, which is used to identify the entity in the `GS` header of an EDI file."
          },
          "isa": {
            "$ref": "#/components/schemas/X12TransactionMetadataProfileISA"
          }
        },
        "required": [
          "applicationCode",
          "isa"
        ]
      },
      "X12TransactionMetadataProfileISA": {
        "type": "object",
        "description": "The Interchange ID and qualifier.",
        "properties": {
          "qualifier": {
            "type": "string",
            "description": "The Interchange Sender ID Qualifier, which indicates the type of identifier. For example, `ZZ` for a mutually defined identifier."
          },
          "id": {
            "type": "string",
            "description": "The Interchange ID, which is the unique identifier for the entity in the EDI file."
          }
        },
        "required": [
          "id",
          "qualifier"
        ]
      },
      "X12TransactionMetadataTransaction": {
        "type": "object",
        "description": "Data from the Transaction Set Header of the X12 EDI file.",
        "properties": {
          "controlNumber": {
            "type": "string",
            "description": "The Transaction Set Control Number ([`ST02`](https://www.stedi.com/edi/x12/segment/ST#ST-02))."
          },
          "transactionSetIdentifier": {
            "type": "string",
            "description": "The Transaction Set Identifier Code ([`ST01`](https://www.stedi.com/edi/x12/segment/ST#ST-01)), which indicates the type of transaction. For example, `837` for an 837 Healthcare Claim."
          }
        },
        "required": [
          "controlNumber",
          "transactionSetIdentifier"
        ]
      },
      "X12TransactionSetting": {
        "type": "object",
        "description": "The IDs for the guide and transaction setting Stedi used to process the transaction.",
        "properties": {
          "guideId": {
            "type": "string",
            "description": "The unique identifier for the Stedi guide used to process the transaction.\n\n[Stedi guides](https://www.stedi.com/docs/edi-platform/guides) are machine-readable specifications for X12 EDI transactions. They describe how to structure and validate EDI files for each transaction type."
          },
          "transactionSettingId": {
            "type": "string",
            "description": "The unique identifier for the transaction setting Stedi used to process the transaction.\n\n[Transaction settings](https://www.stedi.com/docs/edi-platform/configure/trading-partners/transaction-settings) configure how Stedi processes specific transaction types, such as which Stedi guide to use and other processing options."
          }
        }
      },
      "X12TransactionSummary": {
        "type": "object",
        "description": "Details about the X12 EDI transaction.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/X12TransactionMetadata"
          },
          "transactionSetting": {
            "$ref": "#/components/schemas/X12TransactionSetting"
          }
        },
        "required": [
          "metadata"
        ]
      }
    },
    "securitySchemes": {
      "httpApiKeyAuth": {
        "type": "apiKey",
        "description": "A [Stedi API Key](https://www.stedi.com/app/settings/api-keys) for authentication.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "httpApiKeyAuth": []
    }
  ],
  "x-stedi": {
    "lifecycle": "general_availability",
    "product": "core",
    "public": true
  },
  "tags": [],
  "servers": [
    {
      "url": "https://core.us.stedi.com/2023-08-01",
      "description": "Production"
    }
  ]
}
