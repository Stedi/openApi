{
  "openapi": "3.0.2",
  "info": {
    "title": "Core",
    "version": "2023-08-01",
    "contact": {
      "email": "core@stedi.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://stedi.com"
    }
  },
  "paths": {
    "/events/{eventId}/destinations/attempts": {
      "get": {
        "description": "Fetch destination attempts for a specific event id.",
        "operationId": "GetDestinationAttempts",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event you want to get destination logs for",
            "schema": {
              "type": "string",
              "description": "The ID of the event you want to get destination logs for"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetDestinationAttempts 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDestinationAttemptsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/destinations/attempts/{attemptId}": {
      "get": {
        "description": "Fetch destination attempt details for a specific event id and attempt id.",
        "operationId": "GetDestinationAttemptDetails",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event you want to get logs for",
            "schema": {
              "type": "string",
              "description": "The ID of the event you want to get logs for"
            },
            "required": true
          },
          {
            "name": "attemptId",
            "in": "path",
            "description": "The ID of the attempt you want to get detailed logs for",
            "schema": {
              "type": "string",
              "description": "The ID of the attempt you want to get detailed logs for"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetDestinationAttemptDetails 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDestinationAttemptDetailsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/retry": {
      "post": {
        "description": "This endpoint retriggers the specified processing event.",
        "operationId": "RetryEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event you want Stedi to re-emit.",
            "schema": {
              "type": "string",
              "description": "The ID of the event you want Stedi to re-emit."
            },
            "required": true,
            "examples": {
              "RetryEvent_example1": {
                "summary": "Retry event",
                "description": "",
                "value": "f75168e4-e682-4410-bfec-b5b1541c7f21"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RetryEvent 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetryEventResponseContent"
                },
                "examples": {
                  "RetryEvent_example1": {
                    "summary": "Retry event",
                    "description": "",
                    "value": {
                      "eventId": "f75168e4-e682-4410-bfec-b5b1541c7f22"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions": {
      "get": {
        "description": "Fetch a list of executions, sorted by the date they were created from newest to oldest.",
        "operationId": "ListExecutions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. If not specified, the default is 100."
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListExecutions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExecutionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}": {
      "get": {
        "description": "Retrieve the file execution details for a given executionId.",
        "operationId": "GetExecution",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecution 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/input": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's input document before it passes through any translation and mappings, generally this will be EDI.\n\nThis endpoint returns a 302 Temporary redirect to the document download URL. Many HTTP clients will automatically follow this redirect, or have a simple follow redirects configuration to set. For instance in `curl` using the `-L` or `--location` flag will automatically follow the redirect.\n\nIn the event you cannot, or chose not to automatically follow the redirect, the body of the response contains a JSON object with a single key `documentDownloadUrl` which contains a temporary URL to download the document. This URL is good for 60 minutes.\n\nThere are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetExecutionInputDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetExecutionInputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionInputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/input-url": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's input document before it passes through any translation and mappings. Generally, this will be EDI. This endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.",
        "operationId": "GetExecutionInputDocumentUrl",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutionInputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionInputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/metadata": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's metadata document.\n\nThis endpoint returns a 302 Temporary redirect to the document download URL. Many HTTP clients will automatically follow this redirect, or have a simple follow redirects configuration to set. For instance in `curl` using the `-L` or `--location` flag will automatically follow the redirect.\n\nIn the event you cannot, or chose not to automatically follow the redirect, the body of the response contains a JSON object with a single key `documentDownloadUrl` which contains a temporary URL to download the document. This URL is good for 60 minutes.\n\nThere are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetExecutionMetadataDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetExecutionMetadataDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionMetadataDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/metadata-url": {
      "get": {
        "description": "This endpoint is used to retrieve a file execution's metadata document, limited to inbound/outbound x12 files. This endpoint returns the metadata document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.",
        "operationId": "GetExecutionMetadataDocumentUrl",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutionMetadataDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionMetadataDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/output": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's output document.\n\nThis endpoint returns a 302 Temporary redirect to the document download URL. Many HTTP clients will automatically follow this redirect, or have a simple follow redirects configuration to set. For instance in `curl` using the `-L` or `--location` flag will automatically follow the redirect.\n\nIn the event you cannot, or chose not to automatically follow the redirect, the body of the response contains a JSON object with a single key `documentDownloadUrl` which contains a temporary URL to download the document. This URL is good for 60 minutes.\n\nThere are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetExecutionOutputDocument",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetExecutionOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionOutputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/output-url": {
      "get": {
        "description": "This endpoint is used to retrieve an execution's output document. This endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.",
        "operationId": "GetExecutionOutputDocumentUrl",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetExecutionOutputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionOutputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/executions/{executionId}/transactions": {
      "get": {
        "description": "Fetch a list of transactions for a given file execution, sorted by the date they were created from newest to oldest. Includes the full transaction details.",
        "operationId": "ListExecutionTransactions",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "maximum": 500,
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. If not specified, the default is 100."
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListExecutionTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExecutionTransactionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/fragments/{fragmentGroupId}": {
      "post": {
        "description": "This endpoint stages a fragment for outbound delivery.",
        "operationId": "CreateOutboundFragment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOutboundFragmentRequestContent"
              },
              "examples": {
                "CreateOutboundFragment_example1": {
                  "summary": "Stage fragment",
                  "description": "",
                  "value": {
                    "guideId": "01HQ1XPE9C3SCEB2ND7VC53A8M",
                    "fragment": {
                      "baseline_item_data_PO1_loop": [
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "123",
                            "quantity_02": 3,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 3
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "456",
                            "quantity_02": 4,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 4
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "789",
                            "quantity_02": 5,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 5
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "756",
                            "quantity_02": 3,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 3
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "432",
                            "quantity_02": 4,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 4
                          }
                        },
                        {
                          "baseline_item_data_PO1": {
                            "assigned_identification_01": "543",
                            "quantity_02": 5,
                            "unit_or_basis_for_measurement_code_03": "XX",
                            "unit_price_04": 5
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "fragmentGroupId",
            "in": "path",
            "description": "A unique ID for a group of fragments on Stedi. Stedi creates a new fragment group if one does not exist with the specified ID.",
            "schema": {
              "type": "string",
              "description": "A unique ID for a group of fragments on Stedi. Stedi creates a new fragment group if one does not exist with the specified ID."
            },
            "required": true,
            "examples": {
              "CreateOutboundFragment_example1": {
                "summary": "Stage fragment",
                "description": "",
                "value": "fragmentGroup-02-21-2024"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CreateOutboundFragment 201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOutboundFragmentResponseContent"
                },
                "examples": {
                  "CreateOutboundFragment_example1": {
                    "summary": "Stage fragment",
                    "description": "",
                    "value": {
                      "fragmentGroupId": "some-transaction-id",
                      "createdAt": "2024-02-21T00:00:00Z",
                      "fragmentId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/partnerships/{partnershipId}/transactions/{transactionSettingId}": {
      "post": {
        "description": "This endpoint generates and delivers fully-formed EDI files containing a single transaction. It is the simplest way to generate EDI with Stedi.",
        "operationId": "CreatePartnershipOutboundTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePartnershipOutboundTransactionRequestContent"
              },
              "examples": {
                "CreatePartnershipOutboundTransaction_example1": {
                  "summary": "Generate Transaction with Guide JSON",
                  "description": "",
                  "value": {
                    "filename": "my-output-file.edi",
                    "transaction": {
                      "heading": {
                        "transaction_set_header_ST": {
                          "transaction_set_identifier_code_01": "850",
                          "transaction_set_control_number_02": 1
                        },
                        "beginning_segment_for_purchase_order_BEG": {
                          "transaction_set_purpose_code_01": "XX",
                          "purchase_order_type_code_02": "XX",
                          "purchase_order_number_03": "XXXXX",
                          "date_05": "2023-08-11"
                        }
                      },
                      "detail": {
                        "baseline_item_data_PO1_loop": [
                          {
                            "baseline_item_data_PO1": {}
                          }
                        ]
                      },
                      "summary": {
                        "transaction_set_trailer_SE": {
                          "number_of_included_segments_01": 4,
                          "transaction_set_control_number_02": 1
                        }
                      }
                    }
                  }
                },
                "CreatePartnershipOutboundTransaction_example2": {
                  "summary": "Generate Transaction with Fragments",
                  "description": "",
                  "value": {
                    "filename": "my-output-file-fragments.edi",
                    "fragmentGroupIds": [
                      "some-fragment-group-id"
                    ],
                    "transaction": {
                      "heading": {
                        "transaction_set_header_ST": {
                          "transaction_set_identifier_code_01": "850",
                          "transaction_set_control_number_02": 1
                        },
                        "beginning_segment_for_purchase_order_BEG": {
                          "transaction_set_purpose_code_01": "XX",
                          "purchase_order_type_code_02": "XX",
                          "purchase_order_number_03": "XXXX",
                          "date_05": "2023-12-12"
                        }
                      },
                      "detail": {
                        "baseline_item_data_PO1_loop": []
                      },
                      "summary": {}
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9_-]+)$",
              "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**."
            },
            "required": true,
            "examples": {
              "CreatePartnershipOutboundTransaction_example1": {
                "summary": "Generate Transaction with Guide JSON",
                "description": "",
                "value": "ACME_AMAZON"
              },
              "CreatePartnershipOutboundTransaction_example2": {
                "summary": "Generate Transaction with Fragments",
                "description": "",
                "value": "ACME_AMAZON"
              }
            }
          },
          {
            "name": "transactionSettingId",
            "in": "path",
            "description": "A unique ID for the outbound transaction setting Stedi should use to determine the correct guide for validation and generation. It must be attached to the partnership associated with the `partnershipId`. To find the `transactionSettingsId`, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting. If you are generating a transaction with fragments, the associated guide must be configured to use fragments.",
            "schema": {
              "type": "string",
              "description": "A unique ID for the outbound transaction setting Stedi should use to determine the correct guide for validation and generation. It must be attached to the partnership associated with the `partnershipId`. To find the `transactionSettingsId`, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting. If you are generating a transaction with fragments, the associated guide must be configured to use fragments."
            },
            "required": true,
            "examples": {
              "CreatePartnershipOutboundTransaction_example1": {
                "summary": "Generate Transaction with Guide JSON",
                "description": "",
                "value": "some-setting-id"
              },
              "CreatePartnershipOutboundTransaction_example2": {
                "summary": "Generate Transaction with Fragments",
                "description": "",
                "value": "some-setting-id"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreatePartnershipOutboundTransaction 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePartnershipOutboundTransactionResponseContent"
                },
                "examples": {
                  "CreatePartnershipOutboundTransaction_example1": {
                    "summary": "Generate Transaction with Guide JSON",
                    "description": "",
                    "value": {
                      "fileExecutionId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  },
                  "CreatePartnershipOutboundTransaction_example2": {
                    "summary": "Generate Transaction with Fragments",
                    "description": "",
                    "value": {
                      "fileExecutionId": "d3b3e3e3-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/polling/executions": {
      "get": {
        "description": "This endpoint is used to regularly poll for new executions that have been processed by Stedi.\n\nYou must define one of `startDateTime` or `pageToken` when making a request.\n\nYou may optionally define a `pageSize`. The minimum `pageSize` is 1, and the maximum `pageSize` is 1000. The default is 100.\n\n`startDateTime` takes a string in ISO 8601 format. (ex: `2023-08-10T18:00:00Z`). \n`startDateTime` must be set to at least 1 minute in the past.\n\nThe results will contain executions that occurred after this `startDateTime`. Starting from the oldest to newest executions ordered by the `processedAt` field. Note, this is _exclusive_ of the `startDateTime`, a execution occuring at exactly `2023-08-10T18:00:00Z` for instance, would not be included. In addition, there is a 15 second window where newly created executions will not be included to account for any network latency or clock drifts within the systems to ensure you do not miss any executions.\n\nEach request will _always_ return a `nextPageToken`, regardless of whether there are new executions or not.\n\nWe DO NOT recommend trying to roll your own polling strategy leveraging `startDateTime` only. There are edge cases around two executions occuring at the _exact_ same time and being on the edge of a pagination which could cause you to miss one due to the exclusive nature of `startDateTime`. We recommend using `pageToken`'s instead.\n\nWhen making subsequent polling requests (not initiating with `startDateTime`), the `pageToken` can be used to continue iterating through pages of executions. Usage of the `pageToken` guaruntees you will not miss any executions on the stream. If at any point there are no more new executions in the `item` array, you will still receive a `nextPageToken`. Continue to use this token to poll for new executions. Once there are new executions, they will be returned in the `item` array.\n\n`pageToken`'s you have retrieved can serve as checkpoints. They do not expire, and you can always start from that point in the execution stream again if you need to catch a system up or recover from a failure. Storing `pageToken`'s as part of your polling process is encouraged.\n\n`pageToken`'s are unique per request, opaque, and should not be parsed or modified in any way. They are not guaranteed to be in any particular format, and may change in the future.\n",
        "operationId": "ListPollingExecutions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page"
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "The token used for pagination",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "The token used for pagination"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListPollingExecutions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPollingExecutionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/polling/transactions": {
      "get": {
        "description": "This endpoint is used to regularly poll for new transactions that have been processed in Core.\n\nYou must define one of `startDateTime` or `pageToken` when making a request.\n\nYou may optionally define a `pageSize`. The minimum `pageSize` is 1, and the maximum `pageSize` is 1000. The default is 100.\n\n`startDateTime` takes a string in ISO 8601 format. (ex: `2023-08-10T18:00:00Z`). \n`startDateTime` must be set to at least 1 minute in the past.\n\nThe results will contain transactions that occurred after this `startDateTime`. Starting from the oldest to newest transactions ordered by the `processedAt` field. Note, this is _exclusive_ of the `startDateTime`, a transaction occuring at exactly `2023-08-10T18:00:00Z` for instance, would not be included. In addition, there is a 15 second window where newly created transactions will not be included to account for any network latency or clock drifts within the systems to ensure you do not miss any transactions.\n\nEach request will _always_ return a `nextPageToken`, regardless of whether there are new transactions or not.\n\nWe DO NOT recommend trying to roll your own polling strategy leveraging `startDateTime` only. There are edge cases around two transactions occuring at the _exact_ same time and being on the edge of a pagination which could cause you to miss one due to the exclusive nature of `startDateTime`. We recommend using `pageToken`'s instead.\n\nWhen making subsequent polling requests (not initiating with `startDateTime`), the `pageToken` can be used to continue iterating through pages of transactions. Usage of the `pageToken` guaruntees you will not miss any transactions on the stream. If at any point there are no more new transactions in the `item` array, you will still receive a `nextPageToken`. Continue to use this token to poll for new transactions. Once there are new transactions, they will be returned in the `item` array.\n\n`pageToken`'s you have retrieved can serve as checkpoints. They do not expire, and you can always start from that point in the transaction stream again if you need to catch a system up or recover from a failure. Storing `pageToken`'s as part of your polling process is encouraged.\n\n`pageToken`'s are unique per request, opaque, and should not be parsed or modified in any way. They are not guaranteed to be in any particular format, and may change in the future.\n",
        "operationId": "ListPollingTransactions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page"
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "The token used for pagination",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "The token used for pagination"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListPollingTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPollingTransactionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "description": "Fetch a list of transactions, sorted by the date they were created from newest to oldest.\nGenerally this endpoint is used to display a list of transactions in a UI.\nIf you are looking to regularly fetch and check for new transactions for programmatic usage, you should use the `ListPollingTransactions` operation instead.",
        "operationId": "ListTransactions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page. If not specified, the default is 100.",
            "schema": {
              "type": "number",
              "maximum": 500,
              "minimum": 1,
              "description": "The maximum number of elements to return in a page. If not specified, the default is 100."
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`. If not specified, the first page of results is returned.",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1,
              "description": "`pageToken` is an opaque token returned by a previous call to this operation in the `nextPageToken`. If not specified, the first page of results is returned."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTransactionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "description": "Fetch a single transaction by its ID.",
        "operationId": "GetTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransaction 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/fragments/{fragmentIndex}": {
      "get": {
        "description": "Fetch a fragment by its index for a given transaction.",
        "operationId": "GetTransactionFragment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "fragmentIndex",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionFragment 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionFragmentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/fragments/{fragmentIndex}/output": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction fragment's output document after it has been translated via Core. Generally this will be JSON.\n\nThis endpoint returns a 302 Temporary redirect to the document download URL. Many HTTP clients will automatically follow this redirect, or have a simple follow redirects configuration to set. For instance in `curl` using the `-L` or `--location` flag will automatically follow the redirect.\n\nIn the event you cannot, or chose not to automatically follow the redirect, the body of the response contains a JSON object with a single key `documentDownloadUrl` which contains a temporary URL to download the document. This URL is good for 60 minutes.\n\nThere are no size restrictions on documents when fetching from this endpoint, however they are generally smaller and consumable by nature of being a fragment.\n",
        "operationId": "GetTransactionFragmentOutputDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "fragmentIndex",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionFragmentOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionFragmentOutputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/fragments/{fragmentIndex}/output-url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction fragment's output document URL after it has been translated via Core.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content.\nThere are no size restrictions on documents when fetching from this endpoint, however they are generally smaller and consumable by nature of being a fragment.\n",
        "operationId": "GetTransactionFragmentOutputDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          },
          {
            "name": "fragmentIndex",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionFragmentOutputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionFragmentOutputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/input": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's input document before it passes through any translation and mappings, generally this will be EDI.\n\nThis endpoint returns a 302 Temporary redirect to the document download URL. Many HTTP clients will automatically follow this redirect, or have a simple follow redirects configuration to set. For instance in `curl` using the `-L` or `--location` flag will automatically follow the redirect.\n\nIn the event you cannot, or chose not to automatically follow the redirect, the body of the response contains a JSON object with a single key `documentDownloadUrl` which contains a temporary URL to download the document. This URL is good for 60 minutes.\n\nThere are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionInputDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionInputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionInputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/input-url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's input document url before it passes through any translation and mappings, generally this will be EDI.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionInputDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionInputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionInputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/output": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's output document after it has been translated via Core. Generally this will be JSON.\n\nThis endpoint returns a 302 Temporary redirect to the document download URL. Many HTTP clients will automatically follow this redirect, or have a simple follow redirects configuration to set. For instance in `curl` using the `-L` or `--location` flag will automatically follow the redirect.\n\nIn the event you cannot, or chose not to automatically follow the redirect, the body of the response contains a JSON object with a single key `documentDownloadUrl` which contains a temporary URL to download the document. This URL is good for 60 minutes.\n\nThere are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionOutputDocument",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "GetTransactionOutputDocument 302 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionOutputDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}/output-url": {
      "get": {
        "description": "This endpoint is used to retrieve a transaction's output document url after it has been translated via Core.\n\nThis endpoint returns the document download URL, it must be then fetched for the actual document content. There are no size restrictions on documents when fetching from this endpoint.\n",
        "operationId": "GetTransactionOutputDocumentUrl",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app.",
            "schema": {
              "type": "string",
              "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTransactionOutputDocumentUrl 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionOutputDocumentUrlResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/x12/partnerships/{partnershipId}/generate-edi": {
      "post": {
        "description": "This endpoint generates and delivers fully-formed EDI files to your trading partners.",
        "operationId": "GenerateEdi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateEdiRequestContent"
              },
              "examples": {
                "GenerateEdi_example1": {
                  "summary": "Generate EDI",
                  "description": "",
                  "value": {
                    "filename": "my-output-file.edi",
                    "overrides": {
                      "interchangeUsageIndicator": "T",
                      "acknowledgmentRequestedCode": "1"
                    },
                    "transactionGroups": [
                      {
                        "transactionSettingId": "some-setting-id",
                        "overrides": {
                          "localApplicationId": "customLocal",
                          "partnerApplicationId": "customPartner"
                        },
                        "transactions": [
                          {
                            "heading": {
                              "transaction_set_header_ST": {
                                "transaction_set_identifier_code_01": "850",
                                "transaction_set_control_number_02": 1
                              },
                              "beginning_segment_for_purchase_order_BEG": {
                                "transaction_set_purpose_code_01": "XX",
                                "purchase_order_type_code_02": "XX",
                                "purchase_order_number_03": "XXXXX",
                                "date_05": "2023-08-11"
                              }
                            },
                            "detail": {
                              "baseline_item_data_PO1_loop": [
                                {
                                  "baseline_item_data_PO1": {}
                                }
                              ]
                            },
                            "summary": {
                              "transaction_set_trailer_SE": {
                                "number_of_included_segments_01": 4,
                                "transaction_set_control_number_02": 1
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "partnershipId",
            "in": "path",
            "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**.",
            "schema": {
              "type": "string",
              "maxLength": 81,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9_-]+)$",
              "description": "A unique ID for this partnership within Stedi. You can find this ID on the [Trading partners](https://www.stedi.com/app/core/partnerships) page under **Partnership identifier**."
            },
            "required": true,
            "examples": {
              "GenerateEdi_example1": {
                "summary": "Generate EDI",
                "description": "",
                "value": "ACME_BSW"
              }
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys).",
            "schema": {
              "type": "string",
              "description": "A unique string to identify this request to the server. The key can be up to 255 characters. You can safely retry requests with the same idempotency key within 24 hours of making the first request. This prevents sending duplicate data to your trading partners in case of network errors or other intermittent failures. [Learn more](https://www.stedi.com/docs/api-reference/index#idempotency-keys)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GenerateEdi 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateEdiResponseContent"
                },
                "examples": {
                  "GenerateEdi_example1": {
                    "summary": "Generate EDI",
                    "description": "",
                    "value": {
                      "edi": "ISA*00*          *00*          *14*ANOTHERMERCH   *ZZ*THISISME       *230828*0900*^*00801*000000002*1*P*>~GS*PO*ANOTHERMERCH*THISISME*20230828*090020*000000002*X*008010~ST*850*0001~BEG*XX*XX*XXXXX**20230811~PO1~SE*4*0001~GE*1*000000002~IEA*1*000000002~",
                      "artifactId": "f75168e4-e682-4410-bfec-b5b1541c7f21.x12",
                      "fileExecutionId": "f75168e4-e682-4410-bfec-b5b1541c7f21"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ResourceUnderChangeException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUnderChangeExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "ServiceException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessDeniedExceptionResponseContent": {
        "type": "object",
        "description": "The server response for authorization failure.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "Artifact": {
        "type": "object",
        "properties": {
          "artifactType": {
            "$ref": "#/components/schemas/ArtifactType"
          },
          "usage": {
            "$ref": "#/components/schemas/ArtifactUsage"
          },
          "sizeBytes": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "model": {
            "$ref": "#/components/schemas/ArtifactModel"
          }
        },
        "required": [
          "artifactType",
          "model",
          "sizeBytes",
          "url",
          "usage"
        ]
      },
      "ArtifactModel": {
        "type": "string",
        "enum": [
          "execution",
          "fragment",
          "transaction"
        ]
      },
      "ArtifactType": {
        "type": "string",
        "enum": [
          "text/csv",
          "application/edifact",
          "application/filepart",
          "application/json",
          "text/psv",
          "text/tsv",
          "application/edi-x12",
          "application/xml",
          "application/zip"
        ]
      },
      "ArtifactUsage": {
        "type": "string",
        "enum": [
          "input",
          "metadata",
          "output"
        ]
      },
      "ConnectionType": {
        "type": "string",
        "enum": [
          "bucket",
          "remote-ftp",
          "stedi-ftp",
          "as2"
        ]
      },
      "CoreX12UsageIndicator": {
        "type": "string",
        "description": "Set [ISA-15](https://www.stedi.com/edi/x12/segment/ISA#ISA-15) to a different value. If not set, the default value is `P (Production Data)`.",
        "enum": [
          "I",
          "T",
          "P"
        ]
      },
      "CreateOutboundFragmentRequestContent": {
        "type": "object",
        "properties": {
          "guideId": {
            "type": "string",
            "description": "The ID of the Stedi guide for the outbound transaction setting. The guide must be configured to use fragments. You can find this ID on the [Guides](https://www.stedi.com/app/guides) page in the Stedi app."
          },
          "fragment": {
            "description": "The fragment to stage for outbound delivery. Without a mapping, the fragment must be < 5MB and the shape must match the [Guide JSON](https://www.stedi.com/docs/edi-platform/operate/transform-json/guide-json) format for the specified guide. With a mapping, the fragment must be < 4MB and the shape must match the source schema of the specified mapping."
          },
          "mappingId": {
            "type": "string",
            "description": "Specify a mapping id to transform the fragment to Stedi's Guide JSON format."
          }
        },
        "required": [
          "fragment",
          "guideId"
        ]
      },
      "CreateOutboundFragmentResponseContent": {
        "type": "object",
        "properties": {
          "fragmentGroupId": {
            "type": "string",
            "description": "The fragment group ID where you created and added the fragment."
          },
          "createdAt": {
            "type": "string",
            "description": "The time Stedi created the fragment.",
            "format": "date-time"
          },
          "fragmentId": {
            "type": "string",
            "description": "A unique ID for the fragment Stedi created within the fragment group."
          }
        },
        "required": [
          "createdAt",
          "fragmentGroupId",
          "fragmentId"
        ]
      },
      "CreatePartnershipOutboundTransactionRequestContent": {
        "type": "object",
        "properties": {
          "transaction": {
            "description": "The data for an EDI transaction. If you are not using a mapping, this transaction data must be < 5MB and the shape should match the [Guide JSON](https://www.stedi.com/docs/edi-platform/operate/transform-json/guide-json) format for the specified outbound transaction setting. If you are using a mapping, this transaction data must be < 4MB and the shape must match the source schema for the specified mapping."
          },
          "filename": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9.*'()!_-]+)$",
            "description": "Set a custom name for the generated EDI file. Stedi overwrites files with the same name, so we recommend making the filename unique by including a timestamp or other identifier. If you do not specify a filename, Stedi autogenerates a unique name using the same ID generated for the `fileExecutionId`."
          },
          "fragmentGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "description": "Specify the fragment groups to include when creating this transaction. You can only generate EDI with a fragment group once. After you include a fragment group in generation call, Stedi locks the fragment to prevent accidentally generating transactions with duplicate data."
          },
          "mappingId": {
            "type": "string",
            "description": "Specify a mapping ID to transform the transaction data to Guide JSON format. You can find the mapping ID on the [Mappings](https://www.stedi.com/app/mappings) page in the Stedi app."
          }
        },
        "required": [
          "transaction"
        ]
      },
      "CreatePartnershipOutboundTransactionResponseContent": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "This property is currently not supported. It is reserved for future use."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "An ID for the process Stedi uses to generate the EDI file. This ID appears on the details page for the generated file in the Stedi app, and you can use it to trace the file's status and delivery. "
          }
        }
      },
      "DestinationAttempt": {
        "type": "object",
        "properties": {
          "attemptId": {
            "type": "string"
          },
          "destinationId": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DestinationAttemptStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DestinationAttemptStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE",
          "PROCESSING"
        ]
      },
      "DetailedDestinationAttemptLog": {
        "type": "object",
        "properties": {
          "messageType": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "response": {
            "type": "string"
          }
        }
      },
      "Direction": {
        "type": "string",
        "enum": [
          "INBOUND",
          "OUTBOUND",
          "UNKNOWN"
        ]
      },
      "ExceptionCause": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "stack": {
            "type": "string"
          }
        }
      },
      "ExecutionFaultCode": {
        "type": "string",
        "enum": [
          "DELIVERY_FAILURE",
          "FAILED_TO_EXTRACT_BUSINESS_IDENTIFIERS",
          "FAILED_TO_FIND_GUIDE",
          "FAILED_TO_FIND_LOCAL_PROFILE",
          "FAILED_TO_FIND_PARTNER_PROFILE",
          "FAILED_TO_FIND_PARTNERSHIP",
          "FAILED_TO_FIND_PROFILES",
          "FAILED_TO_FIND_RECEIVER_PROFILE",
          "FAILED_TO_FIND_SENDER_PROFILE",
          "FAILED_TO_FIND_CONNECTION",
          "FAILED_TO_GENERATE_CONTROL_NUMBERS",
          "FAILED_TO_PARSE",
          "FAILED_TO_PARSE_METADATA",
          "FAILED_TO_TRANSLATE",
          "FAILED_TO_ACK",
          "FILE_NOT_FOUND",
          "INVALID_EVENT",
          "INVALID_CONFIGURATION",
          "MISMATCHED_PARTNERSHIP_CONNECTION",
          "MISSING_FUNCTIONAL_GROUP_CONTROL_NUMBER",
          "MISSING_FUNCTIONAL_GROUP_RELEASE",
          "MISSING_INTERCHANGE_CONTROL_NUMBER",
          "MISSING_TRANSACTION_SET_CONTROL_NUMBER",
          "MISSING_RECEIVER_ID",
          "MISSING_RECEIVER_QUALIFIER",
          "MISSING_SENDER_ID",
          "MISSING_SENDER_QUALIFIER",
          "MULTIPLE_MATCHING_GUIDES",
          "MULTIPLE_MATCHING_TRANSACTION_SETTINGS",
          "MULTIPLE_PARTNERSHIPS",
          "NO_TRANSLATION_OUTPUT",
          "NO_TRANSACTION_SETS",
          "NOT_SUPPORTED",
          "NO_FUNCTIONAL_GROUPS",
          "NO_USAGE_INDICATOR_CODE",
          "PREVIOUSLY_RETRIED",
          "TRANSLATION_ERROR",
          "UNKNOWN_ERROR"
        ]
      },
      "ExecutionSource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ExecutionStatus": {
        "type": "string",
        "enum": [
          "COMPLETED",
          "PARTIALLY_COMPLETED",
          "FAILED",
          "IGNORED",
          "IN_PROGRESS",
          "RETRYING",
          "RETRIED",
          "STARTED"
        ]
      },
      "ExecutionSummary": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "executionId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "transactionCount": {
            "type": "number"
          },
          "faultCount": {
            "type": "number"
          },
          "faultCode": {
            "$ref": "#/components/schemas/ExecutionFaultCode"
          },
          "faultMessage": {
            "type": "string"
          },
          "retryable": {
            "type": "boolean"
          },
          "parentExecutionId": {
            "type": "string"
          },
          "childExecutionId": {
            "type": "string"
          },
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9_-]+)$",
            "description": "Identifier chosen by the user to uniquely identify a partnership."
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "Autogenerated identifier for a connection"
          },
          "source": {
            "$ref": "#/components/schemas/ExecutionSource"
          }
        },
        "required": [
          "createdAt",
          "direction",
          "executionId",
          "status",
          "updatedAt"
        ]
      },
      "GatewayTimeoutExceptionResponseContent": {
        "type": "object",
        "description": "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "GenerateEdiRequestContent": {
        "type": "object",
        "properties": {
          "transactionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionGroup"
            },
            "minItems": 1,
            "description": "Contains one or more EDI functional groups, each containing the data for one or more EDI transactions. You can override the Application IDs (GS-02 and GS-03) for each group individually. The outbound transaction setting for each group must be configured to use the same connection. If you need to send transactions to different connections, you must call the endpoint multiple times."
          },
          "filename": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9.*'()!_-]+)$",
            "description": "Set a custom name for the generated EDI file. Stedi overwrites files with the same name, so we recommend making the filename unique by including a timestamp or other identifier. If you do not specify a filename, Stedi autogenerates a unique name using an ID."
          },
          "overrides": {
            "$ref": "#/components/schemas/InterchangeOverrides"
          },
          "interchangeUsageIndicatorOverride": {
            "$ref": "#/components/schemas/CoreX12UsageIndicator"
          },
          "interchangeAuthorization": {
            "$ref": "#/components/schemas/X12InterchangeAuthorization"
          }
        },
        "required": [
          "transactionGroups"
        ]
      },
      "GenerateEdiResponseContent": {
        "type": "object",
        "properties": {
          "edi": {
            "type": "string",
            "description": "The EDI Stedi generated from the JSON transaction data."
          },
          "artifactId": {
            "type": "string",
            "description": "An ID for the generated EDI file."
          },
          "fileExecutionId": {
            "type": "string",
            "description": "A ID for the process Stedi uses to generate the EDI file. This ID appears on the details page for this file execution in the Stedi app. Internally, Stedi uses this ID to place the file in Stedi's outbound queue."
          }
        },
        "required": [
          "artifactId",
          "fileExecutionId"
        ]
      },
      "GetDestinationAttemptDetailsResponseContent": {
        "type": "object",
        "properties": {
          "attemptId": {
            "type": "string"
          },
          "destinationId": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DestinationAttemptStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailedDestinationAttemptLog"
            }
          }
        }
      },
      "GetDestinationAttemptsResponseContent": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationAttempt"
            },
            "description": "The related destinations attempts for the event."
          }
        }
      },
      "GetExecutionInputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionInputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionMetadataDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionMetadataDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionOutputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetExecutionResponseContent": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "executionId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "transactionCount": {
            "type": "number"
          },
          "faultCount": {
            "type": "number"
          },
          "faultCode": {
            "$ref": "#/components/schemas/ExecutionFaultCode"
          },
          "faultMessage": {
            "type": "string"
          },
          "retryable": {
            "type": "boolean"
          },
          "parentExecutionId": {
            "type": "string"
          },
          "childExecutionId": {
            "type": "string"
          },
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9_-]+)$",
            "description": "Identifier chosen by the user to uniquely identify a partnership."
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "connectionId": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "description": "Autogenerated identifier for a connection"
          },
          "source": {
            "$ref": "#/components/schemas/ExecutionSource"
          }
        },
        "required": [
          "createdAt",
          "direction",
          "executionId",
          "status",
          "updatedAt"
        ]
      },
      "GetTransactionFragmentOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionFragmentOutputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionFragmentResponseContent": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
          },
          "fileExecutionId": {
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "fragmentIndex": {
            "type": "number"
          },
          "fragments": {
            "$ref": "#/components/schemas/TransactionFragmentsSummary"
          },
          "transactionUrl": {
            "type": "string"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            }
          },
          "partnership": {
            "$ref": "#/components/schemas/Partnership"
          },
          "x12": {
            "$ref": "#/components/schemas/X12TransactionSummary"
          }
        },
        "required": [
          "artifacts",
          "direction",
          "fileExecutionId",
          "fragmentIndex",
          "fragments",
          "mode",
          "partnership",
          "processedAt",
          "transactionId",
          "transactionUrl"
        ]
      },
      "GetTransactionInputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionInputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionOutputDocumentResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionOutputDocumentUrlResponseContent": {
        "type": "object",
        "properties": {
          "documentDownloadUrl": {
            "type": "string",
            "description": "A URL to download the document. This URL is available for 60 minutes."
          }
        }
      },
      "GetTransactionResponseContent": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
          },
          "fileExecutionId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            }
          },
          "partnership": {
            "$ref": "#/components/schemas/Partnership"
          },
          "x12": {
            "$ref": "#/components/schemas/X12TransactionSummary"
          },
          "fragments": {
            "$ref": "#/components/schemas/TransactionFragmentsSummary"
          },
          "translationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationError"
            }
          }
        },
        "required": [
          "artifacts",
          "direction",
          "fileExecutionId",
          "mode",
          "partnership",
          "processedAt",
          "status",
          "transactionId"
        ]
      },
      "Index": {
        "type": "object",
        "properties": {
          "line": {
            "type": "number"
          },
          "column": {
            "type": "number"
          }
        },
        "required": [
          "column",
          "line"
        ]
      },
      "InterchangeOverrides": {
        "type": "object",
        "properties": {
          "interchangeUsageIndicator": {
            "$ref": "#/components/schemas/CoreX12UsageIndicator"
          },
          "acknowledgmentRequestedCode": {
            "$ref": "#/components/schemas/X12AcknowledgmentRequestedCode"
          },
          "interchangeControlVersionNumberCode": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "description": "Set [ISA-12](https://www.stedi.com/edi/x12/segment/ISA#ISA-12) to a different value. This code indicates the version of the `ISA` header segments included in the EDI file. By default, Stedi sets `ISA-12` to to be the X12 release number of the guide associated with the transaction setting."
          }
        }
      },
      "ListExecutionTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListExecutionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListPollingExecutionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListPollingTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ListTransactionsResponseContent": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "description": "The token used for pagination"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Mark": {
        "type": "object",
        "description": "The location in the document where the problem occurred. May be a single index or a range.",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/Index"
          },
          "end": {
            "$ref": "#/components/schemas/Index"
          }
        },
        "required": [
          "start"
        ]
      },
      "Mode": {
        "type": "string",
        "enum": [
          "test",
          "production",
          "other"
        ]
      },
      "Partnership": {
        "type": "object",
        "properties": {
          "partnershipId": {
            "type": "string",
            "maxLength": 81,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9_-]+)$",
            "description": "Identifier chosen by the user to uniquely identify a partnership."
          },
          "partnershipType": {
            "$ref": "#/components/schemas/PartnershipType"
          },
          "sender": {
            "$ref": "#/components/schemas/PartnershipSender"
          },
          "receiver": {
            "$ref": "#/components/schemas/PartnershipReceiver"
          }
        },
        "required": [
          "partnershipId",
          "partnershipType",
          "receiver",
          "sender"
        ]
      },
      "PartnershipReceiver": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9_-]+)$"
          }
        },
        "required": [
          "profileId"
        ]
      },
      "PartnershipSender": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9_-]+)$"
          }
        },
        "required": [
          "profileId"
        ]
      },
      "PartnershipType": {
        "type": "string",
        "enum": [
          "x12",
          "edifact"
        ]
      },
      "ResourceConflictExceptionResponseContent": {
        "type": "object",
        "description": "The server could not process the request because of conflict in the current state of the resource.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "ResourceNotFoundExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the specified resource cannot be found after an API request passes authentication and authorization.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "ResourceUnderChangeExceptionResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          }
        },
        "required": [
          "message"
        ]
      },
      "RetryEventResponseContent": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "description": "The ID of the newly retried event."
          }
        }
      },
      "ServiceExceptionResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "cause": {
            "$ref": "#/components/schemas/ExceptionCause"
          }
        },
        "required": [
          "message"
        ]
      },
      "ServiceUnavailableExceptionResponseContent": {
        "type": "object",
        "description": "The server cannot handle the request due to technical reasons.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "ThrottlingExceptionResponseContent": {
        "type": "object",
        "description": "The server response when usage plan or account-level throttling limits exceeded.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "TransactionFragmentsSummary": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string"
          },
          "fragmentCount": {
            "type": "number"
          },
          "batchSize": {
            "type": "number"
          }
        },
        "required": [
          "batchSize",
          "fragmentCount",
          "keyName"
        ]
      },
      "TransactionGroup": {
        "type": "object",
        "description": "JSON object containing data for one or more EDI transactions in [Guide JSON](/edi-platform/operate/generate-edi#format-transaction-data) format.",
        "properties": {
          "transactionSettingId": {
            "type": "string",
            "maxLength": 32,
            "pattern": "^([a-zA-Z0-9_-]+)$",
            "description": "A unique ID outbound transaction setting Stedi should use to determine the correct guide for validation and generation. To find this ID, go to the partnership and use the **Transaction Setting ID** field for the outbound transaction setting."
          },
          "transactions": {
            "type": "array",
            "items": {},
            "minItems": 1,
            "description": "This payload contains the transaction data. It must conform to the JSON Schema for the guide associated with each transaction setting (Guide JSON format)."
          },
          "overrides": {
            "$ref": "#/components/schemas/TransactionGroupOverrides"
          }
        },
        "required": [
          "transactionSettingId",
          "transactions"
        ]
      },
      "TransactionGroupOverrides": {
        "type": "object",
        "description": "Customize the Application IDs for you or your trading partner.",
        "properties": {
          "localApplicationId": {
            "type": "string",
            "maxLength": 15,
            "minLength": 2,
            "description": "Set the [GS-02](https://www.stedi.com/edi/x12/segment/GS#GS-02) element to a custom value. If not set, Stedi uses the Application ID for the local profile associated with the partnership."
          },
          "partnerApplicationId": {
            "type": "string",
            "maxLength": 15,
            "minLength": 2,
            "description": "Set the [GS-03](https://www.stedi.com/edi/x12/segment/GS#GS-03) element to a custom value. If not set, Stedi uses the Application ID for the partner profile associated with the partnership."
          }
        }
      },
      "TransactionStatus": {
        "type": "string",
        "enum": [
          "failed",
          "succeeded"
        ]
      },
      "TransactionSummary": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "A unique identifier for the processed transaction within Stedi. This ID is included in the [`transaction.processed.v2` event](https://www.stedi.com/docs/operate/event-types#transaction-processed), or you can retrieve it manually from the transaction's details page within the Stedi app."
          },
          "fileExecutionId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "artifacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            }
          },
          "partnership": {
            "$ref": "#/components/schemas/Partnership"
          },
          "x12": {
            "$ref": "#/components/schemas/X12TransactionSummary"
          },
          "fragments": {
            "$ref": "#/components/schemas/TransactionFragmentsSummary"
          },
          "translationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationError"
            }
          }
        },
        "required": [
          "artifacts",
          "direction",
          "fileExecutionId",
          "mode",
          "partnership",
          "processedAt",
          "status",
          "transactionId"
        ]
      },
      "TranslationError": {
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/components/schemas/TranslationErrorContext"
          },
          "mark": {
            "$ref": "#/components/schemas/Mark"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "TranslationErrorContext": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "schemaPath": {
            "type": "string"
          }
        }
      },
      "UnauthorizedExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the authorizer failed to authenticate the caller.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": [
          "message"
        ]
      },
      "X12AcknowledgmentRequestedCode": {
        "type": "string",
        "description": "Set [ISA-14](https://www.stedi.com/edi/x12/segment/ISA#ISA-14) to a different value. If not set, the default value is `0 (No Interchange Acknowledgment Requested)`.",
        "enum": [
          "0",
          "1",
          "2",
          "3"
        ]
      },
      "X12AuthorizationInformationQualifier": {
        "type": "string",
        "description": "Identifies the type of information in the Authorization Information (`ISA-01`). Default is `00 - No Authorization Information Present`.",
        "enum": [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08"
        ]
      },
      "X12InterchangeAuthorization": {
        "type": "object",
        "description": "Set values for [ISA header](https://www.stedi.com/edi/x12/segment/ISA) elements (ISA-01 to ISA-04).",
        "properties": {
          "authorizationInformationQualifier": {
            "$ref": "#/components/schemas/X12AuthorizationInformationQualifier"
          },
          "authorizationInformation": {
            "type": "string",
            "maxLength": 10,
            "pattern": "^.*[^ ].*$",
            "description": "Information used for additional identification or authorization of the interchange sender or the data in the interchange (`ISA-02`). The type of information is set by the `authorizationInformationQualifier`."
          },
          "securityInformationQualifier": {
            "$ref": "#/components/schemas/X12SecurityInformationQualifier"
          },
          "securityInformation": {
            "type": "string",
            "maxLength": 10,
            "pattern": "^.*[^ ].*$",
            "description": "The security information referenced by the `securityInformationQualifier` (`ISA-04`). Typically, this is a password."
          }
        }
      },
      "X12SecurityInformationQualifier": {
        "type": "string",
        "description": "Identifies the type of information in the Security Information (ISA-03). Default is `00 - No Security Information Present`.",
        "enum": [
          "00",
          "01"
        ]
      },
      "X12TransactionMetadata": {
        "type": "object",
        "properties": {
          "interchange": {
            "$ref": "#/components/schemas/X12TransactionMetadataInterchange"
          },
          "functionalGroup": {
            "$ref": "#/components/schemas/X12TransactionMetadataFunctionalGroup"
          },
          "transaction": {
            "$ref": "#/components/schemas/X12TransactionMetadataTransaction"
          },
          "sender": {
            "$ref": "#/components/schemas/X12TransactionMetadataProfile"
          },
          "receiver": {
            "$ref": "#/components/schemas/X12TransactionMetadataProfile"
          }
        },
        "required": [
          "functionalGroup",
          "interchange",
          "receiver",
          "sender",
          "transaction"
        ]
      },
      "X12TransactionMetadataFunctionalGroup": {
        "type": "object",
        "properties": {
          "controlNumber": {
            "type": "number",
            "maximum": 999999999,
            "minimum": 0
          },
          "date": {
            "type": "string"
          },
          "functionalIdentifierCode": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "release": {
            "type": "string"
          }
        },
        "required": [
          "controlNumber",
          "date",
          "functionalIdentifierCode",
          "release",
          "time"
        ]
      },
      "X12TransactionMetadataInterchange": {
        "type": "object",
        "properties": {
          "acknowledgmentRequestedCode": {
            "type": "string"
          },
          "controlNumber": {
            "type": "number",
            "maximum": 999999999,
            "minimum": 0
          }
        },
        "required": [
          "acknowledgmentRequestedCode",
          "controlNumber"
        ]
      },
      "X12TransactionMetadataProfile": {
        "type": "object",
        "properties": {
          "applicationCode": {
            "type": "string"
          },
          "isa": {
            "$ref": "#/components/schemas/X12TransactionMetadataProfileISA"
          }
        },
        "required": [
          "applicationCode",
          "isa"
        ]
      },
      "X12TransactionMetadataProfileISA": {
        "type": "object",
        "properties": {
          "qualifier": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "qualifier"
        ]
      },
      "X12TransactionMetadataTransaction": {
        "type": "object",
        "properties": {
          "controlNumber": {
            "type": "string"
          },
          "transactionSetIdentifier": {
            "type": "string"
          }
        },
        "required": [
          "controlNumber",
          "transactionSetIdentifier"
        ]
      },
      "X12TransactionSetting": {
        "type": "object",
        "properties": {
          "guideId": {
            "type": "string"
          },
          "transactionSettingId": {
            "type": "string"
          }
        }
      },
      "X12TransactionSummary": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/X12TransactionMetadata"
          },
          "transactionSetting": {
            "$ref": "#/components/schemas/X12TransactionSetting"
          }
        },
        "required": [
          "metadata"
        ]
      }
    },
    "securitySchemes": {
      "httpApiKeyAuth": {
        "type": "apiKey",
        "description": "API key authentication via the 'Authorization' header",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "httpApiKeyAuth": []
    }
  ],
  "x-stedi": {
    "lifecycle": "general_availability",
    "product": "core",
    "public": true
  },
  "tags": [],
  "servers": [
    {
      "url": "https://core.us.stedi.com/2023-08-01",
      "description": "Production"
    }
  ]
}
