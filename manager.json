{
  "components": {
    "schemas": {
      "AccessDeniedExceptionResponseContent": {
        "description": "The server response for authorization failure.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "AdditionalIdentificationDependent": {
        "description": "Use this object when you need to provide an additional identification number for the dependent. This is rarely required for standard eligibility checks.",
        "properties": {
          "agencyClaimNumber": {
            "description": "The Property and Casualty Claim Number associated with the patient. You should only submit this value when when you are submitting an eligibility request to a property and casualty payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "description": "The contract number for an existing contract between the payer and the provider requesting the eligibility check.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthInsuranceClaimNumber": {
            "description": "This property is never used in practice.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "identificationCardSerialNumber": {
            "description": "The identification card serial number. You can include this when the ID card has a number in addition to the member ID number. The Identification Card Serial Number uniquely identifies the card when multiple cards have been or will be issued to a member, such as a replacement card.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "memberIdentificationNumber": {
            "description": "Not intended for most use cases. Only set this when the property and casualty patient identifier is a member ID that would be used in an 837 claim submission.\n\nIf the patient has their own member ID for the health plan, you should identify them in the `subscriber` object. If the patient doesn't have their own member ID, don't set this property.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNetworkIdentificationNumber": {
            "description": "The plan network identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNumber": {
            "description": "The insurance plan number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "policyNumber": {
            "description": "The insurance group or policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalIdentificationSubscriber": {
        "description": "Use this object when you need to provide an identification number other than or in addition to the subscriber's member ID. For example, you may provide the patient account number.\n\nDon't include the health insurance claim number or the medicaid recipient ID number here unless they are different from the member ID.",
        "properties": {
          "agencyClaimNumber": {
            "description": "The Property and Casualty Claim Number associated with the patient. You should only submit this value when when you are submitting an eligibility request to a property and casualty payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "description": "The contract number for an existing contract between the payer and the provider requesting the eligibility check.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthInsuranceClaimNumber": {
            "description": "The health insurance claim number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "identificationCardSerialNumber": {
            "description": "The identification card serial number. You can include this when the ID card has a number in addition to the member ID number. The Identification Card Serial Number uniquely identifies the card when multiple cards have been or will be issued to a member, such as a replacement card.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "memberIdentificationNumber": {
            "description": "This property is never used in practice. Supply the subscriber's member ID in `subscriber.memberId`.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNetworkIdentificationNumber": {
            "description": "The plan network identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNumber": {
            "description": "The insurance plan number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "policyNumber": {
            "description": "The insurance group or policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalInformation": {
        "properties": {
          "description": {
            "description": "A free-form message containing additional information about the benefits in the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Address": {
        "properties": {
          "address1": {
            "description": "The first line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "description": "The city.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "countryCode": {
            "description": "The two-letter country code from [Part 1 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "The country subdivision code from [Part 2 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-2).",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "description": "The United States or Canadian postal code, excluding punctuation and blanks.",
            "maxLength": 9,
            "minLength": 5,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/InfallibleStateOrProvinceCode"
          }
        },
        "type": "object"
      },
      "ApplicationModes": {
        "description": "The type of data in the request. This is either `production` when you send a request with a standard API key or `test` when you send a request in test mode with a [test API key](https://www.stedi.com/docs/api-reference/index#api-key-types). The `information` value is not currently used.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "production",
          "test",
          "information"
        ],
        "type": "string"
      },
      "AuthOrCertIndicator": {
        "description": "Code indicating whether the benefit is subject to prior authorization or certification.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "N",
          "U",
          "Y"
        ],
        "type": "string"
      },
      "BatchEligibilityChecksItem": {
        "properties": {
          "controlNumber": {
            "description": "An integer used to identify the transaction. This is a requirement for the X12 EDI 270 transaction that Stedi will generate and send to the payer. It doesn't need to be globally unique - you can use the same number for every request.",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "dependents": {
            "description": "A dependent for which you want to retrieve benefits information.\n- You can only submit one dependent per eligibility check.\n- Only include the patient's information here when they are listed as a dependent on the subscriber's insurance plan AND the payer cannot uniquely identify them through information outside the subscriber's policy. For example, if the dependent has their own member ID number, you should identify them in the `subscriber` object instead. This includes member IDs that differ only by a suffix, such as `01`, because the patient can still be uniquely identified.\n- Most Medicaid plans don't support dependents, with a [few exceptions](https://www.stedi.com/docs/healthcare/send-eligibility-checks#medicaid-dependents). Sending this array to payers that don't support dependents will either cause an error, or the payer may ignore the information and return results for the subscriber instead.\n- Each payer has different requirements, so you should supply the fields necessary for each payer to identify the dependent in their system. However, we **strongly recommend** including the dependent's date of birth in the request when available because many payers return errors without it.\n- Enter the patient's name exactly as written on their insurance card, if available, including any special or punctuation characters such as apostrophes, hyphens (dashes), or spaces. Visit [patient names](https://www.stedi.com/docs/healthcare/send-eligibility-checks#patient-names) for all best practices to avoid unnecessary failures.",
            "items": {
              "$ref": "#/components/schemas/RequestDependent"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "encounter": {
            "$ref": "#/components/schemas/Encounter"
          },
          "externalPatientId": {
            "description": "A unique identifier for the patient that Stedi uses to identify and correlate historical eligibility checks for the same individual. We recommend including this value in all requests.",
            "maxLength": 36,
            "type": "string"
          },
          "informationReceiverName": {
            "$ref": "#/components/schemas/InformationReceiverName",
            "deprecated": true,
            "description": "Use the corresponding properties in the `provider` object instead."
          },
          "portalPassword": {
            "description": "The password that the provider uses to log in to the payer's portal. This is not commonly used.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "portalUsername": {
            "description": "The username that the provider uses to log in to the payer's portal. This is not commonly used.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider",
            "description": "Information about the entity requesting the eligibility check. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider.\n - You must provide the `organizationName` (if the entity is an organization), or `firstName` and `lastName` (if the provider is an individual).\n - You must also provide an identifier - this is typically the provider's [National Provider Identifier](https://www.stedi.com/docs/healthcare/national-provider-identifier) (`npi`). If the provider doesn't have an NPI, you can supply an alternative, such as their `taxId` or `ssn`.\n - Don't include additional properties, such as `taxId` or `address`, unless they are specifically required or suggested by the payer."
          },
          "submitterTransactionIdentifier": {
            "description": "A unique identifier for the eligibility check within this batch request. Stedi returns this identifier in the response for the [Poll Batch Eligibility Checks](https://www.stedi.com/docs/api-reference/healthcare/get-healthcare-polling-eligibility) endpoint.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/RequestSubscriber"
          },
          "tradingPartnerName": {
            "description": "The payer's name, such as Cigna or Aetna.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "This is the payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list. You can send requests using the primary payer ID, the Stedi payer ID, or any alias listed in the payer record.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "controlNumber",
          "provider",
          "submitterTransactionIdentifier",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "BatchEligibilityChecksRequestContent": {
        "properties": {
          "items": {
            "description": "Each entry in this array represents a single eligibility check. You can submit up to 1,000 eligibility checks in a single request. **Warning:** If _any_ of the individual checks contain invalid JSON data, such as missing required properties or invalid values, Stedi rejects the entire batch with a `400` status code and returns errors to help you correct the issues.",
            "items": {
              "$ref": "#/components/schemas/BatchEligibilityChecksItem"
            },
            "maxItems": 1000,
            "minItems": 1,
            "type": "array"
          },
          "name": {
            "description": "The name that Stedi will use when displaying this batch on the [Eligibility check batches page](https://portal.stedi.com/app/healthcare/checks/batch). It must be unique within your Stedi account. If you don't specify a name, Stedi sets this property to the autogenerated `batchId` returned in the response.",
            "pattern": "^[a-zA-Z0-9-_]{1,100}$",
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "BatchEligibilityChecksResponseContent": {
        "properties": {
          "batchId": {
            "description": "An identifier for this batch of eligibility checks. You can use this identifier to retrieve the results of this batch using the [Poll Batch Eligibility Checks](https://www.stedi.com/docs/api-reference/healthcare/get-healthcare-polling-eligibility) endpoint.",
            "type": "string"
          },
          "submittedAt": {
            "description": "The date and time that the batch of eligibility checks was submitted to Stedi for processing.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "batchId",
          "submittedAt"
        ],
        "type": "object"
      },
      "BatchEligibilityPollingResponseContent": {
        "description": "Common output structure for list operations with pagination support.",
        "properties": {
          "items": {
            "description": "Each eligibility check response is included as a separate item in this array. The response shape is identical to the shape of the response for the [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) endpoint, with the addition of two new properties that help you correlate the results with individual eligibility checks.\n    - `batchId` contains the `batchId` Stedi returned from the [Batch Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-batch-eligibility) endpoint when making the request.\n    - `submitterTransactionIdentifier` contains the unique identifier for the eligibility check that you submitted in the request.",
            "items": {
              "$ref": "#/components/schemas/BatchEligibilityResultItem"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "A Stedi-generated token that you can submit in the `pageToken` query parameter to retrieve the next page of results. If there are no more results, this property is not included in the response.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "BatchEligibilityResultItem": {
        "properties": {
          "batchId": {
            "description": "The `batchId` Stedi returned from the [Batch Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-batch-eligibility) endpoint.",
            "type": "string"
          },
          "batchName": {
            "description": "The name Stedi uses when displaying this batch on the [Eligibility check batches page](https://portal.stedi.com/app/healthcare/checks/batch). If you didn't specify a name when submitting the batch, this is the same as the `batchId`.",
            "pattern": "^[a-zA-Z0-9-_]{1,100}$",
            "type": "string"
          },
          "benefitsInformation": {
            "description": "Information about the patient's healthcare benefits, such as coverage level (individual vs. family), coverage type (deductibles, co-pays, etc.), out of pocket maximums, and more. \n \n Payers typically return at least the following properties: `code`, `coverageLevelCode`, `serviceTypeCodes`, and either `benefitAmount` or `benefitPercent`. However, the exact properties returned in this object are up to the payer's discretion.\n\nThe payer may send benefits information for service type codes (STCs) you didn't request - this is expected. The STC you send in the request tells the payer the types of benefits information you want, but they aren't required to respond with exactly the same STC(s) in the response. Receiving different STCs than you requested can also mean that the payer is ignoring the STC you sent, which is why we recommend [testing payers](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#test-payer-stc-support) to determine their support for specific STCs.\n\nVisit [Determine patient benefits](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits) for more information about benefit types, details about how to interpret the `benefitsInformation` array, and additional examples.",
            "items": {
              "$ref": "#/components/schemas/BenefitsInformation"
            },
            "type": "array"
          },
          "controlNumber": {
            "description": "An identifier for the payer's response.",
            "type": "string"
          },
          "dependents": {
            "description": "Information about the patient when they are a dependent. When the patient is a dependent, this array will contain a single object with the patient's information. When the patient is a subscriber, or considered to be a subscriber because they have a unique member ID, their information is returned in the `subscriber` object, and this array will be empty.\n\n When present, this object will always include the dependent's name for identification, but many payers will also return the date of birth and other identifying information.",
            "items": {
              "$ref": "#/components/schemas/ResponseDependent"
            },
            "type": "array"
          },
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "errors": {
            "description": "When a payer rejects your eligibility check, the response contains one or more [`AAA` errors](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) that specify the reasons for the rejection and any recommended follow-up actions.\n\nAny errors that occur at the `payer`, `provider`, `subscriber`, or `dependents` levels are also included in this array, allowing you to review all errors in a central location. If there are no `AAA` errors, this array will be empty.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "implementationTransactionSetSyntaxError": {
            "description": "The implementation transaction set error code provided in `IK502` of the 999 transaction.",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/EligibilityMetaDataJSON"
          },
          "payer": {
            "$ref": "#/components/schemas/Payer"
          },
          "planDateInformation": {
            "$ref": "#/components/schemas/PlanDateInformation"
          },
          "planInformation": {
            "$ref": "#/components/schemas/PlanInformation"
          },
          "planStatus": {
            "deprecated": true,
            "description": "Please use `benefitsInformation` instead.",
            "items": {
              "$ref": "#/components/schemas/PlanStatus",
              "deprecated": true
            },
            "type": "array"
          },
          "provider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "reassociationKey": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "status": {
            "description": "Errors Stedi encountered when generating or sending the final X12 EDI transaction to the payer. These can include validation errors and payer unavailable errors that prevent delivery.",
            "type": "string"
          },
          "submitterTransactionIdentifier": {
            "description": "The unique identifier for the eligibility check that you submitted in the original batch request.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ResponseSubscriber"
          },
          "subscriberTraceNumbers": {
            "description": "A unique identifier for the eligibility request. It's used to trace the transaction. Stedi always generates a trace number for internal tracking, and the payer may generate one as well. Stedi returns both its internal trace number and the payer's trace number (if present) in this array.\n\nYou can't set your own trace number when submitting eligibility checks through this endpoint.",
            "items": {
              "$ref": "#/components/schemas/SubscriberTraceNumber"
            },
            "type": "array"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original eligibility check request. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "transactionSetAcknowledgement": {
            "description": "The transaction set acknowledgment code provided in in the [X12 EDI 999 response](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231/01HRF41ES1DVGCA6X1EHSRPFXZ#properties.heading.properties.transaction_set_response_header_AK2_loop.items.properties.transaction_set_response_trailer_IK5).",
            "type": "string"
          },
          "warnings": {
            "description": "Warnings indicate non-fatal issues with your eligibility check or a non-standard response from the payer.",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "type": "array"
          },
          "x12": {
            "description": "Typically this property contains the raw X12 EDI [271 Eligibility Benefit Response](https://portal.stedi.com/app/guides/view/hipaa/health-care-eligibility-benefit-response-x279a1/01GS66YHZPB37ABF34DBPSR213) from the payer.\n\nIn some circumstances, this property may contain a [999 Implementation Acknowledgment](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231a1/01HMRQV0N8SPHG58M4ZG1CRHH0) instead of a 271. A 999 indicates validation errors in the X12 EDI transaction, such as improper formatting or missing or invalid values.\n\nIf the 999 is returned in this property, many of the other response properties will be empty, as they are mapped to information in the 271.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitRelatedEntityIdentification": {
        "description": "Code identifying the type of value provided in `entityIdentificationValue`. For example, `FI` - Federal Taxpayer's Identification Number.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "24",
          "34",
          "46",
          "FA",
          "FI",
          "II",
          "MI",
          "NI",
          "PI",
          "PP",
          "SV",
          "XV",
          "XX"
        ],
        "type": "string"
      },
      "BenefitsAdditionalInformation": {
        "description": "Identifying information specific to this type of benefit.",
        "properties": {
          "alternativeListId": {
            "description": "The alternative list ID. This identifier allows the payer to specify a list of drugs and its alternative drugs with the associated formulary status for the patient.",
            "type": "string"
          },
          "coverageListId": {
            "description": "The coverage list ID. This identifier allows the payer to specify the identifier of a list of drugs that have coverage limitations for the associated patient.",
            "type": "string"
          },
          "drugFormularyNumber": {
            "description": "The drug formulary number.",
            "type": "string"
          },
          "familyUnitNumber": {
            "description": "The family unit number. This is returned when the payer is a pharmacy benefits manager (PBM) and the patient has a suffix to their member ID number that is used in the NCPDP Telecom Standard Insurance Segment, in field `303-C3` (Person Code). For all other uses, the family unit number (suffix) is considered part of the patient's member ID number.",
            "type": "string"
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number for the patient's health insurance plan.",
            "type": "string"
          },
          "hicNumber": {
            "description": "The health insurance claim number (HICN). Note that CMS previously used the HICN to uniquely identify Medicare beneficiaries. However, they have since transitioned to a new, randomized Medicare Beneficiary Identifier (MBI) format. The HICN is no longer used for Medicare transactions but this property is now used by some payers to return MBI. If you receive a value in this property that matches the format specified in the [Medicare Beneficiary Identifier documentation](https://www.cms.gov/training-education/partner-outreach-resources/new-medicare-card/medical-beneficiary-identifiers-mbis), the number is likely an MBI and we recommend sending a follow-up eligibility check to CMS for additional benefits data. This most commonly occurs with patients who are covered by both Medicare and Medicaid.",
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "type": "string"
          },
          "medicaidRecepientIdNumber": {
            "description": "The Medicaid Recipient Identification number.",
            "type": "string"
          },
          "medicalAssistanceCategory": {
            "description": "The medical assistance category.",
            "type": "string"
          },
          "memberId": {
            "description": "The patient's member ID.",
            "type": "string"
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The plan network identification number.",
            "type": "string"
          },
          "planNumber": {
            "description": "The insurance plan number.",
            "type": "string"
          },
          "policyNumber": {
            "description": "The patient's policy number.",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "The prior authorization number.",
            "type": "string"
          },
          "referralNumber": {
            "description": "The referral number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitsDateInformation": {
        "description": "Dates associated with the benefits.\n  - These dates only apply to the `benefitsInformation` object in which this `benefitsDateInformation` is provided.",
        "properties": {
          "added": {
            "description": "Added date. Payers may return this information in the case of retroactive eligibility.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admission": {
            "description": "The admission date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admissions": {
            "description": "The date(s) for admission.",
            "items": {
              "$ref": "#/components/schemas/DtpDate"
            },
            "type": "array"
          },
          "benefit": {
            "description": "The benefit date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitBegin": {
            "description": "The date when the benefit begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitEnd": {
            "description": "The date when the benefit ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "certification": {
            "deprecated": true,
            "description": "The certification date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraBegin": {
            "deprecated": true,
            "description": "The date when COBRA coverage begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraEnd": {
            "deprecated": true,
            "description": "The date when COBRA coverage ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "completion": {
            "description": "The completion date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "coordinationOfBenefits": {
            "description": "The coordination of benefits date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfDeath": {
            "description": "The date of death.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfLastUpdate": {
            "description": "The date when the plan information was last updated.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharge": {
            "description": "The discharge date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharges": {
            "description": "The date(s) when the patient was discharged.",
            "items": {
              "$ref": "#/components/schemas/DtpDate"
            },
            "type": "array"
          },
          "effectiveDateOfChange": {
            "deprecated": true,
            "description": "The effective date of change.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibility": {
            "description": "Plan eligibility dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityBegin": {
            "description": "The date when the patient is first eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityEnd": {
            "description": "The date when the patient is no longer eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "enrollment": {
            "deprecated": true,
            "description": "The date when the patient is enrolled in the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "issue": {
            "deprecated": true,
            "description": "The issue date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "latestVisitOrConsultation": {
            "description": "The latest visit or consultation date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodEnd": {
            "description": "The end of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodStart": {
            "description": "The start of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "plan": {
            "description": "Only included when multiple plans apply to the patient or multiple plan periods apply.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planBegin": {
            "description": "Only included when multiple plans apply to the patient or multiple plan periods apply.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planEnd": {
            "deprecated": true,
            "description": "The date coverage from the plan ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyEffective": {
            "deprecated": true,
            "description": "The date when the policy becomes effective.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyExpiration": {
            "deprecated": true,
            "description": "The date when the policy expires.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateEnd": {
            "deprecated": true,
            "description": "The end of period when the plan premium payments are up-to-date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidtoDateBegin": {
            "deprecated": true,
            "description": "The start of the period when the plan premium was paid in full.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "primaryCareProvider": {
            "description": "The primary care provider date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "service": {
            "description": "The service date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "status": {
            "description": "The status date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitsInformation": {
        "properties": {
          "additionalInformation": {
            "description": "A free-form message containing additional information about the benefits in the response.",
            "items": {
              "$ref": "#/components/schemas/AdditionalInformation"
            },
            "type": "array"
          },
          "authOrCertIndicator": {
            "$ref": "#/components/schemas/AuthOrCertIndicator",
            "description": "Code indicating whether the benefit is subject to prior authorization or certification. Can be `Y` - Yes, `N` - No, or `U` - Unknown.\n\nPayers may sometimes return other non-compliant values."
          },
          "benefitAmount": {
            "description": "The monetary benefit amount, such as a patient's co-pay or deductible. This value is expressed as a decimal, such as 100.00. \n \n The payer will always send a value in this property when the `benefitsInformation.code` = `B` - Co-Payment, `C` - Deductible, `G` - Out of Pocket (Stop Loss), `J` - Cost Containment, or `Y` - Spend Down. For those codes, this value represents the patient's portion of responsibility. \n \n The payer will **never** send this value when `benefitsInformation.code` = `A` - Co-Insurance. This property can contain zero when the patient has no responsibility. \n \n Learn more about [patient costs](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits).",
            "type": "string"
          },
          "benefitPercent": {
            "description": "The percentage of the benefit, such as co-insurance. This property can contain zero when the patient has no responsibility. \n \n The payer will always send a value in this property when `benefitsInformation.code` = `A` - Co-Insurance. For this code, this value represents the patient's portion of the responsibility. The percentage is expressed as a decimal, such as `0.80` represents 80%. \n \n The payer will **never** send a value in this property when `benefitsInformation.code` = `B` - Co-Payment, `C` - Deductible, `G` - Out of Pocket (Stop Loss), `J` - Cost Containment, or `Y` - Spend Down. \n \n Learn more about [patient costs](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits).",
            "type": "string"
          },
          "benefitQuantity": {
            "description": "The quantity of the benefit, qualified by the type specified in `quantityQualifier`. For example, `10` when the `quantityQualifier` is `Visits`.",
            "type": "string"
          },
          "benefitsAdditionalInformation": {
            "$ref": "#/components/schemas/BenefitsAdditionalInformation"
          },
          "benefitsDateInformation": {
            "$ref": "#/components/schemas/BenefitsDateInformation"
          },
          "benefitsRelatedEntities": {
            "description": "Other entities associated with the eligibility or benefits. This could be a provider, an individual, an organization, or another payer. When present, this array typically contains information about the patient's primary care provider (PCP), another organization that handles a specific benefit type (such as telehealth mental health services), or another health plan for the patient (coordination of benefits scenarios).\n- This is where information for a crossover carrier such as Medicaid or Medicare is provided, if it's applicable to the patient and the payer supports it.\n- For Blue Cross Blue Shield (BCBS) payers, Stedi returns an entry containing information about the patient's home plan - the plan that actually verified the coverage. In this object, the `entityIdentifier` property is set to `Party Performing Verification`. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#bcbs-home-plan)",
            "items": {
              "$ref": "#/components/schemas/BenefitsRelatedEntity"
            },
            "type": "array"
          },
          "benefitsRelatedEntity": {
            "$ref": "#/components/schemas/BenefitsRelatedEntity",
            "deprecated": true,
            "description": "Please use `benefitsInformation.benefitsRelatedEntities` instead."
          },
          "benefitsServiceDelivery": {
            "items": {
              "$ref": "#/components/schemas/BenefitsServiceDelivery"
            },
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/BenefitsInformationCode"
          },
          "compositeMedicalProcedureIdentifier": {
            "$ref": "#/components/schemas/CompositeMedicalProcedureIdentifier"
          },
          "coverageLevel": {
            "$ref": "#/components/schemas/BenefitsInformationCoverageLevelName"
          },
          "coverageLevelCode": {
            "$ref": "#/components/schemas/BenefitsInformationCoverageLevelCode"
          },
          "eligibilityAdditionalInformation": {
            "$ref": "#/components/schemas/EligibilityAdditionalInformation",
            "deprecated": true,
            "description": "Please use `benefitsInformation.eligibilityAdditionalInformationList` instead."
          },
          "eligibilityAdditionalInformationList": {
            "description": "Used when there are multiple Nature of Injury Codes or a Facility Type Codes included in the response.",
            "items": {
              "$ref": "#/components/schemas/EligibilityAdditionalInformation"
            },
            "type": "array"
          },
          "headerLoopIdentifierCode": {
            "description": "The loop header identifier number in the `LS` segment of the original X12 EDI transaction.",
            "type": "string"
          },
          "inPlanNetworkIndicator": {
            "$ref": "#/components/schemas/InPlanNetworkIndicatorName"
          },
          "inPlanNetworkIndicatorCode": {
            "$ref": "#/components/schemas/InPlanNetworkIndicatorCode"
          },
          "insuranceType": {
            "$ref": "#/components/schemas/InsuranceTypeName"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/InsuranceTypeCode",
            "description": "Code identifying the type of insurance policy. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#insurance-type-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "name": {
            "$ref": "#/components/schemas/BenefitsInformationName"
          },
          "planCoverage": {
            "description": "The specific product name or special program name for an insurance plan. For example `Gold 1-2-3`.\n\nPayers are normally required to send the plan name when `benefitsInformation.code` is set to values `1` - `8` and the `benefitsInformation.serviceTypeCodes` contains `30` (Health Benefit Plan Coverage). However, behavior may vary by payer, so don't rely on this information being present in the response. Note that the plan name returned in this property may not exactly match the name the payer uses in official plan documents or marketing literature.\n\nVisit [What's the plan name?](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#what’s-the-plan-name%3F) in the benefits response documentation for more details.",
            "type": "string"
          },
          "quantityQualifier": {
            "$ref": "#/components/schemas/QuantityQualifierName",
            "description": "The name of the `quantityQualifierCode`.\n\nPayers may sometimes return other non-compliant values."
          },
          "quantityQualifierCode": {
            "$ref": "#/components/schemas/QuantityQualifierCode",
            "description": "Code indicating the type of quantity for the benefit. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#quantity-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "serviceTypeCodes": {
            "description": "An array of [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) related to the benefit type.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceTypeCode"
            },
            "type": "array"
          },
          "serviceTypes": {
            "description": "The names of the service type codes listed in the `serviceTypeCodes` array.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceType"
            },
            "type": "array"
          },
          "timeQualifier": {
            "$ref": "#/components/schemas/TimeQualifierName",
            "description": "The name of the `timeQualifierCode`.\n\nPayers may sometimes return other non-compliant values."
          },
          "timeQualifierCode": {
            "$ref": "#/components/schemas/TimeQualifierCode",
            "description": "Code indicating the time period for the benefit information. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#time-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "trailerLoopIdentifierCode": {
            "description": "The loop trailer identifier number in the `LE` segment of the original X12 EDI transaction.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitsInformationCode": {
        "description": "The code indicating the type of benefits information. Visit [Eligibility and benefit codes](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#benefit-type-codes) for more information.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "A",
          "B",
          "C",
          "CB",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "MC",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y"
        ],
        "type": "string"
      },
      "BenefitsInformationCoverageLevelCode": {
        "description": "Code indicating the level of coverage for the patient. \n\nThis will either be `CHD` - Children Only, `DEP` - Dependents Only, `ECH` - Employee and Children, `EMP` - Employee Only, `ESP` - Employee and Spouse, `FAM` - Family, `IND` - Individual, `SPC` - Spouse and Children, `SPO` - Spouse Only, or `Unknown`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "CHD",
          "DEP",
          "ECH",
          "EMP",
          "ESP",
          "FAM",
          "IND",
          "SPC",
          "SPO"
        ],
        "type": "string"
      },
      "BenefitsInformationCoverageLevelName": {
        "description": "The full name of the coverage level code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Children Only",
          "Dependents Only",
          "Employee and Children",
          "Employee Only",
          "Employee and Spouse",
          "Family",
          "Individual",
          "Spouse and Children",
          "Spouse Only"
        ],
        "type": "string"
      },
      "BenefitsInformationName": {
        "description": "The full name of the benefits information code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Active Coverage",
          "Active - Full Risk Capitation",
          "Active - Services Capitated",
          "Active - Services Capitated to Primary Care Physician",
          "Active - Pending Investigation",
          "Inactive",
          "Inactive - Pending Eligibility Update",
          "Inactive - Pending Investigation",
          "Co-Insurance",
          "Co-Payment",
          "Deductible",
          "Coverage Basis",
          "Benefit Description",
          "Exclusions",
          "Limitations",
          "Out of Pocket (Stop Loss)",
          "Unlimited",
          "Non-Covered",
          "Cost Containment",
          "Reserve",
          "Primary Care Provider",
          "Pre-existing Condition",
          "Managed Care Coordinator",
          "Services Restricted to Following Provider",
          "Not Deemed a Medical Necessity",
          "Benefit Disclaimer",
          "Second Surgical Opinion Required",
          "Other or Additional Payor",
          "Prior Year(s) History",
          "Card(s) Reported Lost/Stolen",
          "Contact Following Entity for Eligibility or Benefit Information",
          "Cannot Process",
          "Other Source of Data",
          "Health Care Facility",
          "Spend Down"
        ],
        "type": "string"
      },
      "BenefitsRelatedEntity": {
        "description": "Identify another entity associated with the eligibility or benefits. This could be a provider, an individual, an organization, or another payer.\n\nThis is where information for a crossover carrier such as Medicaid or Medicare is provided, if it's applicable to the patient and the payer supports it.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The address of the entity, such as a provider or organization."
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformation",
            "description": "The contact information for the entity, such as a phone number or email address."
          },
          "entityFirstname": {
            "description": "The first name of the entity, if the entity is a person.",
            "type": "string"
          },
          "entityIdentification": {
            "$ref": "#/components/schemas/BenefitRelatedEntityIdentification",
            "description": "Code identifying the type of identifier in the `entityIdentificationValue` property. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#identification-code-qualifiers) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "entityIdentificationValue": {
            "description": "The identification number for the entity, qualified by the code in `entityIdentification`.",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/RelatedEntityIdentifierName",
            "description": "Code identifying an organizational entity, a physical location, property, or individual. When set to `Party Performing Verification` for a BCBS payer, this is the patient's home plan.\n\nPayers may sometimes return other non-compliant values."
          },
          "entityMiddlename": {
            "description": "The middle name or initial of the entity, if the entity is a person.",
            "type": "string"
          },
          "entityName": {
            "description": "The last name (if the entity is a person) or the business name (if the entity is an organization).",
            "type": "string"
          },
          "entityRelationship": {
            "$ref": "#/components/schemas/BenefitsRelatedEntityRelationshipCode",
            "description": "Code specifying the relationship between the entity and the patient. Can be `01` - Parent, `02` - Child, `27` - Domestic Partner, `41` - Spouse, `48` - Employee, `65` - Other, or `72` - Unknown.\n\nPayers may sometimes return other non-compliant values."
          },
          "entitySuffix": {
            "description": "The name suffix, such as Sr. Jr. or III.",
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier"
          },
          "providerInformation": {
            "$ref": "#/components/schemas/ProviderInformation"
          }
        },
        "type": "object"
      },
      "BenefitsRelatedEntityRelationshipCode": {
        "description": "Code specifying the relationship between the entity and the patient.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "01",
          "02",
          "27",
          "41",
          "48",
          "65",
          "72"
        ],
        "type": "string"
      },
      "BenefitsServiceDelivery": {
        "description": "The delivery or usage pattern for the benefits.",
        "properties": {
          "deliveryOrCalendarPatternCode": {
            "$ref": "#/components/schemas/DeliveryOrCalendarPatternQualifier"
          },
          "deliveryOrCalendarPatternQualifier": {
            "$ref": "#/components/schemas/DeliveryOrCalendarPatternQualifier"
          },
          "deliveryOrCalendarPatternQualifierCode": {
            "$ref": "#/components/schemas/DeliveryOrCalendarPatternQualifierCode"
          },
          "deliveryPatternTimeCode": {
            "$ref": "#/components/schemas/DeliveryPatternTimeQualifier"
          },
          "deliveryPatternTimeQualifier": {
            "$ref": "#/components/schemas/DeliveryPatternTimeQualifier"
          },
          "deliveryPatternTimeQualifierCode": {
            "$ref": "#/components/schemas/DeliveryPatternTimeQualifierCode",
            "description": "Code specifying the time for routine shipments or deliveries. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#delivery-pattern-time-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "numOfPeriods": {
            "description": "The number of periods in the time period. For example, `12` when the `timePeriodQualifier` is `Hour`.",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the benefit. For example, `10` when the `quantityQualifier` is `Visits`.",
            "type": "string"
          },
          "quantityQualifier": {
            "$ref": "#/components/schemas/BenefitsServiceDeliveryQuantityQualifier",
            "description": "The name of the `quantityQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values."
          },
          "quantityQualifierCode": {
            "$ref": "#/components/schemas/BenefitsServiceDeliveryQuantityQualifierCode",
            "description": "Code specifying the type of quantity for the benefit. Can be `DY` - Days, `FL` - Units, `HS` - Hours, `MN` - Month, and `VS` - Visits.\n\nPayers may sometimes return other non-compliant values."
          },
          "sampleSelectionModulus": {
            "description": "Specifies the sampling frequency, based on the unit of measure. For example `every 2 months` or `once per calendar year`.",
            "type": "string"
          },
          "timePeriodQualifier": {
            "$ref": "#/components/schemas/TimePeriodQualifier",
            "description": "The name of the `timePeriodQualifierCode`. For example, `Calendar Year`.\n\nPayers may sometimes return other non-compliant values."
          },
          "timePeriodQualifierCode": {
            "$ref": "#/components/schemas/TimePeriodQualifierCode",
            "description": "Code specifying the time period for the benefit information. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#time-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "unitForMeasurementCode": {
            "$ref": "#/components/schemas/UnitForMeasurement",
            "deprecated": true
          },
          "unitForMeasurementQualifier": {
            "$ref": "#/components/schemas/UnitForMeasurement",
            "description": "The name of the `unitForMeasurementQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values."
          },
          "unitForMeasurementQualifierCode": {
            "$ref": "#/components/schemas/UnitForMeasurementCode",
            "description": "Code specifying the unit of measurement. For example, `DA` - Days, `MO` - Months, `VS` - Visits, `WK` - Week, and `YR` - Years.\n\nPayers may sometimes return other non-compliant values."
          }
        },
        "type": "object"
      },
      "BenefitsServiceDeliveryQuantityQualifier": {
        "description": "The name of the `quantityQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Days",
          "Units",
          "Hours",
          "Month",
          "Visits"
        ],
        "type": "string"
      },
      "BenefitsServiceDeliveryQuantityQualifierCode": {
        "description": "Code specifying the type of quantity.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "DY",
          "FL",
          "HS",
          "MN",
          "VS"
        ],
        "type": "string"
      },
      "CodeListQualifierCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "GR",
          "NI",
          "ZZ"
        ],
        "type": "string"
      },
      "CommunicationMode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "Electronic Data Interchange Access Number",
          "Electronic Mail",
          "Facsimile",
          "Telephone",
          "Uniform Resource Locator (URL)",
          "Telephone Extension",
          "Work Phone Number"
        ],
        "type": "string"
      },
      "CompositeMedicalProcedureIdentifier": {
        "description": "Identifies relevant medical procedures by their standard codes and modifiers (if applicable).",
        "properties": {
          "diagnosisCodePointer": {
            "description": "The diagnosis code pointer.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "procedureCode": {
            "description": "The procedure code. Many payers do not support eligibility checks for specific procedure codes. If the payer does not support procedure codes, they return a generic benefits response for the service type code `30`.",
            "type": "string"
          },
          "procedureModifiers": {
            "description": "Procedure modifiers that provides additional information related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "productOrServiceID": {
            "description": "The product or service ID. This value represents the end of the range of applicable procedure codes. The beginning of the range is listed in `procedureCode`.",
            "type": "string"
          },
          "productOrServiceIdQualifier": {
            "description": "The name of the `productOrServiceIdQualifierCode`. For example, `American Dental Association`.",
            "type": "string"
          },
          "productOrServiceIdQualifierCode": {
            "description": "Identifies the external code list used to provide the specified procedure or service codes. Can be `AD` - American Dental Association, `CJ` - Current Procedural Terminology (CPT) codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `ID` - International Classification of Diseases 9th Revision, Clinical Modification (ICD-9-CM) - Procedure, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, `N4` - National Drug Code in 5-4-2 Format, or `ZZ` - Mutually Defined",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactInformation": {
        "properties": {
          "contacts": {
            "description": "The contact information.",
            "items": {
              "$ref": "#/components/schemas/Contacts"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the contact person.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Contacts": {
        "description": "Contacts",
        "properties": {
          "communicationMode": {
            "$ref": "#/components/schemas/CommunicationMode",
            "description": "The type of communication number provided.\n\nPayers may sometimes return other non-compliant values."
          },
          "communicationNumber": {
            "description": "The communication number referenced in `communicationMode`. It includes the country or area code when applicable. \n \n Note that phone numbers are formatted as AAABBBCCCC, where AAA represents the area code, BBB represents the telephone number prefix, and CCCC represents the telephone number. Phone numbers are provided without separators, such as dashes or parentheses. For example, `5551123345` for `555-112-3345`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTimePeriodFormatQualifier": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "D8",
          "RD8"
        ],
        "type": "string"
      },
      "DeliveryOrCalendarPatternQualifier": {
        "description": "The name of the `deliveryOrCalendarPatternCode`. For example, `Last Working Day of Period`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1st Week of the Month",
          "2nd Week of the Month",
          "3rd Week of the Month",
          "4th Week of the Month",
          "5th Week of the Month",
          "1st & 3rd Week of the Month",
          "2nd & 4th Week of the Month",
          "1st Working Day of Period",
          "Last Working Day of Period",
          "Monday through Friday",
          "Monday through Saturday",
          "Monday through Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Sunday",
          "Monday through Thursday",
          "Immediately",
          "As Directed",
          "Daily Mon. Through Fri.",
          "1/2 Mon. & 1/2 Tues.",
          "1/2 Tues. & 1/2 Thurs.",
          "1/2 Wed. & 1/2 Fri.",
          "Once Anytime Mon. through Fri.",
          "Tuesday through Friday",
          "Monday, Tuesday and Thursday",
          "Monday, Tuesday and Friday",
          "Wednesday and Thursday",
          "Monday, Wednesday and Thursday",
          "Tuesday, Thursday and Friday",
          "1/2 Tues. & 1/2 Fri.",
          "1/2 Mon. & 1/2 Wed.",
          "1/3 Mon., 1/3 Wed., 1/3 Fri.",
          "Whenever Necessary",
          "1/2 By Wed. Bal. By Fri.",
          "None (Also Used to Cancel or Override a Previous Pattern)"
        ],
        "type": "string"
      },
      "DeliveryOrCalendarPatternQualifierCode": {
        "description": "Code that specifies the routine shipments, deliveries, or calendar pattern. For example `9` - Last Working Day of Period. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#delivery-frequency-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "SG",
          "SL",
          "SP",
          "SX",
          "SY",
          "SZ",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y"
        ],
        "type": "string"
      },
      "DeliveryPatternTimeQualifier": {
        "description": "The name of the `deliveryPatternTimeCode`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1st Shift (Normal Working Hours)",
          "2nd Shift",
          "3rd Shift",
          "A.M.",
          "P.M.",
          "As Directed",
          "Any Shift",
          "None (Also Used to Cancel or Override a Previous Pattern)"
        ],
        "type": "string"
      },
      "DeliveryPatternTimeQualifierCode": {
        "description": "A code specifying the time for routine shipments or deliveries.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "Y"
        ],
        "type": "string"
      },
      "DependentInsuredIndicator": {
        "description": "Indicates the status of the insured. For the dependent, this is always `N`.",
        "enum": [
          "N"
        ],
        "type": "string"
      },
      "DependentRelationship": {
        "description": "The name of the `relationToSubscriberCode`. For example, `Child` when the code is `19`.",
        "enum": [
          "Spouse",
          "Child",
          "Employee",
          "Unknown",
          "Organ Donor",
          "Cadaver Donor",
          "Life Partner",
          "Other Relationship"
        ],
        "type": "string"
      },
      "DependentRelationshipCode": {
        "description": "For the dependent, this can be `01` - Spouse, `19` - Child, `20` Employee, `21` - Unknown, `39` - Organ Donor, `40` - Cadaver Donor, `53` - Life Partner, or `G8` - Other Relationship.",
        "enum": [
          "01",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8",
          "Unknown"
        ],
        "type": "string"
      },
      "DiagnosisTypeCode": {
        "description": "The type of diagnosis code you are providing. You can set to `BK` - International Classification of Diseases Clinical Modification (ICD-9-CM) Principal Diagnosis, `ABK` - International Classification of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis, `BF`- International Classification of Diseases Clinical Modification (ICD-9-CM) Diagnosis, or `ABF`- International Classification of Diseases Clinical Modification (ICD-10-CM) Diagnosis. \n\n Note that ICD-9 codes are **deprecated** and should no longer be used in eligibility checks.",
        "enum": [
          "BK",
          "ABK",
          "BF",
          "ABF"
        ],
        "type": "string"
      },
      "DtpDate": {
        "properties": {
          "date": {
            "description": "A single date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endDate": {
            "description": "The end date of a range.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "startDate": {
            "description": "The beginning date of a range.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityAdditionalInformation": {
        "properties": {
          "codeCategory": {
            "$ref": "#/components/schemas/InjuryCodeCategory",
            "description": "The code category. Always set to `44` - Nature of Injury.\n\nPayers may sometimes return other non-compliant values."
          },
          "codeListQualifier": {
            "description": "The name of the `codeListQualifierCode`. For example `Mutually Defined` when the code is set to `ZZ`.",
            "type": "string"
          },
          "codeListQualifierCode": {
            "$ref": "#/components/schemas/CodeListQualifierCode",
            "description": "Identifies a specific industry code list. Can be `GR` - National Council on Compensation Insurance (NCCI) Nature of Injury Code, `NI` - Nature of Injury Code, or `ZZ` - Mutually Defined.\n\n When this is set to `ZZ`, the `industryCode` property will be set to a place of service code.\n\nPayers may sometimes return other non-compliant values."
          },
          "industry": {
            "description": "The name of the `industryCode`. For example `Pharmacy` when the code is `01`.",
            "type": "string"
          },
          "industryCode": {
            "description": "The specific industry code. When `codeListQualifierCode` is set to `ZZ` - Mutually Defined, this property will be set to a place of service code. Visit the [Place of Service Code Set](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list of these codes and their descriptions.",
            "type": "string"
          },
          "injuredBodyPartName": {
            "description": "Description of injured body parts.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckDependentError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `subscriber` or `dependent` level include missing or incorrect identifying information and that the payer was unable to locate the patient in their system. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckDependentErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckProviderAndMemberFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckDependentErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "15",
          "33",
          "35",
          "42",
          "43",
          "45",
          "47",
          "48",
          "49",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "77",
          "98",
          "AA",
          "AE",
          "AF",
          "AG",
          "AO",
          "CI",
          "E8",
          "IA",
          "MA"
        ],
        "type": "string"
      },
      "EligibilityCheckError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more AAA errors that specify the reasons for the rejection and any recommended follow-up actions. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckErrorCode",
            "description": "The error code. Visit [Eligibility troubleshooting](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) for a complete list of all possible error codes and descriptions.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckErrorCode": {
        "description": "This is a superset of all the possible codes in the sub-loops, as all errors are bubbled up to the top level of the response\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "04",
          "15",
          "33",
          "35",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "97",
          "98",
          "AA",
          "AE",
          "AF",
          "AG",
          "AO",
          "CI",
          "E8",
          "IA",
          "MA",
          "T4"
        ],
        "type": "string"
      },
      "EligibilityCheckFollowupAction": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "Please Correct and Resubmit",
          "Resubmission Not Allowed",
          "Please Resubmit Original Transaction",
          "Resubmission Allowed",
          "Do Not Resubmit; Inquiry Initiated to a Third Party",
          "Please Wait 30 Days and Resubmit",
          "Please Wait 10 Days and Resubmit",
          "Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly"
        ],
        "type": "string"
      },
      "EligibilityCheckPayerError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `payer` level include issues with payer enrollment and that the payer's system is down or experiencing issues. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckPayerErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckPayerErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "04",
          "41",
          "42",
          "79",
          "80",
          "T4"
        ],
        "type": "string"
      },
      "EligibilityCheckProviderAndMemberFollowupAction": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "Please Correct and Resubmit",
          "Resubmission Not Allowed",
          "Resubmission Allowed",
          "Do Not Resubmit; Inquiry Initiated to a Third Party",
          "Please Wait 30 Days and Resubmit",
          "Please Wait 10 Days and Resubmit",
          "Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly"
        ],
        "type": "string"
      },
      "EligibilityCheckProviderError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `provider` level include missing or incorrect information and issues with the provider's NPI registration with the payer. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckProviderErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckProviderAndMemberFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckProviderErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "15",
          "41",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "50",
          "51",
          "79",
          "97",
          "T4"
        ],
        "type": "string"
      },
      "EligibilityCheckSubscriberError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `subscriber` or `dependent` level include missing or incorrect identifying information and that the payer was unable to locate the patient in their system. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckSubscriberErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckProviderAndMemberFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckSubscriberErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "15",
          "33",
          "35",
          "42",
          "43",
          "45",
          "47",
          "48",
          "49",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "63",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "78",
          "98",
          "AA",
          "AE",
          "AF",
          "AG",
          "AO",
          "CI",
          "E8",
          "IA",
          "MA"
        ],
        "type": "string"
      },
      "EligibilityMetaDataJSON": {
        "description": "Metadata about the response. Stedi uses this data for tracking and troubleshooting.",
        "properties": {
          "applicationMode": {
            "$ref": "#/components/schemas/ApplicationModes",
            "description": "The type of data in the request. This is either `production` when you send a request with a standard API key or `test` when you send a request in test mode with a [test API key](https://www.stedi.com/docs/api-reference/index#api-key-types). The `information` value is not currently used.\n\nPayers may sometimes return other non-compliant values."
          },
          "billerId": {
            "description": "The biller ID Stedi assigns to this request.",
            "type": "string"
          },
          "outboundTraceId": {
            "description": "The unique ID Stedi assigns to this request.",
            "type": "string"
          },
          "senderId": {
            "description": "The sender ID Stedi assigns to this request.",
            "type": "string"
          },
          "submitterId": {
            "description": "The submitter ID Stedi assigns to this request.",
            "type": "string"
          },
          "traceId": {
            "description": "The transaction identifier the payer sends in the response. This should be the same as the `outboundTraceId`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmploymentStatusCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "AE",
          "AO",
          "AS",
          "AT",
          "AU",
          "CC",
          "DD",
          "HD",
          "IR",
          "LX",
          "PE",
          "RE",
          "RM",
          "RR",
          "RU"
        ],
        "type": "string"
      },
      "Encounter": {
        "description": "Details about the eligibility or benefit information you are requesting for the patient.\n- If you don't specify either `serviceTypeCodes` or a `procedureCode` and `productOrServiceIDQualifier`, Stedi defaults to using `30` (Plan coverage and general benefits) as the only `serviceTypeCodes` value.\n- You can specify either a single `dateOfService` or a `beginningDateOfService` and `endDateOfService`. The payer defaults to using the current date in their timezone if you don't include one.\n- When checking eligibility for today, omit the `dateOfService` property to ensure consistent behavior across payers.\n- We recommend submitting dates up to 12 months in the past or up to the end of the current month. Payers aren't required to support dates outside these ranges. However, some payers such as the Centers for Medicare and Medicaid Services (CMS) do support requests for dates further in the future - especially the next calendar month. Check the payer's documentation to determine their specific behavior.",
        "properties": {
          "beginningDateOfService": {
            "description": "The beginning date of service. If you include this value, you must also include the `endDateOfService`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateOfService": {
            "description": "The date of service. You can use this value to specify a single occasion, such as a doctor's visit. If you don't specify a service date (either a single day or a range of dates), the payer defaults to using the current date in their timezone.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "diagnosisCodePointer": {
            "description": "Diagnosis code pointers in order of importance to the service. These pointers are an index to the ICD-10 codes you included in the `subscriber.healthCareCodeInformation` or `dependents.healthCareCodeInformation` object arrays. The pointer values can be from 1 - 8 (integer numbers). If you are including diagnosis codes, you **must** set at least one pointer here for the primary diagnosis. Then, you can add up to three additional pointers (up to four in total). Don't put ICD-10 codes here.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "endDateOfService": {
            "description": "The end date of service. If you include this value, you must also include the `beginningDateOfService`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/IndustryCode"
          },
          "medicalProcedures": {
            "description": "Use only when you need to send multiple procedure codes in a single request. Otherwise, use the `encounter.procedureCode` and `encounter.productOrServiceIDQualifier` properties.",
            "items": {
              "$ref": "#/components/schemas/MedicalProcedure"
            },
            "maxItems": 98,
            "minItems": 1,
            "type": "array"
          },
          "priorAuthorizationOrReferralNumber": {
            "description": "The prior authorization or referral number for a particular benefit or procedure.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string"
          },
          "procedureModifiers": {
            "description": "The procedure modifier that provides additional information related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/EncounterProductOrServiceIDQualifier"
          },
          "referenceIdentificationQualifier": {
            "$ref": "#/components/schemas/EncounterReferenceIdentificationQualifier"
          },
          "serviceTypeCodes": {
            "description": "One or more codes classifying the type of services for which you want to receive benefits information.\n\nIf you don't specify a service type code or a `procedureCode` and `productOrServiceIDQualifier`, Stedi defaults to using `30` - Health Benefit Plan Coverage. Visit [Service Type Codes](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#full-stc-list) for a complete list.\n\nNot all payers support all service type codes, and not all payers support multiple service type codes in the same request. We recommend including one service type code per request unless you're sure the payer supports multiple.\n\nPayers aren't required to respond with exactly the same STC(s) in the response, so you may receive benefits information for STCs you didn't request. However, receiving different STCs can mean that the payer is ignoring the STC you sent, which is why we recommend [testing payers](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#test-payer-stc-support) to determine their support for specific STCs.",
            "items": {
              "$ref": "#/components/schemas/RequestEligibilityServiceTypeCode"
            },
            "maxItems": 99,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EncounterProductOrServiceIDQualifier": {
        "description": "Code identifying the type/source of the `procedureCode`. You can set this to `AD` - American Dental Association Codes, `CJ` - Current Procedural Terminology (CPT) Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `ID` - International Classification of Diseases, 9th Revision, Clinical Modification (ICD-9-CM) - Procedure, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, `N4` - National Drug Code in 5-4-2 Format, or `ZZ` - Mutually Defined.",
        "enum": [
          "AD",
          "CJ",
          "HC",
          "ID",
          "IV",
          "N4",
          "ZZ"
        ],
        "type": "string"
      },
      "EncounterReferenceIdentificationQualifier": {
        "description": "The type of information you provided in the `priorAuthorizationOrReferralNumber` property. You can set this to `9F` - Referral Number or `G1` - Prior Authorization Number.",
        "enum": [
          "9F",
          "G1"
        ],
        "type": "string"
      },
      "EntityTypeQualifier": {
        "description": "The type of entity.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Person",
          "Non-Person Entity"
        ],
        "type": "string"
      },
      "Gender": {
        "enum": [
          "M",
          "F"
        ],
        "type": "string"
      },
      "GenderWithUnknown": {
        "enum": [
          "M",
          "F",
          "U"
        ],
        "type": "string"
      },
      "GovernmentServiceAffiliationCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "Q",
          "R",
          "S",
          "U",
          "W"
        ],
        "type": "string"
      },
      "HealthCareDiagnosisCode": {
        "description": "Information about the patient's healthcare diagnosis.",
        "properties": {
          "diagnosisCode": {
            "description": "The diagnosis code. The decimal points are omitted in diagnosis codes - the decimal point is assumed.",
            "type": "string"
          },
          "diagnosisTypeCode": {
            "description": "The type of diagnosis code provided. It can be `ABK` - International Classification of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis or `BK` - International Classification of Diseases Clinical Modification (ICD-9-CM) Principal Diagnosis.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HealthCareInformation": {
        "properties": {
          "diagnosisCode": {
            "description": "The diagnosis code. Omit the decimal points in diagnosis codes - the decimal point is assumed.",
            "maxLength": 30,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "diagnosisTypeCode": {
            "$ref": "#/components/schemas/DiagnosisTypeCode"
          }
        },
        "required": [
          "diagnosisCode",
          "diagnosisTypeCode"
        ],
        "type": "object"
      },
      "InPlanNetworkIndicatorCode": {
        "description": "Code indicating whether the benefit is in-network or out-of-network. Can be `Y` - Yes, `N` - No, `U` - Unknown, or `W` - Not Applicable\n\n Code `U` indicates that it is unknown whether the benefits are in or out-of-network. Code `W` indicates that the benefit applies to both in and out-of-network providers. \n \n Note that this property **doesn't indicate** whether the provider is in or out-of-network for the patient. To determine that, you must check with the payer directly.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Y",
          "N",
          "U",
          "W"
        ],
        "type": "string"
      },
      "InPlanNetworkIndicatorName": {
        "description": "The name of the in-plan network indicator code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Yes",
          "No",
          "Unknown",
          "Not Applicable"
        ],
        "type": "string"
      },
      "IndividualRelationshipCode": {
        "description": "The dependent's relationship to the subscriber. You can set this to `01` - Spouse, `19` - Child, `34` - Other Adult.",
        "enum": [
          "01",
          "19",
          "34"
        ],
        "type": "string"
      },
      "IndustryCode": {
        "description": "The type of facility where the service was provided. You can set this to one of the [place of service codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets).",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "31",
          "32",
          "33",
          "34",
          "41",
          "42",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "65",
          "71",
          "72",
          "81",
          "99"
        ],
        "type": "string"
      },
      "InfallibleStateOrProvinceCode": {
        "description": "The US state or Canadian province code with unknown option. For example, `TN` for Tennessee or `NB` for New Brunswick.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "NL",
          "PE",
          "NS",
          "NB",
          "QC",
          "ON",
          "MB",
          "SK",
          "AB",
          "BC",
          "YT",
          "NT",
          "NU",
          "DC",
          "AS",
          "GU",
          "MP",
          "PR",
          "UM",
          "VI",
          "AK",
          "AL",
          "AR",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DE",
          "FL",
          "GA",
          "HI",
          "IA",
          "ID",
          "IL",
          "IN",
          "KS",
          "KY",
          "LA",
          "MA",
          "MD",
          "ME",
          "MI",
          "MN",
          "MO",
          "MS",
          "MT",
          "NC",
          "ND",
          "NE",
          "NH",
          "NJ",
          "NM",
          "NV",
          "NY",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VA",
          "VT",
          "WA",
          "WI",
          "WV",
          "WY"
        ],
        "type": "string"
      },
      "InformationReceiverName": {
        "deprecated": true,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "deprecated": true
          },
          "contactNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "devicePinNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facilityIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facilityNetworkIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "federalTaxpayerIdentificationNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "informationReceiverAdditionalIdentifierState": {
            "deprecated": true,
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "medicaidProviderNumber": {
            "deprecated": true,
            "description": "The provider's Medicaid provider number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicareProviderNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "nationalProviderIdentifier": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "priorIdentifierNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "providerPlanNetworkIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "socialSecurityNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "stateLicenceNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "submitterIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InformationStatusCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "A",
          "C",
          "L",
          "O",
          "P",
          "S",
          "T"
        ],
        "type": "string"
      },
      "InjuryCodeCategory": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "44"
        ],
        "type": "string"
      },
      "InsuranceTypeCode": {
        "description": "Code identifying the type of insurance policy.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "12",
          "13",
          "14",
          "15",
          "16",
          "41",
          "42",
          "43",
          "47",
          "AP",
          "C1",
          "CO",
          "CP",
          "D",
          "DB",
          "EP",
          "FF",
          "GP",
          "HM",
          "HN",
          "HS",
          "IN",
          "IP",
          "LC",
          "LD",
          "LI",
          "LT",
          "MA",
          "MB",
          "MC",
          "MH",
          "MI",
          "MP",
          "OT",
          "PE",
          "PL",
          "PP",
          "PR",
          "PS",
          "QM",
          "RP",
          "SP",
          "TF",
          "WC",
          "WU"
        ],
        "type": "string"
      },
      "InsuranceTypeName": {
        "description": "The full name of the insurance type code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Medicare Secondary Working Aged Beneficiary or Spouse with Employer Group Health Plan",
          "Medicare Secondary End-Stage Renal Disease Beneficiary in the Mandated Coordination Period with an Employer's Group Health Plan",
          "Medicare Secondary, No-fault Insurance including Auto is Primary",
          "Medicare Secondary Worker's Compensation",
          "Medicare Secondary Public Health Service (PHS)or Other Federal Agency",
          "Medicare Secondary Black Lung",
          "Medicare Secondary Veteran's Administration",
          "Medicare Secondary Disabled Beneficiary Under Age 65 with Large Group Health Plan (LGHP)",
          "Medicare Secondary, Other Liability Insurance is Primary",
          "Auto Insurance Policy",
          "Commercial",
          "Consolidated Omnibus Budget Reconciliation Act (COBRA)",
          "Medicare Conditionally Primary",
          "Disability",
          "Disability Benefits",
          "Exclusive Provider Organization",
          "Family or Friends",
          "Group Policy",
          "Health Maintenance Organization (HMO)",
          "Health Maintenance Organization (HMO) - Medicare Risk",
          "Special Low Income Medicare Beneficiary",
          "Indemnity",
          "Individual Policy",
          "Long Term Care",
          "Long Term Policy",
          "Life Insurance",
          "Litigation",
          "Medicare Part A",
          "Medicare Part B",
          "Medicaid",
          "Medigap Part A",
          "Medigap Part B",
          "Medicare Primary",
          "Other",
          "Property Insurance - Personal",
          "Personal",
          "Personal Payment (Cash - No Insurance)",
          "Preferred Provider Organization (PPO)",
          "Point of Service (POS)",
          "Qualified Medicare Beneficiary",
          "Property Insurance - Real",
          "Supplemental Policy",
          "Tax Equity Fiscal Responsibility Act (TEFRA)",
          "Workers Compensation",
          "Wrap Up Policy"
        ],
        "type": "string"
      },
      "InternalFailureExceptionResponseContent": {
        "description": "The server response when an unexpected error occurred while processing request.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "MaintenanceReasonCode": {
        "description": "Code identifying the reason for the changes to subscriber identifying information, such as name, date of birth, or address. This is always `25`\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "25"
        ],
        "type": "string"
      },
      "MaintenanceTypeCode": {
        "description": "The maintenance type code. Used to acknowledge a change in the identifying elements for the subscriber from those submitted in the original eligibility check request. It can also be included when the payer used the birth sequence number from the original request to locate the subscriber in their system. This is always `001`\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "001"
        ],
        "type": "string"
      },
      "MedicalProcedure": {
        "properties": {
          "diagnosisCodePointer": {
            "description": "The diagnosis code pointer.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string"
          },
          "procedureModifiers": {
            "description": "Procedure modifiers that provide additional information related to the service.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/MedicalProcedureProductOrServiceIDQualifier"
          }
        },
        "required": [
          "procedureCode",
          "productOrServiceIDQualifier"
        ],
        "type": "object"
      },
      "MedicalProcedureProductOrServiceIDQualifier": {
        "description": "Code identifying the type/source of the `procedureCode`. You can set this to `AD` - American Dental Association Codes, `CJ` - Current Procedural Terminology (CPT) Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `ID` - International Classification of Diseases, 9th Revision, Clinical Modification (ICD-9-CM) - Procedure, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, `N4` - National Drug Code in 5-4-2 Format, or `ZZ` - Mutually Defined.",
        "enum": [
          "AD",
          "CJ",
          "HC",
          "ID",
          "IV",
          "N4",
          "ZZ"
        ],
        "type": "string"
      },
      "MilitaryServiceRankCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "A1",
          "A2",
          "A3",
          "B1",
          "B2",
          "C1",
          "C2",
          "C3",
          "C4",
          "C5",
          "C6",
          "C7",
          "C8",
          "C9",
          "E1",
          "F1",
          "F2",
          "F3",
          "F4",
          "G1",
          "G4",
          "L1",
          "L2",
          "L3",
          "L4",
          "L5",
          "L6",
          "M1",
          "M2",
          "M3",
          "M4",
          "M5",
          "M6",
          "P1",
          "P2",
          "P3",
          "P4",
          "P5",
          "R1",
          "R2",
          "S1",
          "S2",
          "S3",
          "S4",
          "S5",
          "S6",
          "S7",
          "S8",
          "S9",
          "SA",
          "SB",
          "SC",
          "T1",
          "V1",
          "W1"
        ],
        "type": "string"
      },
      "Payer": {
        "description": "Information about the payer providing the benefits information. The response will always include the payer's business name and an identifier, such as the payer's tax ID. Most payers also include contact information.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckPayerError"
            },
            "type": "array"
          },
          "centersForMedicareAndMedicaidPlanId": {
            "description": "The payer's Centers for Medicare and Medicaid Services PlanID.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformation",
            "description": "The payer's contact information.\n\nNote that when `contacts.communicationMode` is set to `UR`, the `communicationNumber` property may not contain a valid URL. Most payers provide a partial web address for their provider portal, or something similar, such as `www.example.com/portal`. You must add the appropriate scheme and separators, such as `https://` or `http://`, to make it a valid URL."
          },
          "employersId": {
            "deprecated": true,
            "description": "Deprecated; The payer's identification number for the entity receiving the benefits information.\nThis shape is deprecated: This property is no longer used.",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/PayerEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type qualifier for the payer. Can be set to `Person` (not commonly used) or `Non-Person Entity` (most common).\n\nPayers may sometimes return other non-compliant values."
          },
          "etin": {
            "description": "The payer's Electronic Transmitter Identification Number (ETIN).",
            "type": "string"
          },
          "federalTaxpayersIdNumber": {
            "description": "The payer's federal taxpayer's identification number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "firstName": {
            "description": "The payer's first name, when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "lastName": {
            "description": "The payer's last name. Used when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "middleName": {
            "description": "The payer's middle name or initial, when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "naic": {
            "description": "The payer's National Association of Insurance Commissioners (NAIC) identification number.",
            "type": "string"
          },
          "name": {
            "description": "The payer's business name, when the payer is not a person.",
            "type": "string"
          },
          "npi": {
            "description": "The payer's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "payorIdentification": {
            "description": "The payor identification.",
            "type": "string"
          },
          "suffix": {
            "description": "The payer's name suffix, such as Jr. or III. Used when the payer is an individual (not commonly used).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayerEntityIdentifier": {
        "description": "The entity identifier code for the payer.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Third-Party Administrator",
          "Employer",
          "Gateway Provider",
          "Plan Sponsor",
          "Payer"
        ],
        "type": "string"
      },
      "PlanDateInformation": {
        "description": "Contains the dates associated with the subscriber and dependents' (if applicable) insurance plan. This information is used to determine their eligibility for benefits.\n- Most fields contain a single date, but some can contain either a single date or a date range. Each field's documentation specifies its format.\n- Fields that can contain either a single date or date range include: `plan`, `eligibility`, `planBegin`, `admission`, and `service`.\n- The provided dates apply to every benefit within the patient's health plan unless specifically noted within a `benefitsInformation.benefitsDateInformation` object.\n- If the payer sends back date(s) that are different for the subscriber and dependents, Stedi includes only the dates for the dependent in this object and omits the subscriber's date(s). Dependents can have different coverage dates than the subscriber due to qualifying life events, such as starting a new job or passing the age limit for coverage through their parent's plan.\n- Most payers return either `plan` or `planBegin` and `planEnd`, but the exact dates returned depend on the payer's discretion and the patient's insurance plan.\n- If the date of service is after the earliest ending `plan`, `eligibility`, `planEnd`, `eligibilityEnd`, `policyEffective`, or `policyExpiration` value, the patient likely doesn't have active coverage.",
        "properties": {
          "added": {
            "description": "Added date. Payers may return this information in the case of retroactive eligibility.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admission": {
            "description": "The admission date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefit": {
            "deprecated": true,
            "description": "The benefit date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitBegin": {
            "deprecated": true,
            "description": "The benefit begin date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitEnd": {
            "deprecated": true,
            "description": "The benefit end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "certification": {
            "description": "The certification date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraBegin": {
            "description": "The date when COBRA coverage begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraEnd": {
            "description": "The date when COBRA coverage ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "completion": {
            "deprecated": true,
            "description": "The completion date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "coordinationOfBenefits": {
            "deprecated": true,
            "description": "The coordination of benefits date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfDeath": {
            "description": "The date of death. Payers may return this information in the case of a deceased subscriber or dependent.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfLastUpdate": {
            "description": "The date when the plan information was last updated.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharge": {
            "description": "The discharge date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "effectiveDateOfChange": {
            "description": "The effective date of change.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibility": {
            "description": "Plan eligibility dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityBegin": {
            "description": "The date when the patient is first eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityEnd": {
            "description": "The date when the patient is no longer eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "enrollment": {
            "description": "The date when the patient is enrolled in the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "issue": {
            "description": "The issue date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "latestVisitOrConsultation": {
            "deprecated": true,
            "description": "The latest visit or consultation date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodEnd": {
            "deprecated": true,
            "description": "The end of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodStart": {
            "deprecated": true,
            "description": "The start of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "plan": {
            "description": "Plan effective dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planBegin": {
            "description": "The date coverage from the plan begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planEnd": {
            "description": "The date coverage from the plan ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyEffective": {
            "description": "The date when the policy becomes effective.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyExpiration": {
            "description": "The date when the policy expires.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateBegin": {
            "description": "The start of the period when the plan premium was paid in full.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateEnd": {
            "description": "The end of period when the plan premium payments are up-to-date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "primaryCareProvider": {
            "deprecated": true,
            "description": "The primary care provider date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "service": {
            "description": "The service date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "status": {
            "description": "The status date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanInformation": {
        "description": "Additional identification for the subscriber's healthcare plan.",
        "properties": {
          "agencyClaimNumber": {
            "description": "The agency claim number, only used when the information source is a Property and Casualty payer.",
            "type": "string"
          },
          "alternativeListId": {
            "description": "The alternative list ID - identifies a list of alternative drugs with the associated formulary status for the patient.",
            "type": "string"
          },
          "caseNumber": {
            "description": "The case number",
            "type": "string"
          },
          "centersForMedicareAndMedicaidServicesNPI": {
            "description": "The [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned by the Centers for Medicare and Medicaid Services",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "classOfContractCode": {
            "description": "The class of contract code - used to identify the applicable class of contract for claims processing.",
            "type": "string"
          },
          "contractNumber": {
            "description": "The contract number of a contract between the payer and the provider that requested the eligibility check.",
            "type": "string"
          },
          "coverageListId": {
            "description": "The coverage list ID - identifies a list of drugs that have coverage limitations for the patient.",
            "type": "string"
          },
          "drugFormularyNumber": {
            "description": "The drug formulary number",
            "type": "string"
          },
          "electronicDevicePin": {
            "description": "The electronic device pin number",
            "type": "string"
          },
          "eligibilityCategory": {
            "description": "The eligibility category",
            "type": "string"
          },
          "facilityIdNumber": {
            "description": "The facility ID number",
            "type": "string"
          },
          "facilityNetworkIdentificationNumber": {
            "description": "The facility network identification number",
            "type": "string"
          },
          "familyUnitNumber": {
            "description": "The family unit number",
            "type": "string"
          },
          "federalTaxpayersIdentificationNumber": {
            "description": "The federal taxpayer's identification number",
            "type": "string"
          },
          "groupDescription": {
            "description": "The group description",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number",
            "type": "string"
          },
          "hicNumber": {
            "description": "The health insurance claim number (HICN). Note that CMS previously used the HICN to uniquely identify Medicare beneficiaries. However, they have since transitioned to a new, randomized Medicare Beneficiary Identifier (MBI) format. The HICN is no longer used for Medicare transactions but this property is now used by some payers to return MBI. If you receive a value in this property that matches the format specified in the [Medicare Beneficiary Identifier documentation](https://www.cms.gov/training-education/partner-outreach-resources/new-medicare-card/medical-beneficiary-identifiers-mbis), the number is likely an MBI and we recommend sending a follow-up eligibility check to CMS for additional benefits data. This most commonly occurs with patients who are covered by both Medicare and Medicaid.",
            "type": "string"
          },
          "idCardNumber": {
            "description": "The identity card number, used when the Identity Card Number is different than the Member Identification Number.",
            "type": "string"
          },
          "idCardSerialNumber": {
            "description": "The identification card serial number. The Identification Card Serial Number uniquely identifies the identification card when multiple cards have been or will be issued to a member, such as a replacement card.",
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number",
            "type": "string"
          },
          "issueNumber": {
            "description": "The issue number",
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The Medicaid provider number",
            "type": "string"
          },
          "medicaidRecipientIdNumber": {
            "description": "The Medicaid recipient identification number",
            "type": "string"
          },
          "medicalAssistanceCategory": {
            "description": "The medical assistance category",
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number",
            "type": "string"
          },
          "medicareProviderNumber": {
            "description": "The Medicare provider number",
            "type": "string"
          },
          "memberId": {
            "description": "The member identification number - only used when checking eligibility with a Workers' Compensation or Property and Casualty insurer.",
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number. If you included this value in the original eligibility request, the payer will return the same value here in the response.",
            "type": "string"
          },
          "personalIdentificationNumber": {
            "description": "The personal identification number (PIN)",
            "type": "string"
          },
          "planDescription": {
            "description": "The plan description",
            "type": "string"
          },
          "planNetworkIdDescription": {
            "description": "The plan, group, or plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The plan network identification number",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number",
            "type": "string"
          },
          "policyNumber": {
            "description": "The group or policy number",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "The prior authorization number",
            "type": "string"
          },
          "priorIdNumber": {
            "description": "The prior identifier number",
            "type": "string"
          },
          "referralNumber": {
            "description": "The referral number",
            "type": "string"
          },
          "socialSecurityNumber": {
            "description": "The social security number",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "stateLicenseNumber": {
            "description": "The state license number",
            "type": "string"
          },
          "submitterIdentificationNumber": {
            "description": "The submitter identification number",
            "type": "string"
          },
          "userIdentification": {
            "description": "The user identification",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanStatus": {
        "deprecated": true,
        "properties": {
          "planDetails": {
            "deprecated": true,
            "type": "string"
          },
          "serviceTypeCodes": {
            "deprecated": true,
            "description": "An array of [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) related to the benefit type.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceTypeCode"
            },
            "type": "array"
          },
          "status": {
            "deprecated": true,
            "type": "string"
          },
          "statusCode": {
            "deprecated": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Provider": {
        "description": "Information about the entity requesting the eligibility check. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider.\n - You must provide the `organizationName` (if the entity is an organization), or `firstName` and `lastName` (if the provider is an individual).\n - You must also provide an identifier - this is typically the provider's [National Provider Identifier](https://www.stedi.com/docs/healthcare/national-provider-identifier) (`npi`). If the provider doesn't have an NPI, you can supply an alternative, such as their `taxId` or `ssn`.\n - Don't include additional properties, such as `taxId` or `address`, unless they are specifically required or suggested by the payer.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "description": "The address of the provider requesting the information. Only include when specifically instructed by a payer, such as when the provider has multiple locations and you need to identify the specific location making the request. You must include at least the `address1` and `city` properties in this object."
          },
          "contactNumber": {
            "deprecated": true,
            "description": "The provider's contract number. Only include when required by a payer.\nThis shape is deprecated: Use `contractNumber` instead.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "description": "The provider's contract number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "devicePinNumber": {
            "description": "The provider's electronic device pin number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "employersId": {
            "deprecated": true,
            "description": "Deprecated; The submitter's Employer's Identification Number (EIN). Only use when an employer is checking the eligibility and benefits of their employees.\nThis shape is deprecated: This property is no longer used.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "facilityIdNumber": {
            "description": "The ID number for the provider's facility. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facilityNetworkIdNumber": {
            "description": "The provider's facility network identification number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name. This property is required if the provider is an individual.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "informationReceiverAdditionalIdentifierState": {
            "description": "The two-character state ID of the state that assigned the `stateLicenseNumber`. Only include when required by a payer.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. This property is required if the provider is an individual.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The provider's Medicaid provider number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicareProviderNumber": {
            "description": "The provider's Medicare provider number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier). This identifier is required for all healthcare providers who are eligible to receive an NPI. Some non-traditional providers such as transportation services, durable medical equipment (DME) suppliers, or alternative medicine practitioners are not eligible to receive an NPI. If the provider doesn't have an NPI, requests with alternate IDs are virtually never supported. In the rare circumstance that a payer has instructed you to use an alternate ID, the payer will typically require you to supply either their `taxId` or `ssn` instead.",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "organizationName": {
            "description": "The provider's business name. This property is required if the provider is not an individual.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "payorId": {
            "description": "Only used for payer-to-payer transactions, which are not currently supported. Do not use.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The provider's pharmacy processor number. Only include when specifically instructed by a payer - for example, when the provider doesn't have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). This use case is very rarely supported, and is typically when the provider is a non-medical provider, such as a social worker, home health aide, or transportation service.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "priorIdentifierNumber": {
            "description": "The provider's prior identifier number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/RequestProviderCode",
            "description": "Communicate the provider's role in the type of benefits specified in the request. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list. Only include when required by a payer."
          },
          "providerPlanNetworkIdNumber": {
            "description": "The provider's plan network identification number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ProviderType"
          },
          "referenceIdentification": {
            "description": "The provider's [Taxonomy Code](https://x12.org/codes/provider-taxonomy-codes). Only used when the provider's taxonomy code is relevant to the eligibility/benefit inquiry. For example, an institutional provider such as a hospital may need to use a taxonomy code to specify a specific unit or department.",
            "type": "string"
          },
          "serviceProviderNumber": {
            "description": "The provider's service provider number. Only include when specifically instructed by a payer - for example, when the provider doesn't have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). This use case is very rarely supported, and is typically when the provider is a non-medical provider, such as a social worker, home health aide, or transportation service.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "servicesPlanID": {
            "deprecated": true,
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "ssn": {
            "description": "The provider's Social Security Number (SSN).\n    - Only include when specifically instructed by a payer - for example, if the provider doesn't have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). This use case is very rarely supported, and is typically when the provider is a non-medical provider, such as a social worker, home health aide, or transportation service.\n    - If the payer has instructed you to send an EIN but the provider operates using their SSN, use provider.taxId instead of this field.\n    - Don't use this for Federally-administered programs, such as Medicare.",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "stateLicenceNumber": {
            "description": "The provider's state license number. If you include this information, you must also include the `informationReceiverAdditionalIdentifierState`. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "submitterIdNumber": {
            "description": "The provider's submitter identification number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "taxId": {
            "description": "The provider's Federal Taxpayer Identification Number. This is typically the provider's EIN (Employer Identification Number), but the provider's SSN may be used if the provider does not have an EIN. Only include if required by the payer.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderInformation": {
        "properties": {
          "providerCode": {
            "$ref": "#/components/schemas/ResponseProviderCode",
            "description": "A code that communicates the provider's role in the type of benefits information in the response. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "referenceIdentification": {
            "description": "The provider's taxonomy code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderType": {
        "description": "Identify the type of provider.",
        "enum": [
          "payer",
          "third-party administrator",
          "employer",
          "hospital",
          "facility",
          "gateway provider",
          "plan sponsor",
          "provider"
        ],
        "type": "string"
      },
      "QuantityQualifierCode": {
        "description": "Code indicating the type of quantity for the benefit.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "8H",
          "99",
          "CA",
          "CE",
          "D3",
          "DB",
          "DY",
          "HS",
          "LA",
          "LE",
          "M2",
          "MN",
          "P6",
          "QA",
          "S7",
          "S8",
          "VS",
          "YY"
        ],
        "type": "string"
      },
      "QuantityQualifierName": {
        "description": "The name of the quantity qualifier code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Minimum",
          "Quantity Used",
          "Covered - Actual",
          "Covered - Estimated",
          "Number of Co-insurance Days",
          "Deductible Blood Units",
          "Days",
          "Hours",
          "Life-time Reserve - Actual",
          "Life-time Reserve - Estimated",
          "Maximum",
          "Month",
          "Number of Services or Procedures",
          "Quantity Approved",
          "Age, High Value",
          "Age, Low Value",
          "Visits",
          "Years"
        ],
        "type": "string"
      },
      "RelatedEntityIdentifierName": {
        "description": "Code identifying an organizational entity, a physical location, property or an individual. \n  - `PPO` is used to identify a PPO by name or identification number, and also may also be used if identifying the Network that benefits are restricted to for In-Network benefits.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Contracted Service Provider",
          "Preferred Provider Organization (PPO)",
          "Provider",
          "Third-Party Administrator",
          "Employer",
          "Other Physician",
          "Facility",
          "Gateway Provider",
          "Group",
          "Independent Physicians Association (IPA)",
          "Insured or Subscriber",
          "Legal Representative",
          "Origin Carrier",
          "Primary Care Provider",
          "Prior Insurance Carrier",
          "Plan Sponsor",
          "Payer",
          "Primary Payer",
          "Secondary Payer",
          "Tertiary Payer",
          "Party Performing Verification",
          "Vendor",
          "Organization Completing Configuration Change",
          "Utilization Management Organization",
          "Managed Care Organization"
        ],
        "type": "string"
      },
      "RequestAddress": {
        "properties": {
          "address1": {
            "description": "The first line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "description": "The city.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "countryCode": {
            "description": "The two-letter country code from [Part 1 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "The country subdivision code from [Part 2 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-2).",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "description": "The United States or Canadian postal code, excluding punctuation and blanks.",
            "maxLength": 9,
            "minLength": 5,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/StateOrProvinceCode"
          }
        },
        "required": [
          "address1",
          "city"
        ],
        "type": "object"
      },
      "RequestDependent": {
        "properties": {
          "additionalIdentification": {
            "$ref": "#/components/schemas/AdditionalIdentificationDependent"
          },
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "description": "The dependent's address. You must include at least the `address1` and `city` properties in this object."
          },
          "beginningCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance card was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "beginningPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance plan begins.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Use to indicate the birth order when there are multiple births associated with the provided birth date.",
            "maxLength": 9,
            "minLength": 1,
            "pattern": "^[0-9]+$",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The dependent's date of birth (DOB). We **strongly recommend** including the DOB in your request. Many payers need this information to identify the patient in their system and will immediately return an error when it's not provided.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "eligibilityCategory": {
            "description": "The eligibility category for the dependent.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "endCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance card expires.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance plan ends.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The dependent's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "Code indicating the dependent's gender."
          },
          "groupNumber": {
            "description": "The group number for the dependent's insurance plan.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthCareCodeInformation": {
            "description": "Information about the dependent's health care diagnosis. You can include up to eight entries in this array. \n\nThe first array entry must have `diagnosisTypeCode` set to `ABK`. All subsequent entries must have `diagnosisTypeCode` set to `ABF`.",
            "items": {
              "$ref": "#/components/schemas/HealthCareInformation"
            },
            "maxItems": 8,
            "minItems": 1,
            "type": "array"
          },
          "idCard": {
            "description": "The dependent's insurance card number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "idCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the identification card was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "individualRelationshipCode": {
            "$ref": "#/components/schemas/IndividualRelationshipCode"
          },
          "issueNumber": {
            "description": "The issue number for the dependent's insurance policy.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The dependent's last name. **Don't** include the dependent's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "memberId": {
            "deprecated": true,
            "description": "This shape is deprecated: This property is no longer used.",
            "maxLength": 80,
            "minLength": 2,
            "pattern": "^[A-Za-z0-9- ]+$",
            "type": "string"
          },
          "middleName": {
            "description": "The dependent's middle name or middle initial.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "planIssueDate": {
            "deprecated": true,
            "description": "This shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/RequestDependentProviderCode"
          },
          "providerIdentifier": {
            "description": "The provider identifier you specified in the `referenceIdentificationQualifier` property. For example, the provider's National Provider ID or Federal Taxpayer Identification number. If you set the `referenceIdentificationQualifier` to `PXC`, then this property should contain the provider's taxonomy code.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "referenceIdentificationQualifier": {
            "$ref": "#/components/schemas/RequestDependentReferenceIdentificationQualifier"
          },
          "ssn": {
            "description": "The dependent's social security number. Don't use this for Federally-administered programs, such as Medicare.",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "suffix": {
            "description": "The dependent's name suffix, such as Sr. or III. Only include the dependent's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestDependentProviderCode": {
        "description": "Use this for providers that are not requesting the eligibility check - the requestor is specified in the `provider` object. For example, if you are a hospital making an eligibility request, this is where you would specify information about a referring provider's role. \n\n You can use one of the following: `AD` - Admitting, `AT` - Attending, `BI` - Billing, `CO` - Consulting, `CV` - Covering, `H` - Hospital, `HH` - Home Health Care, `LA` - Laboratory, `OT` - Other Physician, `P1` - Pharmacist, `P2` - Pharmacy, `PC` - Primary Care Physician, `PE`- Performing, `R`- Rural Health Clinic, `RF` - Referring, `SB` - Submitting, `SK` - Skilled Nursing Facility, `SU` - Supervising",
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "RequestDependentReferenceIdentificationQualifier": {
        "description": "The type of `providerIdentifier` you are using. Use for providers that are not requesting the eligibility check, such as the referring provider.\n- Set to `HPI` when the National Provider ID is mandated for use.\n- Set to `PXC` if you're identifying a type of specialty associated with services provided to the dependent. \n \n Otherwise, you can set to the following: `9K` - Servicer, `D3` - National Council for Prescription Drug Programs Pharmacy Number, `EI` - Employer's Identification Number, `HPI` - Centers for Medicare and Medicaid Services National Provider Identifier, `PXC` - Health Care Provider Taxonomy Code, `SY` - Social Security Number, `TJ` - Federal Taxpayer's Identification Number",
        "enum": [
          "9K",
          "D3",
          "EI",
          "HPI",
          "PXC",
          "SY",
          "TJ"
        ],
        "type": "string"
      },
      "RequestEligibilityServiceTypeCode": {
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "30",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "AA",
          "AB",
          "AC",
          "AD",
          "AE",
          "AF",
          "AG",
          "AH",
          "AI",
          "AJ",
          "AK",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "B1",
          "B2",
          "B3",
          "BA",
          "BB",
          "BC",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BK",
          "BL",
          "BM",
          "BN",
          "BP",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BU",
          "BV",
          "BW",
          "BX",
          "BY",
          "BZ",
          "C1",
          "CA",
          "CB",
          "CC",
          "CD",
          "CE",
          "CF",
          "CG",
          "CH",
          "CI",
          "CJ",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CP",
          "CQ",
          "DG",
          "DM",
          "DS",
          "GF",
          "GN",
          "GY",
          "IC",
          "MH",
          "NI",
          "ON",
          "PT",
          "PU",
          "RN",
          "RT",
          "TC",
          "TN",
          "UC"
        ],
        "type": "string"
      },
      "RequestProviderCode": {
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SB",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "RequestSubscriber": {
        "description": "The primary policyholder for the insurance plan _or_ a dependent with a unique member ID. If a dependent has a unique member ID, include their information here and leave `dependents` empty.\n- At a minimum, our API requires that you supply at least one of these fields in the request: `memberId`, `dateOfBirth`, or `lastName`. However, each payer has different requirements, so you should supply the fields necessary for each payer to identify the subscriber in their system.\n- When you provide all four of `memberId`, `dateOfBirth`, `firstName`, and `lastName`, payers are required to return a response if the member is in their database. Some payers may be able to search with less information, but this varies by payer.\n- We recommend always including the patient's member ID when possible.\n- Enter the patient's name exactly as written on their insurance card, if available, including any special or punctuation characters such as apostrophes, hyphens (dashes), or spaces. Visit [patient names](https://www.stedi.com/docs/healthcare/send-eligibility-checks#patient-names) for all best practices to avoid unnecessary failures.",
        "properties": {
          "additionalIdentification": {
            "$ref": "#/components/schemas/AdditionalIdentificationSubscriber"
          },
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "description": "The subscriber's address. You must include at least the `address1` and `city` properties in this object."
          },
          "beginningCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's identification card was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "beginningPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's insurance plan was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Use to indicate the birth order when there are multiple births associated with the provided birth date.",
            "maxLength": 9,
            "minLength": 1,
            "pattern": "^[0-9]$",
            "type": "string"
          },
          "caseNumber": {
            "description": "The case number associated with the subscriber.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "coverageLevelCode": {
            "description": "This property is no longer used.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's identification card expires.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's insurance plan ended.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The patient's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "Code indicating the subscriber's gender."
          },
          "groupNumber": {
            "description": "The group number associated with the subscriber's insurance policy.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthCareCodeInformation": {
            "description": "Information about the subscriber's health care diagnosis. You can include up to eight entries in this array. \n\nThe first array entry must have `diagnosisTypeCode` set to `ABK`. All subsequent entries must have `diagnosisTypeCode` set to `ABF`.",
            "items": {
              "$ref": "#/components/schemas/HealthCareInformation"
            },
            "maxItems": 8,
            "minItems": 1,
            "type": "array"
          },
          "idCard": {
            "description": "The subscriber's identification card number. Include this property when this number is different than the subscriber's member ID. This is common in Medicaid.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "idCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's identification card was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name. **Don't** include the subscriber's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "medicaidRecipientIdentificationNumber": {
            "description": "The Medicaid Recipient Identification Number. You can provide this number to identify the subscriber when it is the primary number the payer knows a member by (such as for Medicare or Medicaid). Do not supply this value unless it is different from the `memberId`.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy.",
            "maxLength": 80,
            "minLength": 2,
            "pattern": "^[A-Za-z0-9- ]+$",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name or middle initial.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "planIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's insurance plan was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/RequestSubscriberProviderCode"
          },
          "providerIdentifier": {
            "description": "The provider identifier you specified in the `referenceIdentificationQualifier` property. It is **required** if you set the `referenceIdentificationQualifier`. For example, this property could contain the provider's National Provider ID or Federal Taxpayer Identification number.\n\n If you set the `referenceIdentificationQualifier` to `PXC`, then this property should contain the provider's taxonomy code.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "referenceIdentificationQualifier": {
            "$ref": "#/components/schemas/RequestSubscriberReferenceIdentificationQualifier"
          },
          "spendDownAmount": {
            "description": "Identify the dollar amount the subscriber will apply toward their spend down amount, if required. For some Medicaid programs, individuals must pay a certain amount towards their healthcare cost (spend down) before coverage starts.",
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "spendDownTotalBilledAmount": {
            "description": "The subscriber's spend down total billed amount.",
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number (SSN). Many commercial and government payers ignore this property due to concerns about member privacy. However, some Medicaid programs support alternative searches using the patient's Social Security Number, instead of the member ID.",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestSubscriberProviderCode": {
        "description": "Use this for providers that are not requesting the eligibility check - the requestor is specified in the `provider` object. For example, if you are a hospital making an eligibility request, this is where you would specify information about a referring provider's role. \n\n This property is **required** when the `providerIdentifier` and `referenceIdentificationQualifier` properties are populated. \n\n You can use one of the following: `AD` - Admitting, `AT` - Attending, `BI` - Billing, `CO` - Consulting, `CV` - Covering, `H` - Hospital, `HH` - Home Health Care, `LA` - Laboratory, `OT` - Other Physician, `P1` - Pharmacist, `P2` - Pharmacy, `PC` - Primary Care Physician, `PE` - Performing, `R` - Rural Health Clinic, `RF` - Referring, `SB` - Submitting, `SK` - Skilled Nursing Facility, `SU` - Supervising",
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "RequestSubscriberReferenceIdentificationQualifier": {
        "description": "Use this for providers that are not requesting the eligibility check. This is the type of `providerIdentifier` you are providing.\n- Set to `HPI` when the National Provider ID is mandated for use.\n- Set to `PXC` if you're identifying a type of specialty associated with services provided to the subscriber. \n \n Otherwise, you can set to the following: `9K` - Servicer, `D3` - National Council for Prescription Drug Programs Pharmacy Number, `EI` - Employer's Identification Number, `HPI` - Centers for Medicare and Medicaid Services National Provider Identifier, `PXC` - Health Care Provider Taxonomy Code, `SY - Social Security Number, `TJ` - Federal Taxpayer's Identification Number",
        "enum": [
          "9K",
          "D3",
          "EI",
          "HPI",
          "PXC",
          "SY",
          "TJ"
        ],
        "type": "string"
      },
      "ResourceConflictExceptionResponseContent": {
        "description": "The server could not process the request because of conflict in the current state of the resource.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ResourceNotFoundExceptionResponseContent": {
        "description": "//// Errors\nThe server response when the specified resource cannot be found after an API request passes authentication and authorization.",
        "properties": {
          "code": {
            "description": "Classification of the exception type.",
            "type": "string"
          },
          "message": {
            "description": "Human readable exception message.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ResponseDependent": {
        "description": "Information about the dependent listed in the original eligibility check request. Note that a dependent submitted in the request may be returned in the subscriber object. When present, this object will always include the dependent's name for identification, but many payers will also return the date of birth and other identifying information.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckDependentError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The member's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriod": {
            "description": "The military service date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriodFormatQualifier": {
            "$ref": "#/components/schemas/DateTimePeriodFormatQualifier",
            "description": "The format of the military service date and time period. Can be `D8` - Date or `RD8` - Range of Dates.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "Context that identifies the exact military unit. Used to report military service data.",
            "type": "string"
          },
          "employmentStatusCode": {
            "$ref": "#/components/schemas/EmploymentStatusCode",
            "description": "The member's employment status code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#employment-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "endDateTimePeriod": {
            "description": "The military service end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseDependentEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type for the member. It can technically be set to `Person` or `Non-Person Entity`. In practice, our customers only receive `Person`.\n\nPayers may sometimes return other non-compliant values."
          },
          "firstName": {
            "description": "The member's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the patient's gender."
          },
          "governmentServiceAffiliationCode": {
            "$ref": "#/components/schemas/GovernmentServiceAffiliationCode",
            "description": "The member's government service affiliation code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#government-service-affiliation-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number associated with the insurance policy.",
            "type": "string"
          },
          "healthCareDiagnosisCodes": {
            "items": {
              "$ref": "#/components/schemas/HealthCareDiagnosisCode"
            },
            "type": "array"
          },
          "informationStatusCode": {
            "$ref": "#/components/schemas/InformationStatusCode",
            "description": "The status of the member's information, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#information-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "insuredIndicator": {
            "$ref": "#/components/schemas/DependentInsuredIndicator"
          },
          "lastName": {
            "description": "The member's last name.",
            "type": "string"
          },
          "maintenanceReasonCode": {
            "$ref": "#/components/schemas/MaintenanceReasonCode"
          },
          "maintenanceTypeCode": {
            "$ref": "#/components/schemas/MaintenanceTypeCode"
          },
          "memberId": {
            "description": "The member ID for the insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The member's middle name or initial.",
            "type": "string"
          },
          "militaryServiceRankCode": {
            "$ref": "#/components/schemas/MilitaryServiceRankCode",
            "description": "The member's military service rank code. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#military-service-rank-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The network identification number associated with the insurance policy.",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number associated with the insurance policy.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/DependentRelationship"
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/DependentRelationshipCode"
          },
          "responseProvider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "ssn": {
            "description": "The member's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "startDateTimePeriod": {
            "description": "The military service start date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III.",
            "type": "string"
          },
          "uniqueHealthIdentifier": {
            "description": "The member's unique health identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseDependentEntityIdentifier": {
        "description": "The entity identifier for the dependent.",
        "enum": [
          "Dependent"
        ],
        "type": "string"
      },
      "ResponseEligibilityServiceType": {
        "description": "The name of a service type code listed in the `serviceTypeCodes` array. Visit [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) for a complete list of codes and their names. \n\nThe word physician in service type codes refers to any healthcare provider, including physician assistants, nurse practitioners, and other types of healthcare professionals.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Medical Care",
          "Surgical",
          "Consultation",
          "Diagnostic X-Ray",
          "Diagnostic Lab",
          "Radiation Therapy",
          "Anesthesia",
          "Surgical Assistance",
          "Other Medical",
          "Blood Charges",
          "Used Durable Medical Equipment",
          "Durable Medical Equipment Purchase",
          "Ambulatory Service Center Facility",
          "Renal Supplies in the Home",
          "Alternate Method Dialysis",
          "Chronic Renal Disease (CRD) Equipment",
          "Pre-Admission Testing",
          "Durable Medical Equipment Rental",
          "Pneumonia Vaccine",
          "Second Surgical Opinion",
          "Third Surgical Opinion",
          "Social Work",
          "Diagnostic Dental",
          "Periodontics",
          "Restorative",
          "Endodontics",
          "Maxillofacial Prosthetics",
          "Adjunctive Dental Services",
          "Health Benefit Plan Coverage",
          "Plan Waiting Period",
          "Chiropractic",
          "Chiropractic Office Visits",
          "Dental Care",
          "Dental Crowns",
          "Dental Accident",
          "Orthodontics",
          "Prosthodontics",
          "Oral Surgery",
          "Routine (Preventive) Dental",
          "Home Health Care",
          "Home Health Prescriptions",
          "Home Health Visits",
          "Hospice",
          "Respite Care",
          "Hospital",
          "Hospital - Inpatient",
          "Hospital - Room and Board",
          "Hospital - Outpatient",
          "Hospital - Emergency Accident",
          "Hospital - Emergency Medical",
          "Hospital - Ambulatory Surgical",
          "Long Term Care",
          "Major Medical",
          "Medically Related Transportation",
          "Air Transportation",
          "Cabulance",
          "Licensed Ambulance",
          "General Benefits",
          "In-vitro Fertilization",
          "MRI/CAT Scan",
          "Donor Procedures",
          "Acupuncture",
          "Newborn Care",
          "Pathology",
          "Smoking Cessation",
          "Well Baby Care",
          "Maternity",
          "Transplants",
          "Audiology Exam",
          "Inhalation Therapy",
          "Diagnostic Medical",
          "Private Duty Nursing",
          "Prosthetic Device",
          "Dialysis",
          "Otological Exam",
          "Chemotherapy",
          "Allergy Testing",
          "Immunizations",
          "Routine Physical",
          "Family Planning",
          "Infertility",
          "Abortion",
          "AIDS",
          "Emergency Services",
          "Cancer",
          "Pharmacy",
          "Free Standing Prescription Drug",
          "Mail Order Prescription Drug",
          "Brand Name Prescription Drug",
          "Generic Prescription Drug",
          "Podiatry",
          "Podiatry - Office Visits",
          "Podiatry - Nursing Home Visits",
          "Professional (Physician)",
          "Anesthesiologist",
          "Professional (Physician) Visit - Office",
          "Professional (Physician) Visit - Inpatient",
          "Professional (Physician) Visit - Outpatient",
          "Professional (Physician) Visit - Nursing Home",
          "Professional (Physician) Visit - Skilled Nursing Facility",
          "Professional (Physician) Visit - Home",
          "Psychiatric",
          "Psychiatric - Room and Board",
          "Psychotherapy",
          "Psychiatric - Inpatient",
          "Psychiatric - Outpatient",
          "Rehabilitation",
          "Rehabilitation - Room and Board",
          "Rehabilitation - Inpatient",
          "Rehabilitation - Outpatient",
          "Occupational Therapy",
          "Physical Medicine",
          "Speech Therapy",
          "Skilled Nursing Care",
          "Skilled Nursing Care - Room and Board",
          "Substance Abuse",
          "Alcoholism",
          "Drug Addiction",
          "Vision (Optometry)",
          "Frames",
          "Routine Exam",
          "Lenses",
          "Nonmedically Necessary Physical",
          "Experimental Drug Therapy",
          "Burn Care",
          "Brand Name Prescription Drug - Formulary",
          "Brand Name Prescription Drug - Non-Formulary",
          "Independent Medical Evaluation",
          "Partial Hospitalization (Psychiatric)",
          "Day Care (Psychiatric)",
          "Cognitive Therapy",
          "Massage Therapy",
          "Pulmonary Rehabilitation",
          "Cardiac Rehabilitation",
          "Pediatric",
          "Nursery",
          "Skin",
          "Orthopedic",
          "Cardiac",
          "Lymphatic",
          "Gastrointestinal",
          "Endocrine",
          "Neurology",
          "Eye",
          "Invasive Procedures",
          "Gynecological",
          "Obstetrical",
          "Obstetrical/Gynecological",
          "Mail Order Prescription Drug - Formulary",
          "Mail Order Prescription Drug - Non-Formulary",
          "Physician Visit - Office: Sick",
          "Physician Visit - Office: Well",
          "Coronary Care",
          "Private Duty Nursing - Inpatient",
          "Private Duty Nursing - Home",
          "Surgical Benefits - Professional (Physician)",
          "Surgical Benefits - Facility",
          "Mental Health Provider - Inpatient",
          "Mental Health Provider - Outpatient",
          "Mental Health Facility - Inpatient",
          "Mental Health Facility - Outpatient",
          "Substance Abuse Facility - Inpatient",
          "Substance Abuse Facility - Outpatient",
          "Screening X-ray",
          "Screening laboratory",
          "Mammogram, High Risk Patient",
          "Mammogram, Low Risk Patient",
          "Flu Vaccination",
          "Eyewear and Eyewear Accessories",
          "Case Management",
          "Dermatology",
          "Durable Medical Equipment",
          "Diabetic Supplies",
          "Generic Prescription Drug - Formulary",
          "Generic Prescription Drug - Non-Formulary",
          "Allergy",
          "Intensive Care",
          "Mental Health",
          "Neonatol Intensive Care",
          "Oncology",
          "Physical Therapy",
          "Pulmonary",
          "Renal",
          "Residential Psychiatric Treatment",
          "Transitional Care",
          "Transitional Nursery Care",
          "Urgent Care"
        ],
        "type": "string"
      },
      "ResponseEligibilityServiceTypeCode": {
        "description": "A code identifying a type of service. For example, `7` - Anesthesia. Visit [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) for a complete list. \n\n This list is specific to X12 version 005010, which is the mandated version for eligibility checks. It differs from the current [X12 Service Type Codes](https://x12.org/codes/service-type-codes) list, which applies to X12 versions later than 005010.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "30",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "AA",
          "AB",
          "AC",
          "AD",
          "AE",
          "AF",
          "AG",
          "AH",
          "AI",
          "AJ",
          "AK",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "B1",
          "B2",
          "B3",
          "BA",
          "BB",
          "BC",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BK",
          "BL",
          "BM",
          "BN",
          "BP",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BU",
          "BV",
          "BW",
          "BX",
          "BY",
          "BZ",
          "C1",
          "CA",
          "CB",
          "CC",
          "CD",
          "CE",
          "CF",
          "CG",
          "CH",
          "CI",
          "CJ",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CP",
          "CQ",
          "DG",
          "DM",
          "DS",
          "GF",
          "GN",
          "GY",
          "IC",
          "MH",
          "NI",
          "ON",
          "PT",
          "PU",
          "RN",
          "RT",
          "TC",
          "TN",
          "UC"
        ],
        "type": "string"
      },
      "ResponseProvider": {
        "description": "Information about the entity that submitted the original eligibility check request. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider. This object will always include at least one identifier, such as the provider's [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier), tax ID, or EIN.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckProviderError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The provider's contact information."
          },
          "employersId": {
            "deprecated": true,
            "description": "Deprecated; The provider's identification number for the entity receiving the benefits information.\nThis shape is deprecated: This property is no longer used.",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseProviderEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier"
          },
          "federalTaxpayersIdNumber": {
            "description": "The Federal Taxpayer Identification Number (also known as an EIN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name. This applies to providers that are an individual.",
            "type": "string"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "payorIdentification": {
            "description": "The Payor Identification.",
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The pharmacy processor number.",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/ResponseProviderCode",
            "description": "A code that communicates the provider's role in the type of benefits information in the response. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "providerFirstName": {
            "description": "The provider's first name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerName": {
            "description": "The provider's last name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerOrgName": {
            "description": "The provider's organization name.",
            "type": "string"
          },
          "referenceIdentification": {
            "description": "The Health Care Provider Taxonomy Code.",
            "type": "string"
          },
          "serviceProviderNumber": {
            "description": "The service provider number. This is an identification number assigned by the payer.",
            "type": "string"
          },
          "servicesPlanID": {
            "description": "The Centers for Medicare and Medicaid Services (CMS) Plan ID.",
            "type": "string"
          },
          "ssn": {
            "description": "The Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr., Sr., or III.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseProviderCode": {
        "description": "A code indicating the type of provider. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SB",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "ResponseProviderEntityIdentifier": {
        "description": "A code identifying the type of provider.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Provider",
          "Third-Party Administrator",
          "Employer",
          "Hospital",
          "Facility",
          "Gateway Provider",
          "Plan Sponsor",
          "Payer"
        ],
        "type": "string"
      },
      "ResponseSubscriber": {
        "description": "Information about the primary policyholder for the insurance plan listed in the original eligibility check request. The response will always include either the subscriber's name or member ID for identification, but most payers will also return the subscriber's date of birth and other identifying information.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckSubscriberError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The member's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriod": {
            "description": "The military service date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriodFormatQualifier": {
            "$ref": "#/components/schemas/DateTimePeriodFormatQualifier",
            "description": "The format of the military service date and time period. Can be `D8` - Date or `RD8` - Range of Dates.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "Context that identifies the exact military unit. Used to report military service data.",
            "type": "string"
          },
          "employmentStatusCode": {
            "$ref": "#/components/schemas/EmploymentStatusCode",
            "description": "The member's employment status code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#employment-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "endDateTimePeriod": {
            "description": "The military service end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseSubscriberEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type for the member. It can technically be set to `Person` or `Non-Person Entity`. In practice, our customers only receive `Person`.\n\nPayers may sometimes return other non-compliant values."
          },
          "firstName": {
            "description": "The member's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the patient's gender."
          },
          "governmentServiceAffiliationCode": {
            "$ref": "#/components/schemas/GovernmentServiceAffiliationCode",
            "description": "The member's government service affiliation code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#government-service-affiliation-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number associated with the insurance policy.",
            "type": "string"
          },
          "healthCareDiagnosisCodes": {
            "items": {
              "$ref": "#/components/schemas/HealthCareDiagnosisCode"
            },
            "type": "array"
          },
          "informationStatusCode": {
            "$ref": "#/components/schemas/InformationStatusCode",
            "description": "The status of the member's information, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#information-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "insuredIndicator": {
            "$ref": "#/components/schemas/SubscriberInsuredIndicator"
          },
          "lastName": {
            "description": "The member's last name.",
            "type": "string"
          },
          "maintenanceReasonCode": {
            "$ref": "#/components/schemas/MaintenanceReasonCode"
          },
          "maintenanceTypeCode": {
            "$ref": "#/components/schemas/MaintenanceTypeCode"
          },
          "memberId": {
            "description": "The member ID for the insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The member's middle name or initial.",
            "type": "string"
          },
          "militaryServiceRankCode": {
            "$ref": "#/components/schemas/MilitaryServiceRankCode",
            "description": "The member's military service rank code. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#military-service-rank-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The network identification number associated with the insurance policy.",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number associated with the insurance policy.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/SubscriberRelationship"
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/SubscriberRelationshipCode"
          },
          "responseProvider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "ssn": {
            "description": "The member's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "startDateTimePeriod": {
            "description": "The military service start date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III.",
            "type": "string"
          },
          "uniqueHealthIdentifier": {
            "description": "The member's unique health identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseSubscriberEntityIdentifier": {
        "description": "The entity identifier for the subscriber.",
        "enum": [
          "Insured or Subscriber"
        ],
        "type": "string"
      },
      "StateOrProvinceCode": {
        "description": "The US state or Canadian province code. For example, `TN` for Tennessee or `NB` for New Brunswick.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "NL",
          "PE",
          "NS",
          "NB",
          "QC",
          "ON",
          "MB",
          "SK",
          "AB",
          "BC",
          "YT",
          "NT",
          "NU",
          "DC",
          "AS",
          "GU",
          "MP",
          "PR",
          "UM",
          "VI",
          "AK",
          "AL",
          "AR",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DE",
          "FL",
          "GA",
          "HI",
          "IA",
          "ID",
          "IL",
          "IN",
          "KS",
          "KY",
          "LA",
          "MA",
          "MD",
          "ME",
          "MI",
          "MN",
          "MO",
          "MS",
          "MT",
          "NC",
          "ND",
          "NE",
          "NH",
          "NJ",
          "NM",
          "NV",
          "NY",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VA",
          "VT",
          "WA",
          "WI",
          "WV",
          "WY"
        ],
        "type": "string"
      },
      "SubscriberInsuredIndicator": {
        "description": "Indicates the status of the insured. For the subscriber, this is always `Y`.",
        "enum": [
          "Y"
        ],
        "type": "string"
      },
      "SubscriberRelationship": {
        "description": "The name of the `relationToSubscriberCode`. For the subscriber, this is always `Self`.",
        "enum": [
          "Self"
        ],
        "type": "string"
      },
      "SubscriberRelationshipCode": {
        "description": "For the subscriber, this is always `18` for Self.",
        "enum": [
          "18"
        ],
        "type": "string"
      },
      "SubscriberTraceNumber": {
        "properties": {
          "originatingCompanyIdentifier": {
            "description": "The identifier of the organization that assigned the trace number.",
            "type": "string"
          },
          "referenceIdentification": {
            "description": "The unique trace number assigned to the transaction.",
            "type": "string"
          },
          "secondaryReferenceIdentification": {
            "description": "Identifies a subdivision within the organization that assigned the trace number.",
            "type": "string"
          },
          "traceType": {
            "description": "The full name of the `traceTypeCode`. For example `Current Transaction Trace Numbers`.",
            "type": "string"
          },
          "traceTypeCode": {
            "description": "The code that identifies the type of trace number. Can be `1` - Current Transaction Trace Numbers (refers to trace numbers assigned by the payer) or `2` - Referenced Trace Numbers (refers to numbers sent in the original eligibility check request).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimePeriodQualifier": {
        "description": "The name of the `timePeriodQualifierCode`. For example, `Calendar Year`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Hour",
          "Day",
          "Years",
          "Service Year",
          "Calendar Year",
          "Year to Date",
          "Contract",
          "Episode",
          "Visit",
          "Outlier",
          "Remaining",
          "Exceeded",
          "Not Exceeded",
          "Lifetime",
          "Lifetime Remaining",
          "Month",
          "Week"
        ],
        "type": "string"
      },
      "TimePeriodQualifierCode": {
        "description": "Code specifying the time period for the benefit information.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "6",
          "7",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35"
        ],
        "type": "string"
      },
      "TimeQualifierCode": {
        "description": "Code indicating the time period for the benefit information.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "6",
          "7",
          "13",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36"
        ],
        "type": "string"
      },
      "TimeQualifierName": {
        "description": "The name of the time period qualifier code. \n \n Note that for the patient's deductible, `Calendar Year` indicates the patient's total deductible amount for the year, while `Remaining` indicates the amount left to meet the deductible. Visit [Payer benefit response](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits#deductible) to learn more about deductibles.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Hour",
          "Day",
          "24 Hours",
          "Years",
          "Service Year",
          "Calendar Year",
          "Year to Date",
          "Contract",
          "Episode",
          "Visit",
          "Outlier",
          "Remaining",
          "Exceeded",
          "Not Exceeded",
          "Lifetime",
          "Lifetime Remaining",
          "Month",
          "Week",
          "Admission"
        ],
        "type": "string"
      },
      "UnauthorizedExceptionResponseContent": {
        "description": "The server response when the authorizer failed to authenticate the caller.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "UnitForMeasurement": {
        "description": "The name of the `unitForMeasurementQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Days",
          "Months",
          "Visits",
          "Week",
          "Years"
        ],
        "type": "string"
      },
      "UnitForMeasurementCode": {
        "description": "Code specifying the unit of measurement for the quantity.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "DA",
          "MO",
          "VS",
          "WK",
          "YR"
        ],
        "type": "string"
      },
      "ValidationExceptionField": {
        "description": "Describes one specific validation failure for an input member.",
        "properties": {
          "message": {
            "description": "A detailed description of the validation failure.",
            "type": "string"
          },
          "path": {
            "description": "A JSONPointer expression to the structure member whose value failed to satisfy the modeled constraints.",
            "type": "string"
          }
        },
        "required": [
          "message",
          "path"
        ],
        "type": "object"
      },
      "ValidationExceptionResponseContent": {
        "description": "A standard error for input validation failures.\nThis should be thrown by services when a member of the input structure\nfalls outside of the modeled or documented constraints.",
        "properties": {
          "fieldList": {
            "description": "A list of specific failures encountered while validating the input.\nA member can appear in this list more than once if it failed to satisfy multiple constraints.",
            "items": {
              "$ref": "#/components/schemas/ValidationExceptionField"
            },
            "type": "array"
          },
          "message": {
            "description": "A summary of the validation failure.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "Warning": {
        "properties": {
          "code": {
            "description": "The warning code.",
            "type": "string"
          },
          "description": {
            "description": "The warning description.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "httpApiKeyAuth": {
        "description": "A [Stedi API Key](https://portal.stedi.com/app/settings/api-keys) for authentication.",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "contact": {
      "email": "healthcare@stedi.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://stedi.com"
    },
    "title": "Stedi Manager",
    "version": "2024-04-01"
  },
  "openapi": "3.1.0",
  "paths": {
    "/eligibility-manager/batch-eligibility": {
      "post": {
        "description": "Submit multiple eligibility checks for Stedi to process asynchronously",
        "operationId": "BatchEligibilityChecks",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "BatchEligibilityChecks_example1": {
                  "description": "",
                  "summary": "Batch eligibility checks",
                  "value": {
                    "items": [
                      {
                        "controlNumber": "000022222",
                        "encounter": {
                          "serviceTypeCodes": [
                            "MH"
                          ]
                        },
                        "provider": {
                          "npi": "1234567891",
                          "organizationName": "ACME Health Services"
                        },
                        "submitterTransactionIdentifier": "ABC123456789",
                        "subscriber": {
                          "dateOfBirth": "19000101",
                          "firstName": "Jane",
                          "lastName": "Doe",
                          "memberId": "1234567890"
                        },
                        "tradingPartnerServiceId": "AHS"
                      },
                      {
                        "controlNumber": "333344444",
                        "encounter": {
                          "serviceTypeCodes": [
                            "78"
                          ]
                        },
                        "provider": {
                          "npi": "1234567891",
                          "organizationName": "ACME Health Services"
                        },
                        "submitterTransactionIdentifier": "DEF123456799",
                        "subscriber": {
                          "dateOfBirth": "19001021",
                          "firstName": "John",
                          "lastName": "Doe",
                          "memberId": "1234567892"
                        },
                        "tradingPartnerServiceId": "AHS"
                      }
                    ],
                    "name": "march-2024-eligibility-batch"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/BatchEligibilityChecksRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "BatchEligibilityChecks_example1": {
                    "description": "",
                    "summary": "Batch eligibility checks",
                    "value": {
                      "batchId": "01928d19-df25-76c0-8d51-f5351260fa05",
                      "submittedAt": "2023-11-07T05:31:56Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BatchEligibilityChecksResponseContent"
                }
              }
            },
            "description": "BatchEligibilityChecks 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            },
            "description": "ResourceConflictException 409 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          }
        }
      }
    },
    "/eligibility-manager/polling/batch-eligibility": {
      "get": {
        "description": "Retrieve batch eligibility check results",
        "operationId": "BatchEligibilityPolling",
        "parameters": [
          {
            "description": "The maximum number of check results to return in a page - each check is represented as one item in the `items` array. If not specified, the default is 10.\n  - If you set the page size to a value > 20, Stedi returns the requested batch check results in `gzip` format to reduce the size. Many common HTTP clients accept `gzip` by default, but if not, you must add the `Accept-Encoding: gzip` header to your request and resubmit.\n  - When check results are especially large, Stedi may return fewer than the requested number per page. In these cases, you can use the `nextPageToken` property to retrieve the rest of the requested results.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "description": "The maximum number of check results to return in a page - each check is represented as one item in the `items` array. If not specified, the default is 10.\n  - If you set the page size to a value > 20, Stedi returns the requested batch check results in `gzip` format to reduce the size. Many common HTTP clients accept `gzip` by default, but if not, you must add the `Accept-Encoding: gzip` header to your request and resubmit.\n  - When check results are especially large, Stedi may return fewer than the requested number per page. In these cases, you can use the `nextPageToken` property to retrieve the rest of the requested results.",
              "maximum": 200,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "A token returned by a previous call to this operation in the `nextPageToken` property. If not specified, Stedi returns the first page of results.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "description": "A token returned by a previous call to this operation in the `nextPageToken` property. If not specified, Stedi returns the first page of results.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "An identifier for a batch of eligibility checks submitted through the [Batch Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-batch-eligibility) endpoint. Use this to retrieve results for eligibility checks in the batch.",
            "examples": {
              "BatchEligibilityPolling_example1": {
                "description": "",
                "summary": "Poll batch eligibility checks",
                "value": "01932c61-2d4f-7d22-85fa-c7db2e13e771"
              }
            },
            "in": "query",
            "name": "batchId",
            "schema": {
              "description": "An identifier for a batch of eligibility checks submitted through the [Batch Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-batch-eligibility) endpoint. Use this to retrieve results for eligibility checks in the batch.",
              "type": "string"
            }
          },
          {
            "description": "An ISO 8601 formatted string. For example `2023-08-28T00:00:00Z`. Stedi returns asynchronous eligibility checks that have completed processing after this time. Completed means that the payer has successfully returned a benefits response, the check has failed due to errors in the request, or that the payer has been unavailable for 8 hours and Stedi will no longer attempt to retry.",
            "in": "query",
            "name": "startDateTime",
            "schema": {
              "description": "An ISO 8601 formatted string. For example `2023-08-28T00:00:00Z`. Stedi returns asynchronous eligibility checks that have completed processing after this time. Completed means that the payer has successfully returned a benefits response, the check has failed due to errors in the request, or that the payer has been unavailable for 8 hours and Stedi will no longer attempt to retry.",
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "BatchEligibilityPolling_example1": {
                    "description": "",
                    "summary": "Poll batch eligibility checks",
                    "value": {
                      "items": [
                        {
                          "batchId": "01932c61-2d4f-7d22-85fa-c7db2e13e771",
                          "controlNumber": "000022222",
                          "eligibilitySearchId": "06956c88-a177-5252-b868-ju4974dd54gh",
                          "errors": [
                            {
                              "code": "79",
                              "description": "Invalid Participant Identification",
                              "followupAction": "Please Correct and Resubmit",
                              "location": "2100A",
                              "possibleResolutions": "Payer TEST is not configured. Please check our published payer list or contact Stedi support to resolve."
                            }
                          ],
                          "meta": {
                            "outboundTraceId": "01JCP62EYY1N6PZABF9Q45EN5Y"
                          },
                          "status": "ERROR",
                          "submitterTransactionIdentifier": "ABC123456789",
                          "tradingPartnerServiceId": "TEST"
                        },
                        {
                          "batchId": "01932c61-2d4f-7d22-85fa-c7db2e13e771",
                          "benefitsInformation": [
                            {
                              "additionalInformation": [
                                {
                                  "description": "Complete Care Management"
                                }
                              ],
                              "code": "1",
                              "name": "Active Coverage",
                              "planCoverage": "Open Access Plus",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                },
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Copay does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "6000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "benefitAmount": "500",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                },
                                {
                                  "description": "Copay does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "3000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "benefitAmount": "250",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "15000",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "30000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitPercent": "0.1",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ]
                            },
                            {
                              "benefitAmount": "7500",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "15000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Not Applicable",
                              "inPlanNetworkIndicatorCode": "W",
                              "name": "Active Coverage",
                              "serviceTypeCodes": [
                                "A7",
                                "BC",
                                "A8",
                                "A4",
                                "A5",
                                "A6",
                                "7",
                                "4",
                                "BB",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient",
                                "Day Care (Psychiatric)",
                                "Psychiatric - Outpatient",
                                "Psychiatric",
                                "Psychiatric - Room and Board",
                                "Psychotherapy",
                                "Anesthesia",
                                "Diagnostic X-Ray",
                                "Partial Hospitalization (Psychiatric)",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Outpatient Hospital",
                                "industryCode": "22"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Outpatient Hospital",
                                  "industryCode": "22"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "BC",
                                "A4",
                                "A6",
                                "4",
                                "22"
                              ],
                              "serviceTypes": [
                                "Day Care (Psychiatric)",
                                "Psychiatric",
                                "Psychotherapy",
                                "Diagnostic X-Ray",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "4",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Diagnostic X-Ray",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Telehealth Provided Other than in Patient’s Home",
                                "industryCode": "02"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Telehealth Provided Other than in Patient’s Home",
                                  "industryCode": "02"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ]
                            },
                            {
                              "authOrCertIndicator": "N",
                              "benefitAmount": "20",
                              "code": "B",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "authOrCertIndicator": "N",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "4",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Diagnostic X-Ray",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Included For Specific Services"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "20",
                              "code": "B",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Telehealth Provided Other than in Patient’s Home",
                                "industryCode": "02"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Telehealth Provided Other than in Patient’s Home",
                                  "industryCode": "02"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Included For Specific Services"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Telehealth Provided Other than in Patient’s Home",
                                "industryCode": "02"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Telehealth Provided Other than in Patient’s Home",
                                  "industryCode": "02"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Services rendered thru Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Telehealth Provided Other than in Patient’s Home",
                                "industryCode": "02"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Telehealth Provided Other than in Patient’s Home",
                                  "industryCode": "02"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Services rendered thru Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "4",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Diagnostic X-Ray",
                                "Social Work"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Services rendered thru Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "20",
                              "code": "B",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Telehealth Provided Other than in Patient’s Home",
                                "industryCode": "02"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Telehealth Provided Other than in Patient’s Home",
                                  "industryCode": "02"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Services rendered thru Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitAmount": "20",
                              "code": "B",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "serviceTypeCodes": [
                                "A4",
                                "A6",
                                "22"
                              ],
                              "serviceTypes": [
                                "Psychiatric",
                                "Psychotherapy",
                                "Social Work"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Services rendered thru Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "Y",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "7"
                              ],
                              "serviceTypes": [
                                "Anesthesia"
                              ]
                            },
                            {
                              "authOrCertIndicator": "Y",
                              "code": "CB",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Coverage Basis",
                              "serviceTypeCodes": [
                                "7",
                                "BB"
                              ],
                              "serviceTypes": [
                                "Anesthesia",
                                "Partial Hospitalization (Psychiatric)"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "Y",
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "7"
                              ],
                              "serviceTypes": [
                                "Anesthesia"
                              ]
                            },
                            {
                              "authOrCertIndicator": "Y",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Office",
                                "industryCode": "11"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Office",
                                  "industryCode": "11"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "7"
                              ],
                              "serviceTypes": [
                                "Anesthesia"
                              ]
                            },
                            {
                              "authOrCertIndicator": "N",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Outpatient Hospital",
                                "industryCode": "22"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Outpatient Hospital",
                                  "industryCode": "22"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Services rendered thru Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "N",
                              "benefitPercent": "0",
                              "code": "A",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "eligibilityAdditionalInformation": {
                                "codeListQualifier": "Mutually Defined",
                                "codeListQualifierCode": "ZZ",
                                "industry": "Outpatient Hospital",
                                "industryCode": "22"
                              },
                              "eligibilityAdditionalInformationList": [
                                {
                                  "codeListQualifier": "Mutually Defined",
                                  "codeListQualifierCode": "ZZ",
                                  "industry": "Outpatient Hospital",
                                  "industryCode": "22"
                                }
                              ],
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "authOrCertIndicator": "Y",
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "BB"
                              ],
                              "serviceTypes": [
                                "Partial Hospitalization (Psychiatric)"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": " Provider is out of network based on NPI ID provided in request."
                                }
                              ],
                              "code": "1",
                              "name": "Active Coverage",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                },
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Copay does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "5760",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "benefitAmount": "500",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                },
                                {
                                  "description": "Copay does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "2760",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Includes services provided by Client Specific Network"
                                }
                              ],
                              "benefitAmount": "250",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "15000",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "30000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "7500",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Deductible does apply to member's out-of-pocket maximum"
                                },
                                {
                                  "description": "Coinsurance does apply to member's out-of-pocket maximum"
                                }
                              ],
                              "benefitAmount": "15000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            }
                          ],
                          "controlNumber": "333344444",
                          "eligibilitySearchId": "01922a35-a177-7171-b868-cd4974dd54df",
                          "errors": [],
                          "meta": {
                            "applicationMode": "production",
                            "outboundTraceId": "01J2VZA127GH93JT74HJU",
                            "senderId": "030240928",
                            "submitterId": "117151744",
                            "traceId": "01J2VZA127GH93JT74HJU"
                          },
                          "payer": {
                            "contactInformation": {
                              "contacts": [
                                {
                                  "communicationMode": "Telephone",
                                  "communicationNumber": "1234567890"
                                },
                                {
                                  "communicationMode": "Uniform Resource Locator (URL)",
                                  "communicationNumber": "website.company.com"
                                }
                              ]
                            },
                            "entityIdentifier": "Payer",
                            "entityType": "Non-Person Entity",
                            "federalTaxpayersIdNumber": "123412345",
                            "name": "ABCDE"
                          },
                          "planDateInformation": {
                            "eligibilityBegin": "20220102",
                            "planBegin": "20240101",
                            "planEnd": "20241231"
                          },
                          "planInformation": {
                            "groupDescription": "ABCDE",
                            "groupNumber": "12341234",
                            "priorIdNumber": "1234567890"
                          },
                          "planStatus": [
                            {
                              "planDetails": "Open Access Plus",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "status": "Active Coverage",
                              "statusCode": "1"
                            },
                            {
                              "serviceTypeCodes": [
                                "A7",
                                "BC",
                                "A8",
                                "A4",
                                "A5",
                                "A6",
                                "7",
                                "4",
                                "BB",
                                "22"
                              ],
                              "status": "Active Coverage",
                              "statusCode": "1"
                            },
                            {
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "status": "Active Coverage",
                              "statusCode": "1"
                            }
                          ],
                          "provider": {
                            "entityIdentifier": "Provider",
                            "entityType": "Non-Person Entity",
                            "npi": "1234567890",
                            "providerName": "ACME HEALTH SERVICES"
                          },
                          "reassociationKey": "123456789",
                          "submitterTransactionIdentifier": "DEF123456799",
                          "subscriber": {
                            "address": {
                              "address1": "1234 FIRST ST",
                              "city": "NEW YORK",
                              "postalCode": "123451111",
                              "state": "WV"
                            },
                            "dateOfBirth": "19000101",
                            "entityIdentifier": "Insured or Subscriber",
                            "entityType": "Person",
                            "firstName": "JANE",
                            "gender": "F",
                            "groupNumber": "123456789",
                            "lastName": "DOE",
                            "memberId": "1234567892",
                            "middleName": "A"
                          },
                          "tradingPartnerServiceId": "123456789",
                          "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *111111*1234*^*00501*123456782*0*P*>~GS*HB*STEDI*117151744*20240326*111000*1*X*005010X279A1~ST*271*1001*005010X279A1~BHT*0022*11*01J2VZA127GH93JT74HJU*20240326*1514~HL*1**20*1~NM1*PR*2*ABCDE*****FI*111000123~PER*IC**TE*123456789*UR*website.company.com~HL*2*1*21*1~NM1*1P*2*ACME HEALTH SERVICES*****XX*11234567890~HL*3*2*22*0~NM1*IL*1*DOE*JANE*A***MI*123456789~REF*6P*123456789*ABCDE~REF*Q4*123456789~N3*1234 FIRST ST~N4*NEW YORK*WV*123451111~DMG*D8*19000101*F~INS*Y*18*001*25~DTP*356*D8*20220102~DTP*346*D8*20240101~DTP*347*D8*20241231~EB*1**30**Open Access Plus~MSG*Complete Care Management~EB*G*FAM*30***23*6000.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*FAM*30***23*500.00*****Y~MSG*Includes services provided by Client Specific Network~EB*G*IND*30***23*3000.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***23*250.00*****Y~MSG*Includes services provided by Client Specific Network~EB*C*FAM*30***23*15000.00*****N~EB*G*FAM*30***23*30000.00*****N~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*A*IND*30*****.10****Y~EB*C*IND*30***23*7500.00*****N~EB*G*IND*30***23*15000.00*****N~MSG*Deductible does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~EB*A*IND*30*****.50****N~EB*1**A7^BC^A8^A4^A5^A6^7^4^BB^22*********W~EB*C*IND*BC^A4^A6^4^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*22~EB*C*IND*A8****0.00****N*Y~MSG*Includes services provided by Client Specific Network~EB*C*IND*A4^A6^4^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*11~EB*C*IND*A4^A6^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*02~EB*B*IND*A4^A6^22***27*20.00****N*Y~III*ZZ*11~EB*A*IND*A4^A6^4^22*****.00***N*Y~III*ZZ*11~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Included For Specific Services~III*ZZ*02~EB*A*IND*A4^A6^22*****.00***N*Y~MSG*Included For Specific Services~III*ZZ*02~EB*A*IND*A4^A6^22*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*02~EB*A*IND*A4^A6^4^22*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*02~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*A*IND*7*****.00***Y*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*CB**7^BB********Y*Y~EB*C*IND*7****0.00****Y*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*11~EB*A*IND*7*****.00***Y*Y~III*ZZ*11~EB*A*IND*4*****.00***N*Y~III*ZZ*22~EB*A*IND*4*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*22~EB*C*IND*BB****0.00****Y*Y~MSG*Includes services provided by Client Specific Network~EB*1**MH~MSG* Provider is out of network based on NPI ID provided in request.~EB*G*FAM*30***29*5760.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*FAM*30***29*500.00*****Y~MSG*Includes services provided by Client Specific Network~EB*G*IND*30***29*2760.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***29*250.00*****Y~MSG*Includes services provided by Client Specific Network~EB*C*FAM*30***29*15000.00*****N~EB*G*FAM*30***29*30000.00*****N~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***29*7500.00*****N~EB*G*IND*30***29*15000.00*****N~MSG*Deductible does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~SE*119*1001~GE*1*1~IEA*1*123456782~"
                        }
                      ],
                      "nextPageToken": "01932c61-2d4f-7d22-85fa-c7db2e13e771"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BatchEligibilityPollingResponseContent"
                }
              }
            },
            "description": "BatchEligibilityPolling 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          }
        }
      }
    }
  },
  "security": [
    {
      "httpApiKeyAuth": []
    }
  ],
  "servers": [
    {
      "description": "Production",
      "url": "https://manager.us.stedi.com/2024-04-01"
    }
  ],
  "tags": [],
  "x-stedi": {
    "lifecycle": "general_availability",
    "product": "manager",
    "public": true
  }
}
