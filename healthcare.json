{
  "components": {
    "schemas": {
      "AccessDeniedException": {
        "description": "The server response for authorization failure.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "AccessDeniedExceptionResponseContent": {
        "description": "The server response for authorization failure.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "AccountNumberQualifier": {
        "description": "Identifies the type of bank account being used for electronic payment transactions. This specifies whether the account is a checking (demand deposit) or savings account.",
        "enum": [
          "DA",
          "SA"
        ],
        "type": "string"
      },
      "AdditionalIdentificationDependent": {
        "description": "Use this object when you need to provide an additional identification number for the dependent. This is rarely required for standard eligibility checks.",
        "properties": {
          "agencyClaimNumber": {
            "description": "The Property and Casualty Claim Number associated with the patient. You should only submit this value when when you are submitting an eligibility request to a property and casualty payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "description": "The contract number for an existing contract between the payer and the provider requesting the eligibility check.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthInsuranceClaimNumber": {
            "description": "This property is never used in practice.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "identificationCardSerialNumber": {
            "description": "The identification card serial number. You can include this when the ID card has a number in addition to the member ID number. The Identification Card Serial Number uniquely identifies the card when multiple cards have been or will be issued to a member, such as a replacement card.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "memberIdentificationNumber": {
            "description": "Not intended for most use cases. Only set this when the property and casualty patient identifier is a member ID that would be used in an 837 claim submission.\n\nIf the patient has their own member ID for the health plan, you should identify them in the `subscriber` object. If the patient doesn't have their own member ID, don't set this property.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNetworkIdentificationNumber": {
            "description": "The plan network identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNumber": {
            "description": "The insurance plan number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "policyNumber": {
            "description": "The insurance group or policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalIdentificationSubscriber": {
        "description": "Use this object when you need to provide an identification number other than or in addition to the subscriber's member ID. For example, you may provide the patient account number.\n\nDon't include the health insurance claim number or the medicaid recipient ID number here unless they are different from the member ID.",
        "properties": {
          "agencyClaimNumber": {
            "description": "The Property and Casualty Claim Number associated with the patient. You should only submit this value when when you are submitting an eligibility request to a property and casualty payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "description": "The contract number for an existing contract between the payer and the provider requesting the eligibility check.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthInsuranceClaimNumber": {
            "description": "The health insurance claim number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "identificationCardSerialNumber": {
            "description": "The identification card serial number. You can include this when the ID card has a number in addition to the member ID number. The Identification Card Serial Number uniquely identifies the card when multiple cards have been or will be issued to a member, such as a replacement card.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "memberIdentificationNumber": {
            "description": "This property is never used in practice. Supply the subscriber's member ID in `subscriber.memberId`.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNetworkIdentificationNumber": {
            "description": "The plan network identification number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "planNumber": {
            "description": "The insurance plan number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "policyNumber": {
            "description": "The insurance group or policy number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalInformation": {
        "properties": {
          "description": {
            "description": "A free-form message containing additional information about the benefits in the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Address": {
        "properties": {
          "address1": {
            "description": "The first line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "description": "The city.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "countryCode": {
            "description": "The two-letter country code from [Part 1 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "The country subdivision code from [Part 2 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-2).",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "description": "The United States or Canadian postal code, excluding punctuation and blanks.",
            "maxLength": 9,
            "minLength": 5,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/InfallibleStateOrProvinceCode"
          }
        },
        "type": "object"
      },
      "AdjustmentGroupCode": {
        "description": "Code identifying the general category of payment adjustment. Can be set to `CO` - Contractual Obligations, `CR` - Correction and Reversals, `OA` - Other Adjustments, `PI` - Payor Initiated Reductions, or `PR - Patient Responsibility.",
        "enum": [
          "CO",
          "CR",
          "OA",
          "PI",
          "PR"
        ],
        "type": "string"
      },
      "Adjustments": {
        "description": "Provider adjustment details including reason codes and amounts.",
        "properties": {
          "adjustmentReasonCode": {
            "description": "A code identifying the reason for the adjustment. Visit [Provider Adjustment Reason Codes](https://www.stedi.com/docs/healthcare/receive-claim-responses#provider-adjustment-reason-code) for a complete list and descriptions.",
            "type": "string"
          },
          "adjustmentReasonCodeValue": {
            "description": "The description of the `adjustmentReasonCode`.",
            "type": "string"
          },
          "providerAdjustmentAmount": {
            "description": "The amount of the adjustment, per the adjustment reason provided. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "providerAdjustmentIdentifier": {
            "description": "An identifier used to assist the receiver in identifying, tracking, or reconciling the adjustment.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdmittingDiagnosis": {
        "properties": {
          "admittingDiagnosisCode": {
            "description": "The admitting diagnosis code for the patient. It must be a valid code from the appropriate coding system. **Do not** submit the decimal for ICD codes; the decimal is implied. Also, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.",
            "maxLength": 30,
            "type": "string"
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/AdmittingDiagnosisQualifierCode"
          }
        },
        "required": [
          "admittingDiagnosisCode",
          "qualifierCode"
        ],
        "type": "object"
      },
      "AdmittingDiagnosisQualifierCode": {
        "description": "Code identifying the type of admitting diagnosis code used. Can be set to `ABJ` - International Classification of Diseases Clinical Modification (ICD-10-CM) Admitting Diagnosis or `BJ` - International Classification of Diseases Clinical Modification (ICD-9-CM) Admitting Diagnosis. Note that ICD-9 is deprecated and cannot be used in new claims.",
        "enum": [
          "ABJ",
          "BJ"
        ],
        "type": "string"
      },
      "AmbulanceCertification": {
        "description": "Required when the claim involves ambulance transport services.",
        "properties": {
          "certificationConditionIndicator": {
            "$ref": "#/components/schemas/AmbulanceCertificationCertificationConditionIndicator"
          },
          "conditionCodes": {
            "items": {
              "$ref": "#/components/schemas/AmbulanceCertificationConditionCodesItem"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "certificationConditionIndicator",
          "conditionCodes"
        ],
        "type": "object"
      },
      "AmbulanceCertificationCertificationConditionIndicator": {
        "description": "Code indicating whether there is an ambulance certification.",
        "enum": [
          "N",
          "Y"
        ],
        "type": "string"
      },
      "AmbulanceCertificationConditionCodesItem": {
        "description": "Code indicating the condition of the patient at the time of transport. You can provide up to five codes. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#ambulance-certification-condition-codes) for a complete list.",
        "enum": [
          "01",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "12"
        ],
        "type": "string"
      },
      "AmbulanceTransportInformation": {
        "description": "Information about the ambulance service provided to the patient.",
        "properties": {
          "ambulanceTransportReasonCode": {
            "$ref": "#/components/schemas/AmbulanceTransportReasonCode"
          },
          "patientWeightInPounds": {
            "description": "The weight of the patient, in pounds, at the time of transport. Provide this value as a decimal, such as `150.5`",
            "type": "string"
          },
          "roundTripPurposeDescription": {
            "description": "The reason for the round trip ambulance service.",
            "type": "string"
          },
          "stretcherPurposeDescription": {
            "description": "The reason for usage of a stretcher during ambulance service.",
            "type": "string"
          },
          "transportDistanceInMiles": {
            "description": "The number of miles the ambulance traveled to transport the patient. Provide this value as a decimal, such as `20.5`. Note that `0` (zero) is a valid value when ambulance services do not include a charge for mileage.",
            "type": "string"
          }
        },
        "required": [
          "ambulanceTransportReasonCode",
          "transportDistanceInMiles"
        ],
        "type": "object"
      },
      "AmbulanceTransportReasonCode": {
        "description": "Code indicating the reason for ambulance transport. For example, `A` - Patient was transported to nearest facility for care of symptoms, complaints, or both. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#ambulance-transport-reason-codes) for a complete list.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E"
        ],
        "type": "string"
      },
      "ApplicationModes": {
        "description": "The type of data in the request. This is either `production` when you send a request with a standard API key or `test` when you send a request in test mode with a [test API key](https://www.stedi.com/docs/api-reference/index#api-key-types). The `information` value is not currently used.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "production",
          "test",
          "information"
        ],
        "type": "string"
      },
      "AssistantSurgeon": {
        "description": "Information about the assistant surgeon who rendered the care. Use this object when the rendering providers provided these services in the role of the assistant surgeon.\n\nThis should be an individual, not an organization, and you should supply at least the surgeon's `lastName`, `taxonomyCode`, and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress"
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation"
          },
          "firstName": {
            "description": "The assistant surgeon's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The assistant surgeon's last name. You must include either the `lastName` or `organizationName` property in this object.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The assistant surgeon's middle name or initial.",
            "type": "string"
          },
          "npi": {
            "description": "The individual National Provider Identifier (NPI) assigned to the surgeon.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The assistant surgeon's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty. For example, code `\t1223S0112X` is for Oral and Maxillofacial Surgery.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "lastName",
          "taxonomyCode"
        ],
        "type": "object"
      },
      "AttachmentReportTypeCode": {
        "description": "Code indicating the title or contents of a document, report or supporting item. For example, `08` - Plan of Treatment or `CT` - Certification. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#attachment-report-type-codes) for a complete list.",
        "enum": [
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "13",
          "15",
          "21",
          "A3",
          "A4",
          "AM",
          "AS",
          "B2",
          "B3",
          "B4",
          "BR",
          "BS",
          "BT",
          "CB",
          "CK",
          "CT",
          "D2",
          "DA",
          "DB",
          "DG",
          "DJ",
          "DS",
          "EB",
          "HC",
          "HR",
          "I5",
          "IR",
          "LA",
          "M1",
          "MT",
          "NM",
          "OB",
          "OC",
          "OD",
          "OE",
          "OX",
          "OZ",
          "P4",
          "P5",
          "PE",
          "PN",
          "PO",
          "PQ",
          "PY",
          "PZ",
          "RB",
          "RR",
          "RT",
          "RX",
          "SG",
          "V5",
          "XP"
        ],
        "type": "string"
      },
      "Attending": {
        "description": "Information about the individual who has overall responsibility for the patient's medical care and treatment reported in the claim. This information is required when the claim contains any services other than non-scheduled transportation claims.\n\nThis provider should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "deprecated": true
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. This is **required**.",
            "maxLength": 60,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/OperatingPhysicianIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier referenced by `secondaryIdentificationQualifierCode`. For example, if `secondaryIdentificationQualifierCode` is set to `0B`, this property should be the provider's state license number.\n\nYou can only include one secondary identifier for the provider.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "description": "The provider's [taxnonomy code](https://www.cms.gov/medicare/enrollment-renewal/providers-suppliers/health-care-taxonomy), a unique 10-character code that designates their classification and specialization. Only applies to the attending provider.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthOrCertIndicator": {
        "description": "Code indicating whether the benefit is subject to prior authorization or certification.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "N",
          "U",
          "Y"
        ],
        "type": "string"
      },
      "BadRequestException": {
        "description": "The server cannot process the request due to an apparent client error.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "BenefitRelatedEntityIdentification": {
        "description": "Code identifying the type of value provided in `entityIdentificationValue`. For example, `FI` - Federal Taxpayer's Identification Number.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "24",
          "34",
          "46",
          "FA",
          "FI",
          "II",
          "MI",
          "NI",
          "PI",
          "PP",
          "SV",
          "XV",
          "XX"
        ],
        "type": "string"
      },
      "BenefitsAdditionalInformation": {
        "description": "Identifying information specific to this type of benefit.",
        "properties": {
          "alternativeListId": {
            "description": "The alternative list ID. This identifier allows the payer to specify a list of drugs and its alternative drugs with the associated formulary status for the patient.",
            "type": "string"
          },
          "coverageListId": {
            "description": "The coverage list ID. This identifier allows the payer to specify the identifier of a list of drugs that have coverage limitations for the associated patient.",
            "type": "string"
          },
          "drugFormularyNumber": {
            "description": "The drug formulary number.",
            "type": "string"
          },
          "familyUnitNumber": {
            "description": "The family unit number. This is returned when the payer is a pharmacy benefits manager (PBM) and the patient has a suffix to their member ID number that is used in the NCPDP Telecom Standard Insurance Segment, in field `303-C3` (Person Code). For all other uses, the family unit number (suffix) is considered part of the patient's member ID number.",
            "type": "string"
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number for the patient's health insurance plan.",
            "type": "string"
          },
          "hicNumber": {
            "description": "The health insurance claim number (HICN). Note that CMS previously used the HICN to uniquely identify Medicare beneficiaries. However, they have since transitioned to a new, randomized Medicare Beneficiary Identifier (MBI) format. The HICN is no longer used for Medicare transactions but this property is now used by some payers to return MBI. If you receive a value in this property that matches the format specified in the [Medicare Beneficiary Identifier documentation](https://www.cms.gov/training-education/partner-outreach-resources/new-medicare-card/medical-beneficiary-identifiers-mbis), the number is likely an MBI and we recommend sending a follow-up eligibility check to CMS for additional benefits data. This most commonly occurs with patients who are covered by both Medicare and Medicaid.",
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "type": "string"
          },
          "medicaidRecepientIdNumber": {
            "description": "The Medicaid Recipient Identification number.",
            "type": "string"
          },
          "medicalAssistanceCategory": {
            "description": "The medical assistance category.",
            "type": "string"
          },
          "memberId": {
            "description": "The patient's member ID.",
            "type": "string"
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The plan network identification number.",
            "type": "string"
          },
          "planNumber": {
            "description": "The insurance plan number.",
            "type": "string"
          },
          "policyNumber": {
            "description": "The patient's policy number.",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "The prior authorization number.",
            "type": "string"
          },
          "referralNumber": {
            "description": "The referral number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitsDateInformation": {
        "description": "Dates associated with the benefits.\n  - These dates only apply to the `benefitsInformation` object in which this `benefitsDateInformation` is provided.",
        "properties": {
          "added": {
            "description": "Added date. Payers may return this information in the case of retroactive eligibility.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admission": {
            "description": "The admission date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admissions": {
            "description": "The date(s) for admission.",
            "items": {
              "$ref": "#/components/schemas/DtpDate"
            },
            "type": "array"
          },
          "benefit": {
            "description": "The benefit date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitBegin": {
            "description": "The date when the benefit begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitEnd": {
            "description": "The date when the benefit ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "certification": {
            "deprecated": true,
            "description": "The certification date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraBegin": {
            "deprecated": true,
            "description": "The date when COBRA coverage begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraEnd": {
            "deprecated": true,
            "description": "The date when COBRA coverage ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "completion": {
            "description": "The completion date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "coordinationOfBenefits": {
            "description": "The coordination of benefits date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfDeath": {
            "description": "The date of death.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfLastUpdate": {
            "description": "The date when the plan information was last updated.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharge": {
            "description": "The discharge date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharges": {
            "description": "The date(s) when the patient was discharged.",
            "items": {
              "$ref": "#/components/schemas/DtpDate"
            },
            "type": "array"
          },
          "effectiveDateOfChange": {
            "deprecated": true,
            "description": "The effective date of change.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibility": {
            "description": "Plan eligibility dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityBegin": {
            "description": "The date when the patient is first eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityEnd": {
            "description": "The date when the patient is no longer eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "enrollment": {
            "deprecated": true,
            "description": "The date when the patient is enrolled in the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "issue": {
            "deprecated": true,
            "description": "The issue date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "latestVisitOrConsultation": {
            "description": "The latest visit or consultation date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodEnd": {
            "description": "The end of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodStart": {
            "description": "The start of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "plan": {
            "description": "Only included when multiple plans apply to the patient or multiple plan periods apply.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planBegin": {
            "description": "Only included when multiple plans apply to the patient or multiple plan periods apply.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planEnd": {
            "deprecated": true,
            "description": "The date coverage from the plan ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyEffective": {
            "deprecated": true,
            "description": "The date when the policy becomes effective.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyExpiration": {
            "deprecated": true,
            "description": "The date when the policy expires.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateEnd": {
            "deprecated": true,
            "description": "The end of period when the plan premium payments are up-to-date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidtoDateBegin": {
            "deprecated": true,
            "description": "The start of the period when the plan premium was paid in full.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "primaryCareProvider": {
            "description": "The primary care provider date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "service": {
            "description": "The service date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "status": {
            "description": "The status date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitsInformation": {
        "properties": {
          "additionalInformation": {
            "description": "A free-form message containing additional information about the benefits in the response.",
            "items": {
              "$ref": "#/components/schemas/AdditionalInformation"
            },
            "type": "array"
          },
          "authOrCertIndicator": {
            "$ref": "#/components/schemas/AuthOrCertIndicator",
            "description": "Code indicating whether the benefit is subject to prior authorization or certification. Can be `Y` - Yes, `N` - No, or `U` - Unknown.\n\nPayers may sometimes return other non-compliant values."
          },
          "benefitAmount": {
            "description": "The monetary benefit amount, such as a patient's co-pay or deductible. This value is expressed as a decimal, such as 100.00. \n \n The payer will always send a value in this property when the `benefitsInformation.code` = `B` - Co-Payment, `C` - Deductible, `G` - Out of Pocket (Stop Loss), `J` - Cost Containment, or `Y` - Spend Down. For those codes, this value represents the patient's portion of responsibility. \n \n The payer will **never** send this value when `benefitsInformation.code` = `A` - Co-Insurance. This property can contain zero when the patient has no responsibility. \n \n Learn more about [patient costs](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits).",
            "type": "string"
          },
          "benefitPercent": {
            "description": "The percentage of the benefit, such as co-insurance. This property can contain zero when the patient has no responsibility. \n \n The payer will always send a value in this property when `benefitsInformation.code` = `A` - Co-Insurance. For this code, this value represents the patient's portion of the responsibility. The percentage is expressed as a decimal, such as `0.80` represents 80%. \n \n The payer will **never** send a value in this property when `benefitsInformation.code` = `B` - Co-Payment, `C` - Deductible, `G` - Out of Pocket (Stop Loss), `J` - Cost Containment, or `Y` - Spend Down. \n \n Learn more about [patient costs](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits).",
            "type": "string"
          },
          "benefitQuantity": {
            "description": "The quantity of the benefit, qualified by the type specified in `quantityQualifier`. For example, `10` when the `quantityQualifier` is `Visits`.",
            "type": "string"
          },
          "benefitsAdditionalInformation": {
            "$ref": "#/components/schemas/BenefitsAdditionalInformation"
          },
          "benefitsDateInformation": {
            "$ref": "#/components/schemas/BenefitsDateInformation"
          },
          "benefitsRelatedEntities": {
            "description": "Other entities associated with the eligibility or benefits. This could be a provider, an individual, an organization, or another payer. When present, this array typically contains information about the patient's primary care provider (PCP), another organization that handles a specific benefit type (such as telehealth mental health services), or another health plan for the patient (coordination of benefits scenarios).\n- This is where information for a crossover carrier such as Medicaid or Medicare is provided, if it's applicable to the patient and the payer supports it.\n- For Blue Cross Blue Shield (BCBS) payers, Stedi returns an entry containing information about the patient's home plan - the plan that actually verified the coverage. In this object, the `entityIdentifier` property is set to `Party Performing Verification`. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#bcbs-home-plan)",
            "items": {
              "$ref": "#/components/schemas/BenefitsRelatedEntity"
            },
            "type": "array"
          },
          "benefitsRelatedEntity": {
            "$ref": "#/components/schemas/BenefitsRelatedEntity",
            "deprecated": true,
            "description": "Please use `benefitsInformation.benefitsRelatedEntities` instead."
          },
          "benefitsServiceDelivery": {
            "items": {
              "$ref": "#/components/schemas/BenefitsServiceDelivery"
            },
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/BenefitsInformationCode"
          },
          "compositeMedicalProcedureIdentifier": {
            "$ref": "#/components/schemas/CompositeMedicalProcedureIdentifier"
          },
          "coverageLevel": {
            "$ref": "#/components/schemas/BenefitsInformationCoverageLevelName"
          },
          "coverageLevelCode": {
            "$ref": "#/components/schemas/BenefitsInformationCoverageLevelCode"
          },
          "eligibilityAdditionalInformation": {
            "$ref": "#/components/schemas/EligibilityAdditionalInformation",
            "deprecated": true,
            "description": "Please use `benefitsInformation.eligibilityAdditionalInformationList` instead."
          },
          "eligibilityAdditionalInformationList": {
            "description": "Used when there are multiple Nature of Injury Codes or a Facility Type Codes included in the response.",
            "items": {
              "$ref": "#/components/schemas/EligibilityAdditionalInformation"
            },
            "type": "array"
          },
          "headerLoopIdentifierCode": {
            "description": "The loop header identifier number in the `LS` segment of the original X12 EDI transaction.",
            "type": "string"
          },
          "inPlanNetworkIndicator": {
            "$ref": "#/components/schemas/InPlanNetworkIndicatorName"
          },
          "inPlanNetworkIndicatorCode": {
            "$ref": "#/components/schemas/InPlanNetworkIndicatorCode"
          },
          "insuranceType": {
            "$ref": "#/components/schemas/InsuranceTypeName"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/InsuranceTypeCode",
            "description": "Code identifying the type of insurance policy. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#insurance-type-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "name": {
            "$ref": "#/components/schemas/BenefitsInformationName"
          },
          "planCoverage": {
            "description": "The specific product name or special program name for an insurance plan. For example `Gold 1-2-3`.\n\nPayers are normally required to send the plan name when `benefitsInformation.code` is set to values `1` - `8` and the `benefitsInformation.serviceTypeCodes` contains `30` (Health Benefit Plan Coverage). However, behavior may vary by payer, so don't rely on this information being present in the response. Note that the plan name returned in this property may not exactly match the name the payer uses in official plan documents or marketing literature.\n\nVisit [What's the plan name?](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#what’s-the-plan-name%3F) in the benefits response documentation for more details.",
            "type": "string"
          },
          "quantityQualifier": {
            "$ref": "#/components/schemas/QuantityQualifierName",
            "description": "The name of the `quantityQualifierCode`.\n\nPayers may sometimes return other non-compliant values."
          },
          "quantityQualifierCode": {
            "$ref": "#/components/schemas/QuantityQualifierCode",
            "description": "Code indicating the type of quantity for the benefit. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#quantity-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "serviceTypeCodes": {
            "description": "An array of [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) related to the benefit type.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceTypeCode"
            },
            "type": "array"
          },
          "serviceTypes": {
            "description": "The names of the service type codes listed in the `serviceTypeCodes` array.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceType"
            },
            "type": "array"
          },
          "timeQualifier": {
            "$ref": "#/components/schemas/TimeQualifierName",
            "description": "The name of the `timeQualifierCode`.\n\nPayers may sometimes return other non-compliant values."
          },
          "timeQualifierCode": {
            "$ref": "#/components/schemas/TimeQualifierCode",
            "description": "Code indicating the time period for the benefit information. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#time-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "trailerLoopIdentifierCode": {
            "description": "The loop trailer identifier number in the `LE` segment of the original X12 EDI transaction.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenefitsInformationCode": {
        "description": "The code indicating the type of benefits information. Visit [Eligibility and benefit codes](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#benefit-type-codes) for more information.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "A",
          "B",
          "C",
          "CB",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "MC",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y"
        ],
        "type": "string"
      },
      "BenefitsInformationCoverageLevelCode": {
        "description": "Code indicating the level of coverage for the patient. \n\nThis will either be `CHD` - Children Only, `DEP` - Dependents Only, `ECH` - Employee and Children, `EMP` - Employee Only, `ESP` - Employee and Spouse, `FAM` - Family, `IND` - Individual, `SPC` - Spouse and Children, `SPO` - Spouse Only, or `Unknown`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "CHD",
          "DEP",
          "ECH",
          "EMP",
          "ESP",
          "FAM",
          "IND",
          "SPC",
          "SPO"
        ],
        "type": "string"
      },
      "BenefitsInformationCoverageLevelName": {
        "description": "The full name of the coverage level code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Children Only",
          "Dependents Only",
          "Employee and Children",
          "Employee Only",
          "Employee and Spouse",
          "Family",
          "Individual",
          "Spouse and Children",
          "Spouse Only"
        ],
        "type": "string"
      },
      "BenefitsInformationName": {
        "description": "The full name of the benefits information code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Active Coverage",
          "Active - Full Risk Capitation",
          "Active - Services Capitated",
          "Active - Services Capitated to Primary Care Physician",
          "Active - Pending Investigation",
          "Inactive",
          "Inactive - Pending Eligibility Update",
          "Inactive - Pending Investigation",
          "Co-Insurance",
          "Co-Payment",
          "Deductible",
          "Coverage Basis",
          "Benefit Description",
          "Exclusions",
          "Limitations",
          "Out of Pocket (Stop Loss)",
          "Unlimited",
          "Non-Covered",
          "Cost Containment",
          "Reserve",
          "Primary Care Provider",
          "Pre-existing Condition",
          "Managed Care Coordinator",
          "Services Restricted to Following Provider",
          "Not Deemed a Medical Necessity",
          "Benefit Disclaimer",
          "Second Surgical Opinion Required",
          "Other or Additional Payor",
          "Prior Year(s) History",
          "Card(s) Reported Lost/Stolen",
          "Contact Following Entity for Eligibility or Benefit Information",
          "Cannot Process",
          "Other Source of Data",
          "Health Care Facility",
          "Spend Down"
        ],
        "type": "string"
      },
      "BenefitsRelatedEntity": {
        "description": "Identify another entity associated with the eligibility or benefits. This could be a provider, an individual, an organization, or another payer.\n\nThis is where information for a crossover carrier such as Medicaid or Medicare is provided, if it's applicable to the patient and the payer supports it.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The address of the entity, such as a provider or organization."
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformation",
            "description": "The contact information for the entity, such as a phone number or email address."
          },
          "entityFirstname": {
            "description": "The first name of the entity, if the entity is a person.",
            "type": "string"
          },
          "entityIdentification": {
            "$ref": "#/components/schemas/BenefitRelatedEntityIdentification",
            "description": "Code identifying the type of identifier in the `entityIdentificationValue` property. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#identification-code-qualifiers) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "entityIdentificationValue": {
            "description": "The identification number for the entity, qualified by the code in `entityIdentification`.",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/RelatedEntityIdentifierName",
            "description": "Code identifying an organizational entity, a physical location, property, or individual. When set to `Party Performing Verification` for a BCBS payer, this is the patient's home plan.\n\nPayers may sometimes return other non-compliant values."
          },
          "entityMiddlename": {
            "description": "The middle name or initial of the entity, if the entity is a person.",
            "type": "string"
          },
          "entityName": {
            "description": "The last name (if the entity is a person) or the business name (if the entity is an organization).",
            "type": "string"
          },
          "entityRelationship": {
            "$ref": "#/components/schemas/BenefitsRelatedEntityRelationshipCode",
            "description": "Code specifying the relationship between the entity and the patient. Can be `01` - Parent, `02` - Child, `27` - Domestic Partner, `41` - Spouse, `48` - Employee, `65` - Other, or `72` - Unknown.\n\nPayers may sometimes return other non-compliant values."
          },
          "entitySuffix": {
            "description": "The name suffix, such as Sr. Jr. or III.",
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier"
          },
          "providerInformation": {
            "$ref": "#/components/schemas/ProviderInformation"
          }
        },
        "type": "object"
      },
      "BenefitsRelatedEntityRelationshipCode": {
        "description": "Code specifying the relationship between the entity and the patient.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "01",
          "02",
          "27",
          "41",
          "48",
          "65",
          "72"
        ],
        "type": "string"
      },
      "BenefitsServiceDelivery": {
        "description": "The delivery or usage pattern for the benefits.",
        "properties": {
          "deliveryOrCalendarPatternCode": {
            "$ref": "#/components/schemas/DeliveryOrCalendarPatternQualifier"
          },
          "deliveryOrCalendarPatternQualifier": {
            "$ref": "#/components/schemas/DeliveryOrCalendarPatternQualifier"
          },
          "deliveryOrCalendarPatternQualifierCode": {
            "$ref": "#/components/schemas/DeliveryOrCalendarPatternQualifierCode"
          },
          "deliveryPatternTimeCode": {
            "$ref": "#/components/schemas/DeliveryPatternTimeQualifier"
          },
          "deliveryPatternTimeQualifier": {
            "$ref": "#/components/schemas/DeliveryPatternTimeQualifier"
          },
          "deliveryPatternTimeQualifierCode": {
            "$ref": "#/components/schemas/DeliveryPatternTimeQualifierCode",
            "description": "Code specifying the time for routine shipments or deliveries. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#delivery-pattern-time-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "numOfPeriods": {
            "description": "The number of periods in the time period. For example, `12` when the `timePeriodQualifier` is `Hour`.",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the benefit. For example, `10` when the `quantityQualifier` is `Visits`.",
            "type": "string"
          },
          "quantityQualifier": {
            "$ref": "#/components/schemas/BenefitsServiceDeliveryQuantityQualifier",
            "description": "The name of the `quantityQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values."
          },
          "quantityQualifierCode": {
            "$ref": "#/components/schemas/BenefitsServiceDeliveryQuantityQualifierCode",
            "description": "Code specifying the type of quantity for the benefit. Can be `DY` - Days, `FL` - Units, `HS` - Hours, `MN` - Month, and `VS` - Visits.\n\nPayers may sometimes return other non-compliant values."
          },
          "sampleSelectionModulus": {
            "description": "Specifies the sampling frequency, based on the unit of measure. For example `every 2 months` or `once per calendar year`.",
            "type": "string"
          },
          "timePeriodQualifier": {
            "$ref": "#/components/schemas/TimePeriodQualifier",
            "description": "The name of the `timePeriodQualifierCode`. For example, `Calendar Year`.\n\nPayers may sometimes return other non-compliant values."
          },
          "timePeriodQualifierCode": {
            "$ref": "#/components/schemas/TimePeriodQualifierCode",
            "description": "Code specifying the time period for the benefit information. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#time-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "unitForMeasurementCode": {
            "$ref": "#/components/schemas/UnitForMeasurement",
            "deprecated": true
          },
          "unitForMeasurementQualifier": {
            "$ref": "#/components/schemas/UnitForMeasurement",
            "description": "The name of the `unitForMeasurementQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values."
          },
          "unitForMeasurementQualifierCode": {
            "$ref": "#/components/schemas/UnitForMeasurementCode",
            "description": "Code specifying the unit of measurement. For example, `DA` - Days, `MO` - Months, `VS` - Visits, `WK` - Week, and `YR` - Years.\n\nPayers may sometimes return other non-compliant values."
          }
        },
        "type": "object"
      },
      "BenefitsServiceDeliveryQuantityQualifier": {
        "description": "The name of the `quantityQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Days",
          "Units",
          "Hours",
          "Month",
          "Visits"
        ],
        "type": "string"
      },
      "BenefitsServiceDeliveryQuantityQualifierCode": {
        "description": "Code specifying the type of quantity.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "DY",
          "FL",
          "HS",
          "MN",
          "VS"
        ],
        "type": "string"
      },
      "Billing": {
        "description": "Information about the billing provider.\n- For tax identification, you **must** include either the provider's Social Security Number (SSN) in the `ssn` property _or_ their Employer Identification Number (EIN) in the `employerId` property, but not both.\n- If the billing provider has an NPI, you must include it in the `npi` property. If the billing provider does not have an NPI, you must include either the `commercialNumber` or the `locationNumber` for identification. Some payers may require the `npi` **and** either the `commercialNumber` or the `locationNumber` as a secondary identifier.\n- Some solo providers may use their SSN as their EIN. In this case, submit the SSN in the `ssn` property and leave the `employerId` property blank.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The billing provider's address. For United States addresses, you **must** include the full nine-digit zip code with no separators, such as `100031502`. If you don't know the full zip code, you can find it using the [USPS ZIP Code Lookup](https://tools.usps.com/zip-code-lookup.htm) tool."
          },
          "commercialNumber": {
            "description": "The billing provider's commercial number, as assigned by this payer. The commercial number is a unique identifier that the payer assigns to the provider. For providers without an NPI, you must provide either the `commercialNumber` or the `locationNumber` for identification.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "description": "Contact information for the billing provider. You can include a maximum of two objects in this array."
          },
          "employerId": {
            "description": "The billing provider's Employer Identification Number (EIN). Typically a string of exactly nine numbers with no separators, unless otherwise instructed by the payer. If you include this value, you cannot include the `ssn`.",
            "type": "string"
          },
          "firstName": {
            "description": "The billing provider's first name, if the provider is an individual.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name, if the provider is an individual.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The billing provider's location number. For providers without an NPI, you must provide either the `commercialNumber` or the `locationNumber` for identification.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial, if the provider is an individual.",
            "type": "string"
          },
          "npi": {
            "description": "The billing provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "ssn": {
            "description": "The billing provider's Social Security Number. Must be a string of exactly nine numbers with no separators. If you include this value, you cannot include the `employerId`.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The billing provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the billing provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BillingProviderType": {
        "description": "Defines the billing provider type.",
        "enum": [
          "BillingProvider"
        ],
        "type": "string"
      },
      "BusinessContactInformation": {
        "description": "A person or office to whom administrative communications should be directed.",
        "properties": {
          "contactMethods": {
            "items": {
              "$ref": "#/components/schemas/ContactMethod"
            },
            "type": "array"
          },
          "contactName": {
            "description": "The name of the contact person or entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COB": {
        "properties": {
          "benefitOverlap": {
            "description": "If set to `true`, the COB response contains benefits overlap. A benefits overlap indicates that the patient has active coverage from two or more payers for the same service type code, including the subtypes of medical coverage.",
            "type": "boolean"
          },
          "classification": {
            "description": "The classification for the benefits that have been discovered in the COB response. Stedi returns one of the following values:\n    - `CobInstanceExistsPrimacyDetermined`: COB Instance Exists and Primacy was determined\n    - `CobInstanceExistsPrimacyUndetermined`: COB Instance Exists and Primacy was NOT determined\n    - `CoverageOverlapNoBenefitOverlap`: Coverage Overlap detected with no Benefit Overlap\n    - `CoverageOverlapExistsNotSubjectToCob`: Coverage Overlap exists and is not subject to COB\n    - `MemberFoundNoCob`: Member found, no COB found",
            "type": "string"
          },
          "coverageOverlap": {
            "description": "If set to `true`, the COB response contains a coverage overlap, meaning that the patient has active coverage with two or more payers during the service date submitted in the COB request.\n    - Coverage overlap can be for coverages from the same payer if the member ID is different between the two coverages.\n    - A coverage overlap is necessary for a COB instance to exist.\n    - A coverage overlap can exist without there being a COB instance if either of the two coverages is not subject to COB for any reason.",
            "type": "boolean"
          },
          "instanceExists": {
            "description": "If set to `true`, the COB response contains at least one coordination of benefits instance.",
            "type": "boolean"
          },
          "primacyDetermined": {
            "description": "If set to `true`, Stedi was able to determine the primary payer for the patient. If Stedi was unable to determine the primary payer, you must contact the payers directly to determine primacy.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "COBBenefitsDateInformation": {
        "description": "Dates associated with the benefits. Dates listed only apply to the `benefitsInformation` object in which this benefitsDateInformation is provided.",
        "properties": {
          "benefitBegin": {
            "description": "The date the benefits begin.",
            "type": "string"
          },
          "benefitEnd": {
            "description": "The date the benefits end.",
            "type": "string"
          },
          "coordinationOfBenefits": {
            "description": "Date or date range used for coordination of benefits instance.",
            "type": "string"
          },
          "periodEnd": {
            "description": "The end of the coverage overlap. Included when Stedi finds an instance of coverage overlap.",
            "type": "string"
          },
          "periodStart": {
            "description": "The start of the coverage overlap Included when Stedi finds an instance of coverage overlap.",
            "type": "string"
          },
          "planBegin": {
            "description": "Coverage start date. If multiple coverage start dates exist due to different start dates on various coverage/service types, this date applies to the medical coverage.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBBenefitsInformation": {
        "properties": {
          "benefitsDateInformation": {
            "$ref": "#/components/schemas/COBBenefitsDateInformation",
            "description": "Dates associated with the benefits. All properties may either be expressed as a single date. Dates listed only apply to the `benefitsInformation` object in which this `benefitsDateInformation` is provided."
          },
          "benefitsRelatedEntities": {
            "description": "Contains either information about another payer with which the patient has coverage or information about the subscriber associated with the additional health plan.\n\nFor example, if you submit a COB check for a dependent to Cigna and Stedi finds additional coverage through Aetna, the `benefitsRelatedEntity` would include subscriber details for the Aetna plan.",
            "items": {
              "$ref": "#/components/schemas/COBBenefitsRelatedEntity"
            },
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/COBResponseBenefitsInformationCode",
            "description": "The COB benefits information code. \n\nStedi returns entries with `benefitsInformation.code` = `1` for every active coverage type for each health plan.\n\nStedi returns entries with `benefitsInformation.code` = `R` when overlapping coverage exists within the date of service provided in the COB check."
          },
          "name": {
            "$ref": "#/components/schemas/COBBenefitsInformationName",
            "description": "The name of the benefit information code."
          },
          "serviceTypeCodes": {
            "description": "Code identifying the type of services.",
            "items": {
              "$ref": "#/components/schemas/COBResponseServiceTypeCode"
            },
            "type": "array"
          },
          "serviceTypes": {
            "description": "The full names of the service type codes.",
            "items": {
              "$ref": "#/components/schemas/COBResponseServiceTypeCodeName"
            },
            "type": "array"
          },
          "subscriber": {
            "$ref": "#/components/schemas/COBResponseBenefitsInformationSubscriber",
            "description": "Information about the primary policyholder for the insurance plan related to this `benefitsInformation` instance."
          }
        },
        "type": "object"
      },
      "COBBenefitsInformationName": {
        "description": "The full name of the benefits information code.",
        "enum": [
          "Active Coverage",
          "Inactive",
          "Other or Additional Payor",
          "Cannot Process"
        ],
        "type": "string"
      },
      "COBBenefitsRelatedEntity": {
        "properties": {
          "entityFirstname": {
            "description": "The entity's first name, when the entity is a subscriber.",
            "type": "string"
          },
          "entityIdentification": {
            "$ref": "#/components/schemas/EntityIdentificationCode",
            "description": "Code identifying the type of `benefitsInformation.entityIdentificationValue`. This can be either `MI` - Member ID or `PI` - Payer ID."
          },
          "entityIdentificationValue": {
            "description": "The identification number for the entity, qualified by the code in `entityIdentification`. The ID returned in this property is proprietary to our COB check product, so you can't use it as the Payer ID for eligibility checks or other API requests to Stedi. It likely doesn't match the Payer IDs listed in the [Payer Network](https://www.stedi.com/healthcare/network).",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/EntityIdentifierName",
            "description": "Identifies the type of entity. This can either be a type of payer or the subscriber associated with the COB coverage.\n\nNote that Stedi uses `Payer` either when there is no COB instance or when Stedi is unable to determine primacy."
          },
          "entityLastname": {
            "description": "The entity's last name, when the entity is a subscriber.",
            "type": "string"
          },
          "entityMiddlename": {
            "description": "The entity's middle name or initial, when the entity is a subscriber.",
            "type": "string"
          },
          "entityName": {
            "description": "The payer's business name, when the entity is a payer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBDependent": {
        "description": "A dependent for which you want to check coordination of benefits.\n- An individual qualifies as a dependent when they are listed as a dependent on the subscriber's insurance plan AND the payer cannot uniquely identify them through information outside the subscriber's policy. For example, if the dependent has their own member ID number, you should identify them in the `subscriber` object instead.\n- The demographic information you provide **must** patch the payer's data exactly. For example, if the payer has the dependent's name as `Jonathan Doe`, a COB request for `Jon Doe` will fail because the name doesn't match the payer's records.",
        "properties": {
          "dateOfBirth": {
            "description": "The dependent's date of birth.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The dependent's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The dependent's last name.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "ssn": {
            "description": "The dependent's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "COBEncounter": {
        "description": "Information about the encounter.\n- You can submit COB checks with the `30` service type code for Health Benefit Plan Coverage. This is the broadest service type code that covers all medical services and subtypes included in the patient’s health plan.\n- The service dates you provide **must** be within the past 2 years. COB checks don't support requests with dates outside of this range.\n- Don't send service dates that are in the future. Future service dates typically result in errors from the payer.\n- If you don't specify a service date (either a single day or a range of dates), Stedi defaults to using the current date.",
        "properties": {
          "beginningDateOfService": {
            "description": "The beginning date of service. If you include this value, you must also include the `endDateOfService`.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateOfService": {
            "description": "The date of service of the encounter.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endDateOfService": {
            "description": "The end date of service. If you include this value, you must also include the `beginningDateOfService`.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceTypeCode": {
            "$ref": "#/components/schemas/COBServiceTypeCode"
          }
        },
        "type": "object"
      },
      "COBMetaData": {
        "properties": {
          "applicationMode": {
            "description": "The type of data in the request. Stedi uses `production` to identify transactions processed in our live clearinghouse environment.",
            "type": "string"
          },
          "outboundTraceId": {
            "description": "The value provided in the `submitterTransactionIdentifier` property in the original COB request.",
            "type": "string"
          },
          "traceId": {
            "description": "A unique ID Stedi assigns to the COB request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBPayer": {
        "properties": {
          "name": {
            "description": "The payer's name, such as `CIGNA`.",
            "type": "string"
          },
          "payerIdentification": {
            "description": "The `tradingPartnerServiceId` (Payer ID) you used to identify the payer in the COB request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBPlanDateInformation": {
        "description": "Dates associated with the patient's health plan coverage. This information is used to determine their eligibility for benefits.\n- The provided dates apply to every every benefit within the patient's health plan unless specifically noted within a `benefitsInformation.benefitsDateInformation` object.\n- If the payer sends back date(s) that are different for the subscriber and dependents, Stedi includes only the dates for the dependent in this object and omits the subscriber's date(s). Dependents can have different coverage dates than the subscriber due to qualifying life events, such as starting a new job or passing the age limit for coverage through their parent's plan.",
        "properties": {
          "planBegin": {
            "description": "When the patient's health plan coverage begins.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "planEnd": {
            "description": "When the patient's health plan coverage ends.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBProvider": {
        "description": "Information about the entity requesting the coverage.",
        "properties": {
          "firstName": {
            "description": "The provider's first name. This property is required if the provider is an individual.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. This property is required if the provider is an individual.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "npi"
        ],
        "type": "object"
      },
      "COBResponseBenefitsInformationCode": {
        "description": "The code indicating the type of benefits information. Can be `1` - Active Coverage, `6` - Inactive, `R` - Other or Additional Payor, or `V` - Cannot Process.",
        "enum": [
          "1",
          "6",
          "R",
          "V"
        ],
        "type": "string"
      },
      "COBResponseBenefitsInformationSubscriber": {
        "properties": {
          "dateOfBirth": {
            "description": "The subscriber's date of birth.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBResponseDependent": {
        "description": "Information about the dependent listed in the original COB request.",
        "properties": {
          "aaaErrors": {
            "description": "When a COB request fails, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The dependent's address."
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The dependent's date of birth.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The dependent's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the dependent's gender. Can be `F` - Female, `M` - Male, or `U` - Unknown."
          },
          "groupNumber": {
            "description": "The group number associated with the subscriber's insurance policy.",
            "type": "string"
          },
          "lastName": {
            "description": "The dependent's last name.",
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The dependent's middle name or initial.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/RelationToSubscriberCodeName",
            "description": "The name of the `relationToSubscriberCode`. For example, `Child` when the code is `19`."
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/RelationToSubscriberCode",
            "description": "For the dependent, this can be `01` - Spouse, `19` - Child, `20` Employee, `21` - Unknown, `39` - Organ Donor, `40` - Cadaver Donor, `53` - Life Partner, or `G8` - Other Relationship."
          },
          "ssn": {
            "description": "The dependent's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBResponseProvider": {
        "description": "Information about the entity that submitted the original eligibility check request. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider.",
        "properties": {
          "aaaErrors": {
            "description": "When a COB request fails, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "providerFirstName": {
            "description": "The provider's first name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerName": {
            "description": "The provider's last name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerOrgName": {
            "description": "The provider's organization name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBResponseServiceTypeCode": {
        "description": "Code identifying the type of services included in a `benefitsInformation` object.",
        "enum": [
          "1",
          "30",
          "33",
          "35",
          "47",
          "52",
          "88",
          "98",
          "AL",
          "MH",
          "UC"
        ],
        "type": "string"
      },
      "COBResponseServiceTypeCodeName": {
        "description": "The names of the `benefitsInformation.serviceTypeCodes` included in the response.",
        "enum": [
          "Medical Care",
          "Health Benefit Plan Coverage",
          "Chiropractic",
          "Dental Care",
          "Hospital",
          "Hospital - Emergency Medical",
          "Pharmacy",
          "Professional (Physician) Visit - Office",
          "Vision (Optometry)",
          "Mental Health",
          "Urgent Care"
        ],
        "type": "string"
      },
      "COBResponseSubscriber": {
        "description": "Information about the primary policyholder for the insurance plan listed in the COB request.",
        "properties": {
          "aaaErrors": {
            "description": "When a payer rejects your request, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The subscriber's address."
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The subscriber's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the subscriber's gender. Can be `F`- Female, `M` - Male, or `U` - Unknown."
          },
          "groupNumber": {
            "description": "The group number associated with the subscriber's insurance policy.",
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name.",
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "COBServiceTypeCode": {
        "description": "The service type code for the encounter. If not provided, the default value is `30`.",
        "enum": [
          "30"
        ],
        "type": "string"
      },
      "COBSubscriber": {
        "description": "The primary policyholder for the insurance plan _or_ a dependent with a unique member ID. If a dependent has a unique member ID, include their information here and leave `dependent` empty.\n\n\n\nThe demographic information you provide **must** match the payer's data exactly. For example, if the payer has the subscriber's name as `Jonathan Doe`, a COB request for `Jon Doe` will fail because the name doesn't match the payer's records. Also note that:\n  - Any prefix on the member's card is considered part of the `memberID` used for the search.\n  - Mismatches in the `memberId` are one of the most common causes of `Member Not Found` errors. We strongly recommend first performing an [Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) and using the `memberId` in the response to populate your COB check.\n  - We recommend including the `ssn` property in addition to the `memberId` if possible. This allows Stedi to do an additional search for the patient when the `memberId` doesn't return a match.\n  - Stedi can identify coverage overlap for the same payer if the member ID differs between the two coverages.",
        "properties": {
          "dateOfBirth": {
            "description": "The subscriber's date of birth.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The patient's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy. \n\nYou must provide at least one of the `memberId` or `ssn` properties in the request. However, we recommend including both if possible. This allows Stedi to do an additional search for patient information when the `memberId` doesn't return a match.",
            "maxLength": 80,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9-]+$",
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number (SSN). \n\nYou must provide at least one of the `memberId` or `ssn` properties in the request. However, we recommend including both if possible. This allows Stedi to do an additional search for patient information when the `memberId` doesn't return a match.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "CertificationConditionCodeAppliesIndicator": {
        "description": "Code indicating whether an EPSDT referral was given to the patient. Can be set to `N` - No or `Y` - Yes.",
        "enum": [
          "N",
          "Y"
        ],
        "type": "string"
      },
      "CertificationTypeCode": {
        "description": "Code indicating the type of certification. Can be set to `I` - Initial, `R` - Renewal, or `S` - Revised.",
        "enum": [
          "I",
          "R",
          "S"
        ],
        "type": "string"
      },
      "Claim": {
        "description": "Information about the claim and its status.",
        "properties": {
          "claimStatus": {
            "$ref": "#/components/schemas/ComponentsSchemasClaimStatus",
            "description": "The status, required action, and paid information of a claim or service line."
          },
          "serviceDetails": {
            "description": "Information about specific service lines and their status.",
            "items": {
              "$ref": "#/components/schemas/ServiceDetail"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentDetails": {
        "properties": {
          "patientClaimStatusDetails": {
            "description": "Patient information and the status of claims related to the patient. You can use the `claims.claimStatus.referencedTransactionTraceNumber` in this object to correlate the 277CA with the original claim.\n\nSome payers batch acknowledgments for multiple claims into a single 277CA. In these cases, the 277CA will contain multiple `patientClaimStatusDetails` objects, each with its own `referencedTransactionTraceNumber` for the corresponding claim.",
            "items": {
              "$ref": "#/components/schemas/PatientClaimStatusDetails"
            },
            "type": "array"
          },
          "providerOFServiceInformationTraceIdentifier": {
            "description": "An identifier for claims related to this provider.",
            "type": "string"
          },
          "serviceProvider": {
            "$ref": "#/components/schemas/ClaimAcknowledgmentDetailsServiceProvider"
          },
          "serviceProviderClaimStatuses": {
            "description": "Status information for claims related to the provider.",
            "items": {
              "$ref": "#/components/schemas/ServiceProviderClaimStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentDetailsServiceProvider": {
        "description": "Information about the service provider.",
        "properties": {
          "firstName": {
            "description": "The provider's first name, when the provider is an individual. Can be up to 35 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name, when the provider is an individual. Can be up to 60 characters.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial, when the provider is an individual. Can be up to 25 characters.",
            "type": "string"
          },
          "npi": {
            "description": "The provider's National Provider Identifier.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name. Can be up to 60 characters.",
            "type": "string"
          },
          "spn": {
            "description": "The provider's service provider number.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, when the provider is an individual. Can be up to 10 characters.",
            "type": "string"
          },
          "tin": {
            "description": "The provider's tax identification number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentPayer": {
        "properties": {
          "centersForMedicareAndMedicaidServicePlanId": {
            "description": "The payer's Centers for Medicare and Medicaid Services Plan ID. This is specifically for Health Plan ID (HPID) or Other Entity Identifier (OEID), both of which are no longer mandated for use.",
            "type": "string"
          },
          "claimStatusTransactions": {
            "description": "Claim status details.",
            "items": {
              "$ref": "#/components/schemas/ClaimAcknowledgmentTransactions"
            },
            "type": "array"
          },
          "entityIdentifierCode": {
            "$ref": "#/components/schemas/PayerEntityIdentifierCode",
            "description": "Code identifying the type of organization."
          },
          "entityIdentifierCodeValue": {
            "$ref": "#/components/schemas/PayerEntityIdentifierCodeValue",
            "description": "The human-readable description of the entity identifier code."
          },
          "etin": {
            "description": "The payer's Electronic Transmitter Identification Number.",
            "type": "string"
          },
          "federalTaxpayerIdentificationNumber": {
            "description": "The payer's Federal Taxpayer Identification Number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The payer or intermediary clearinghouse's business name.",
            "type": "string"
          },
          "payerContactInformation": {
            "$ref": "#/components/schemas/PayerContactInformation"
          },
          "payerIdentification": {
            "description": "The payer's unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentServiceIdQualifierCode": {
        "description": "Code identifying the source of the procedure code in claim status reports.",
        "enum": [
          "AD",
          "ER",
          "HC",
          "HP",
          "IV",
          "NU",
          "WK"
        ],
        "type": "string"
      },
      "ClaimAcknowledgmentServiceIdQualifierCodeValue": {
        "description": "Human-readable descriptions for service ID qualifier codes.",
        "enum": [
          "American Dental Association Codes",
          "Jurisdiction Specific Procedure and Supply Codes",
          "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
          "Health Insurance Prospective Payment System (HIPPS) Skilled Nursing Facility Rate Code",
          "Home Infusion EDI Coalition (HIEC) Product/Service Code",
          "National Uniform Billing Committee (NUBC) UB92 Codes",
          "Advanced Billing Concepts (ABC) Codes"
        ],
        "type": "string"
      },
      "ClaimAcknowledgmentServiceLines": {
        "properties": {
          "beginServiceLineDate": {
            "description": "The starting date of the service.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endServiceLineDate": {
            "description": "The ending date of the service.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "lineItemControlNumber": {
            "description": "A unique identifier for the service line that matches the `providerControlNumber` submitted in the original claim. You can use this value to correlate the payer's response with specific service lines from the original claim.",
            "type": "string"
          },
          "service": {
            "$ref": "#/components/schemas/ClaimAcknowledgmentServiceLinesService"
          },
          "serviceClaimStatuses": {
            "description": "The status of the specific service line.",
            "items": {
              "$ref": "#/components/schemas/ServiceClaimStatus"
            },
            "type": "array"
          },
          "serviceLineDate": {
            "description": "The date of the service.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentServiceLinesService": {
        "description": "Information about the service provided.",
        "properties": {
          "amountPaid": {
            "description": "The amount paid for the service, expressed as a decimal.",
            "type": "string"
          },
          "chargeAmount": {
            "description": "The submitted service charge, expressed as a decimal.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The identifying code for the product or service.",
            "type": "string"
          },
          "procedureModifiers": {
            "description": "Identifies special circumstances related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "revenueCode": {
            "description": "The National Uniform Billing Committee Revenue Code.",
            "type": "string"
          },
          "serviceIdQualifierCode": {
            "$ref": "#/components/schemas/ClaimAcknowledgmentServiceIdQualifierCode",
            "description": "The code identifying the source of the `procedureCode`."
          },
          "serviceIdQualifierCodeValue": {
            "$ref": "#/components/schemas/ClaimAcknowledgmentServiceIdQualifierCodeValue",
            "description": "The description of the `serviceIdQualifierCode`."
          },
          "submittedUnits": {
            "description": "The number of units of service that were submitted, expressed as a decimal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentTransactions": {
        "properties": {
          "claimStatusDetails": {
            "description": "More detailed status information. This includes information about the patient, provider, and services rendered.",
            "items": {
              "$ref": "#/components/schemas/ClaimAcknowledgmentDetails"
            },
            "type": "array"
          },
          "claimTransactionBatchNumber": {
            "description": "A tracking number Stedi assigns to the corresponding 837 claim. It's returned as the `claimReference.correlationId` in the response from our claim submission endpoints. You can use this value to correlate the 277CA with the original claim.",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ClaimAcknowledgmentTransactionsProvider"
          },
          "providerClaimStatuses": {
            "description": "Overall status information for the claim.",
            "items": {
              "$ref": "#/components/schemas/ProviderClaimStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimAcknowledgmentTransactionsProvider": {
        "description": "Information about the provider receiving the claim status details.",
        "properties": {
          "etin": {
            "description": "The provider's Electronic Transmitter Identification Number.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name. Can be up to 35 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. Can be up to 60 characters.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial. Can be up to 25 characters.",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name. Can be up to 60 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimAdjustment": {
        "properties": {
          "adjustmentDetails": {
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustmentDetails"
            },
            "maxItems": 6,
            "minItems": 1,
            "type": "array"
          },
          "adjustmentGroupCode": {
            "$ref": "#/components/schemas/AdjustmentGroupCode"
          }
        },
        "required": [
          "adjustmentDetails",
          "adjustmentGroupCode"
        ],
        "type": "object"
      },
      "ClaimAdjustmentDetails": {
        "description": "The adjustment reason codes and amounts. You can include up to six objects in this array to describe a single adjustment group code.",
        "properties": {
          "adjustmentAmount": {
            "description": "The dollar amount of the adjustment, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "adjustmentQuantity": {
            "description": "The units of service being adjusted.",
            "type": "string"
          },
          "adjustmentReasonCode": {
            "description": "Code identifying the detailed reason the adjustment was made. Visit the X12 [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) for a complete list.",
            "type": "string"
          }
        },
        "required": [
          "adjustmentAmount",
          "adjustmentReasonCode"
        ],
        "type": "object"
      },
      "ClaimAdjustmentGroupCode": {
        "description": "Defines the category of adjustment reason codes that explain why a claim payment was adjusted. These codes categorize adjustments into contractual obligations, payer-initiated reductions, patient responsibilities, and other adjustments.",
        "enum": [
          "CO",
          "OA",
          "PI",
          "PR"
        ],
        "type": "string"
      },
      "ClaimAdjustments": {
        "description": "Claim-level adjustments with reason codes and amounts.",
        "properties": {
          "adjustmentAmount1": {
            "description": "The amount of the adjustment. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "adjustmentAmount2": {
            "description": "The amount of the adjustment. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "adjustmentAmount3": {
            "description": "The amount of the adjustment. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "adjustmentAmount4": {
            "description": "The amount of the adjustment. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "adjustmentAmount5": {
            "description": "The amount of the adjustment. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "adjustmentAmount6": {
            "description": "The amount of the adjustment. A negative amount increases the claim payment and a positive amount decreases the claim payment.",
            "type": "string"
          },
          "adjustmentQuantity1": {
            "description": "The units of service being adjusted. A positive value decreases the covered days and a negative number increases the covered days.",
            "type": "string"
          },
          "adjustmentQuantity2": {
            "description": "The units of service being adjusted. A positive value decreases the covered days and a negative number increases the covered days.",
            "type": "string"
          },
          "adjustmentQuantity3": {
            "description": "The units of service being adjusted. A positive value decreases the covered days and a negative number increases the covered days.",
            "type": "string"
          },
          "adjustmentQuantity4": {
            "description": "The units of service being adjusted. A positive value decreases the covered days and a negative number increases the covered days.",
            "type": "string"
          },
          "adjustmentQuantity5": {
            "description": "The units of service being adjusted. A positive value decreases the covered days and a negative number increases the covered days.",
            "type": "string"
          },
          "adjustmentQuantity6": {
            "description": "The units of service being adjusted. A positive value decreases the covered days and a negative number increases the covered days.",
            "type": "string"
          },
          "adjustmentReason1": {
            "description": "A description identifying the detailed reason the adjustment was made.",
            "type": "string"
          },
          "adjustmentReason2": {
            "description": "A description identifying the detailed reason the adjustment was made.",
            "type": "string"
          },
          "adjustmentReason3": {
            "description": "A description identifying the detailed reason the adjustment was made.",
            "type": "string"
          },
          "adjustmentReason4": {
            "description": "A description identifying the detailed reason the adjustment was made.",
            "type": "string"
          },
          "adjustmentReason5": {
            "description": "A description identifying the detailed reason the adjustment was made.",
            "type": "string"
          },
          "adjustmentReason6": {
            "description": "A description identifying the detailed reason the adjustment was made.",
            "type": "string"
          },
          "adjustmentReasonCode1": {
            "description": "A code identifying the detailed reason the adjustment was made. Visit [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) in the X12 documentation for a complete list.",
            "type": "string"
          },
          "adjustmentReasonCode2": {
            "description": "A code identifying the detailed reason the adjustment was made. Visit [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) in the X12 documentation for a complete list.",
            "type": "string"
          },
          "adjustmentReasonCode3": {
            "description": "A code identifying the detailed reason the adjustment was made. Visit [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) in the X12 documentation for a complete list.",
            "type": "string"
          },
          "adjustmentReasonCode4": {
            "description": "A code identifying the detailed reason the adjustment was made. Visit [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) in the X12 documentation for a complete list.",
            "type": "string"
          },
          "adjustmentReasonCode5": {
            "description": "A code identifying the detailed reason the adjustment was made. Visit [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) in the X12 documentation for a complete list.",
            "type": "string"
          },
          "adjustmentReasonCode6": {
            "description": "A code identifying the detailed reason the adjustment was made. Visit [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) in the X12 documentation for a complete list.",
            "type": "string"
          },
          "claimAdjustmentGroupCode": {
            "$ref": "#/components/schemas/ClaimAdjustmentGroupCode",
            "description": "The code identifying the category of adjustment reason codes. Visit [ERA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-adjustment-group-code) for a complete list and usage notes."
          },
          "claimAdjustmentGroupCodeValue": {
            "description": "The description of the `claimAdjustmentGroupCode`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimCodeInformation": {
        "description": "Supply information specific to hospital claims, such as the priority of the admission.",
        "properties": {
          "admissionSourceCode": {
            "description": "Code indicating the source of the admission.",
            "type": "string"
          },
          "admissionTypeCode": {
            "description": "The code indicating the priority of the admission.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string"
          },
          "patientStatusCode": {
            "description": "Code indicating patient status as of the 'statement covers through date'.",
            "maxLength": 2,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "admissionTypeCode",
          "patientStatusCode"
        ],
        "type": "object"
      },
      "ClaimContractInformation": {
        "description": "Required when the submitter is contractually obligated to supply this information on post-adjudicated claims.",
        "properties": {
          "contractAmount": {
            "description": "The total dollar amount of the contract, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "contractCode": {
            "description": "The contract code. This is a unique identifier for the contract.",
            "type": "string"
          },
          "contractPercentage": {
            "description": "The allowance or charge percent, expressed as a decimal. For example, `0.80`.",
            "type": "string"
          },
          "contractTypeCode": {
            "$ref": "#/components/schemas/ClaimContractInformationContractTypeCode"
          },
          "contractVersionIdentifier": {
            "description": "An additional identifer for the contract. Identifies the revision level of a particular format, program, technique or algorithm.",
            "type": "string"
          },
          "termsDiscountPercentage": {
            "description": "Terms discount percentage, expressed as a percent, available to the purchaser if an invoice is paid on or before the Terms Discount Due Date.",
            "type": "string"
          }
        },
        "required": [
          "contractTypeCode"
        ],
        "type": "object"
      },
      "ClaimContractInformationContractTypeCode": {
        "description": "A code identifying the type of contract. Can be set to `01` - Diagnosis Related Group (DRG), `02` - Per Diem, `03` - Variable Per Diem, `04` - Flat, `05` - Capitated, `06` - Percent, or `09` - Other.",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "09"
        ],
        "type": "string"
      },
      "ClaimDateInformation": {
        "description": "You must provide at least one date related to the claim. For example, the date on which the patient was admitted to the hospital.",
        "properties": {
          "accidentDate": {
            "description": "The date of the accident related to this claim. Required when `relatedCausesCode` is set to `AA` - Auto Accident or `OA` - Other Accident. Also required when `relatedCausesCode` is set to `EM` - Employment and this claim is the result of an accident.",
            "type": "string"
          },
          "acuteManifestationDate": {
            "description": "The date the patient first experienced acute symptoms for a chronic condition. Required when the `patientConditionCode` = `A` (Acute Condition) or `M` (Acute Manifestation of a Chronic Condition), the claim involves spinal manipulation, and the payer is Medicare.",
            "type": "string"
          },
          "admissionDate": {
            "description": "The date the patient was admitted to the hospital. Required on ambulance claims when the patient was known to be admitted to the hospital. Also required on inpatient claims.",
            "type": "string"
          },
          "assumedAndRelinquishedCareBeginDate": {
            "description": "The date the provider filing this claim assumed care from another provider during post-operative care. Required when providers share post-operative care (global surgery claims).",
            "type": "string"
          },
          "assumedAndRelinquishedCareEndDate": {
            "description": "The date the provider filing this claim relinquished post-operative care to another provider. Required when providers share post-operative care (global surgery claims).",
            "type": "string"
          },
          "authorizedReturnToWorkDate": {
            "description": "The date the provider has authorized the patient to return to work. Required on claims where this information is necessary for adjudication, such as workers compensation claims.",
            "type": "string"
          },
          "disabilityBeginDate": {
            "description": "The start date of the patient's disability period. You can include this date without providing a `disabilityEndDate` if the patient is currently disabled and the end date is unknown. Used for claims involving disability where the provider judges that the patient was or will be unable to perform the duties normally associated with their work.",
            "type": "string"
          },
          "disabilityEndDate": {
            "description": "The end date of the patient's disability period. You can include this date without including a `disabilityStartDate` if the patient is no longer disabled and the start date is unknown. Used for claims involving disability where the provider judges that the patient was or will be unable to perform the duties normally associated with their work.",
            "type": "string"
          },
          "dischargeDate": {
            "description": "The date the patient was discharged from the hospital. Required for inpatient claims when the patient was discharged from the facility and the discharge date is known",
            "type": "string"
          },
          "firstContactDate": {
            "description": "Date the patient first consulted the provider for their condition by any means. This is not necessarily the same as the initial treatment date. Required for Property and Casualty claims when state mandated.",
            "type": "string"
          },
          "hearingAndVisionPrescriptionDate": {
            "description": "The date of the patient's hearing and vision prescription. Required on claims where a prescription has been written for hearing devices or vision frames and lenses and it is being billed on this claim.",
            "type": "string"
          },
          "initialTreatmentDate": {
            "description": "The date the patient first received treatment for the current illness or condition. Required when the Initial Treatment Date is known to impact adjudication for claims involving spinal manipulation, physical therapy, occupational therapy, speech language pathology, dialysis, optical refractions, or pregnancy.",
            "type": "string"
          },
          "lastMenstrualPeriodDate": {
            "description": "The date of the patient's last menstrual period. Required when the provider believes the services on this claim are related to the patient's pregnancy.",
            "type": "string"
          },
          "lastSeenDate": {
            "description": "The date that the patient was seen by the attending or supervising physician for the qualifying medical condition related to the services performed. Required when claims involve services for routine foot care and this date is known to impact the payer's adjudication process.",
            "type": "string"
          },
          "lastWorkedDate": {
            "description": "The date the patient last worked, related to disability claims. Required on claims where this information is necessary for adjudication, such as workers compensation claims.",
            "type": "string"
          },
          "lastXRayDate": {
            "description": "The date of the patient's last x-ray. Required when claim involves spinal manipulation and an x-ray was taken.",
            "type": "string"
          },
          "repricerReceivedDate": {
            "description": "The date the repricing entity received the initial claim. Required when a repricer is passing the claim onto the payer.",
            "type": "string"
          },
          "symptomDate": {
            "description": "The date the patient began experiencing acute symptoms for the current illness or condition. Required for the initial medical service or visit performed in response to a medical emergency when the date is available and is different than the date of service.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimFilingCode": {
        "description": "A code identifying the type of claim. For example `DS` - Disability.\n- Use `OF` when submitting Medicare Part D claims.\n- Use `ZZ` when you don't know the type of insurance.\n- Some payers reject claims with invalid codes. If you're not sure which code to use, we recommend running a [real-time eligibility check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) and using the value returned in the most relevant `benefitsInformation.insuranceTypeCode` property. Note that the eligibility response uses a different code list than claims, so you may need to map that code value to the appropriate claim filing code.\n\n\nVisit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#claim-filing-indicator-codes) for a complete list.",
        "enum": [
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "AM",
          "BL",
          "CH",
          "CI",
          "DS",
          "FI",
          "HM",
          "LM",
          "MA",
          "MB",
          "MC",
          "OF",
          "TV",
          "VA",
          "WC",
          "ZZ"
        ],
        "type": "string"
      },
      "ClaimFilingIndicatorCode": {
        "description": "A code identifying the type of claim. For example `DS` - Disability. Use `OF` when submitting Medicare Part D claims. Use `ZZ` when you don't know the type of insurance. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#claim-filing-indicator-codes) for a complete list.",
        "enum": [
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "AM",
          "BL",
          "CH",
          "CI",
          "DS",
          "FI",
          "HM",
          "LM",
          "MA",
          "MB",
          "MC",
          "OF",
          "TV",
          "VA",
          "WC",
          "ZZ"
        ],
        "type": "string"
      },
      "ClaimFrequencyCode": {
        "description": "Identify the type of claim. Can be set to: `1` - indicates an original claim, `7` - Indicates the new claim is a replacement or correction, `8` - Indicates the claim is void or canceled",
        "enum": [
          "1",
          "7",
          "8"
        ],
        "type": "string"
      },
      "ClaimIdentifier": {
        "description": "A code specifying the type of transaction. Defaults to `CH` if not provided.\n  - `31`: Only for use by state Medicaid agencies performing post payment recovery.\n  - `CH`: Use when the transaction contains only fee for service claims or claims with at least one chargeable line item. Also use when it's not clear whether a transaction contains claims or capitated encounters, or if the transaction contains a mix of claims and capitated encounters.\n  - `RP`: Use for capitated encounters. Also use when the transaction is being sent to an entity for purposes other than adjudication of a claim. For example, when you're sending the claim to a state health agency that is using the claim for health data reporting purposes.",
        "enum": [
          "31",
          "CH",
          "RP"
        ],
        "type": "string"
      },
      "ClaimInformation": {
        "description": "Information about the healthcare claim. \n\nNote that the objects and properties marked as **required** are required for all claims, while others are conditionally required, depending on type of claim and claim circumstances. For example, you must always provide the patient's diagnosis codes in the `healthCareCodeInformation` object, but you only need to provide the `otherSubscriberInformation` object in coordination of benefits scenarios. When you include a conditionally required object, you must provide all of its required properties.",
        "properties": {
          "ambulanceCertification": {
            "description": "Required when the claim involves ambulance transport services.",
            "items": {
              "$ref": "#/components/schemas/AmbulanceCertification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "ambulanceDropOffLocation": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address where the ambulance dropped off the patient."
          },
          "ambulancePickUpLocation": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address where the ambulance picked up the patient. If the ambulance pickup location is in an area where there are no street addresses, enter a description of where the service was rendered. For example `Exit near mile marker 123 on I-95.`"
          },
          "ambulanceTransportInformation": {
            "$ref": "#/components/schemas/AmbulanceTransportInformation"
          },
          "anesthesiaRelatedSurgicalProcedure": {
            "description": "The surgical code. Required on claims where anesthesiology services are being billed or reported when the provider knows the surgical code and knows the adjudication of the claim will depend on provision of the surgical code.",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "autoAccidentCountryCode": {
            "description": "The country code where the accident occurred. Use when `relatedCausesCode` = `AA` and the accident occurred in a country other than US or Canada.",
            "type": "string"
          },
          "autoAccidentStateCode": {
            "description": "A code identifying the state or province in which the automobile accident occurred. Use this code when `relatedCausesCode` is set to `AA`.",
            "type": "string"
          },
          "benefitsAssignmentCertificationIndicator": {
            "$ref": "#/components/schemas/ClaimInformationBenefitsAssignmentCertificationIndicator"
          },
          "claimChargeAmount": {
            "description": "The total dollar amount charged for the services on this claim, expressed as a decimal. For example, `100.50`. This is the total amount before any adjustments or payments. The amount must balance to the sum of the service line charges.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "claimContractInformation": {
            "$ref": "#/components/schemas/ClaimContractInformation"
          },
          "claimDateInformation": {
            "$ref": "#/components/schemas/ClaimDateInformation"
          },
          "claimFilingCode": {
            "$ref": "#/components/schemas/ClaimFilingCode"
          },
          "claimFrequencyCode": {
            "$ref": "#/components/schemas/ClaimFrequencyCode",
            "description": "Code specifying the frequency of the claim. Can be set to `1` - Admit thru Discharge Claim, `7` - Replacement of Prior Claim, or `8` - Void/Cancel of Prior Claim. Visit the National Uniform Billing Committee for a [complete code list](https://www.nubc.org/system/files/media/file/2019/06/billTypeFrequencyCodes837.pdf) and usage notes."
          },
          "claimNote": {
            "$ref": "#/components/schemas/ClaimNote"
          },
          "claimPricingRepricingInformation": {
            "$ref": "#/components/schemas/ClaimPricingRepricingInformation"
          },
          "claimSupplementalInformation": {
            "$ref": "#/components/schemas/ClaimSupplementalInformation"
          },
          "conditionInformation": {
            "description": "Required when condition information applies to the claim. You can include up to 24 codes in the array. Visit the National Uniform Claim Committee for a complete list of possible [condition codes](https://www.nucc.org/index.php/code-sets-mainmenu-41/condition-codes-mainmenu-38).",
            "items": {
              "$ref": "#/components/schemas/ConditionInformation"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "deathDate": {
            "description": "The patient's date of death.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "delayReasonCode": {
            "$ref": "#/components/schemas/DelayReasonCode"
          },
          "epsdtReferral": {
            "$ref": "#/components/schemas/EpsdtReferral",
            "description": "Required on Early & Periodic Screening, Diagnosis, and Treatment (EPSDT) claims when the screening service is being billed in this claim.\n\n This is **required** if any of the claim service lines are for EPSDT services. That means you must include this object if any `claimInformation.serviceLines.professionalService.epsdtIndicator` properties are set to `Y`."
          },
          "fileInformation": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "type": "string"
          },
          "fileInformationList": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "healthCareCodeInformation": {
            "description": "Details about the patient's healthcare diagnosis.\n- **Don't** submit the decimal for ICD codes; the decimal is implied.\n- Use `ABK` as the type for the principal diagnosis code and `ABF` for any other diagnosis codes you include.\n- One `ABK` code is required as the first object, and then you can submit up to 11 `ABF` codes as needed. If you need to submit more codes than this, you must create additional, separate claims.",
            "items": {
              "$ref": "#/components/schemas/ClaimsHealthCareInformation"
            },
            "maxItems": 12,
            "minItems": 1,
            "type": "array"
          },
          "homeboundIndicator": {
            "description": "Required for Medicare claims when an independent laboratory renders an EKG tracing or obtains a specimen from a homebound or institutionalized patient.",
            "type": "boolean"
          },
          "otherSubscriberInformation": {
            "description": "Required when other payers are known to potentially be involved in paying on this claim. This object contains information about other health plans under which the patient has coverage. It's used for coordination of benefits scenarios.",
            "items": {
              "$ref": "#/components/schemas/OtherSubscriberInformation"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "patientAmountPaid": {
            "description": "The total amount in dollars the patient or their representatives have paid on this claim. For example, `20.50`. This includes any co-payments, co-insurance, or other amounts already collected from the patient.\n\nIf the patient has not paid anything, you should omit this property entirely - **don't** set it to `0`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "patientConditionInformationVision": {
            "description": "Required on vision claims involving replacement lenses or frames when this information is known to impact reimbursement.",
            "items": {
              "$ref": "#/components/schemas/PatientConditionInformationVision"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "patientControlNumber": {
            "description": "An identifier you assign to the claim. We **strongly recommend** submitting a unique value for this property so you can use it to correlate this claim with responses, such as the 277CA and 835 ERA.\n  - We recommend using only alphanumeric characters and generating unique values that are the shortest possible length. Stedi accepts any valid value, but some payers replace non-alphanumeric characters and truncate shorter than the official 20-character limit. When this happens, the payer returns a different identifier in responses than the one you originally sent, making it more difficult to correlate the claim and perform real-time claim status checks.\n  - If you plan to submit the autogenerated CMS-1500 PDF for this claim, you must limit this value to 14 characters or this value will be truncated in the PDF.",
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "patientSignatureSourceCode": {
            "description": "Code indicating how the patient or subscriber authorization signatures were obtained and how they are being retained by the provider. Can be set to `true` - Signature generated by provider because the patient was not physically present for services. This means the signature was generated by an entity other than the patient according to State or Federal law. This property is **required** for claims submitted to Medicare.",
            "type": "boolean"
          },
          "patientWeight": {
            "description": "The patient's weight in pounds, such as `150`. You should only set this property if the payer specifically requests it, such as for some Medicare DME claims. Otherwise, including this property can trigger claim edits.",
            "type": "string"
          },
          "placeOfServiceCode": {
            "$ref": "#/components/schemas/PlaceOfServiceCode",
            "description": "Code identifying the type of facility where the services were or may be performed. Visit [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list."
          },
          "planParticipationCode": {
            "$ref": "#/components/schemas/PlanParticipationCode"
          },
          "pregnancyIndicator": {
            "$ref": "#/components/schemas/PregnancyIndicator"
          },
          "propertyCasualtyClaimNumber": {
            "description": "The agency claim number for this transaction. Used when services included in this claim are part of a property and casualty claim.",
            "type": "string"
          },
          "relatedCausesCode": {
            "description": "Code identifying an accompanying cause of an illness, injury or an accident. Can be set to `AA` - Auto Accident, `EM` - Employment, or `OA` - Other Accident. You can include up to two codes in this array.",
            "items": {
              "$ref": "#/components/schemas/ClaimInformationRelatedCausesCodeItem"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "releaseInformationCode": {
            "$ref": "#/components/schemas/ReleaseInformationCode"
          },
          "serviceFacilityLocation": {
            "$ref": "#/components/schemas/ClaimServiceFacilityLocation"
          },
          "serviceLines": {
            "description": "Information about one or more services rendered to the patient.\n  - Each service line must be a unique service event as defined by the payer's billing policies. This means that you can use the same procedure code on multiple service lines as long as they are distinct events.\n  - Some procedure codes are date-specific. In these cases, you may need to create a separate service line with that code for each applicable date of service, even if the episode of care extended over multiple days.\n  - Service lines can share the same dates of service if the patient received multiple services on the same day.",
            "items": {
              "$ref": "#/components/schemas/ServiceLine"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "signatureIndicator": {
            "$ref": "#/components/schemas/SignatureIndicator"
          },
          "specialProgramCode": {
            "$ref": "#/components/schemas/SpecialProgramCode"
          },
          "spinalManipulationServiceInformation": {
            "$ref": "#/components/schemas/SpinalManipulationServiceInformation"
          }
        },
        "required": [
          "benefitsAssignmentCertificationIndicator",
          "claimChargeAmount",
          "claimFilingCode",
          "claimFrequencyCode",
          "healthCareCodeInformation",
          "patientControlNumber",
          "placeOfServiceCode",
          "planParticipationCode",
          "releaseInformationCode",
          "serviceLines",
          "signatureIndicator"
        ],
        "type": "object"
      },
      "ClaimInformationBenefitsAssignmentCertificationIndicator": {
        "description": "A code indicating whether the patient or an authorized person has authorized the plan to remit payment directly to the provider. Use `W` when the patient refuses to assign benefits. Can be set to `N` - No (Payment should go to the patient), `Y` - Yes (Payment should go directly to the provider), or `W` - Not Applicable (use when patient refuses to assign benefits).",
        "enum": [
          "N",
          "W",
          "Y"
        ],
        "type": "string"
      },
      "ClaimInformationConditionCodesItem": {
        "enum": [
          "AV",
          "NU",
          "S2",
          "ST"
        ],
        "type": "string"
      },
      "ClaimInformationRelatedCausesCodeItem": {
        "description": "Code identifying an accompanying cause of an illness, injury or an accident. Can be set to `AA` - Auto Accident, `EM` - Employment, or `OA` - Other Accident.",
        "enum": [
          "AA",
          "EM",
          "OA"
        ],
        "type": "string"
      },
      "ClaimLevelEntityIdentifierCode": {
        "description": "Entity identifier code for claim level in claim status reports",
        "enum": [
          "03",
          "36",
          "40",
          "41",
          "71",
          "72",
          "73",
          "77",
          "82",
          "85",
          "87",
          "1P",
          "1Z",
          "DK",
          "DN",
          "DQ",
          "FA",
          "GB",
          "HK",
          "IL",
          "LI",
          "MSC",
          "PR",
          "PRP",
          "QB",
          "QC",
          "QD",
          "SEP",
          "TL",
          "TTP",
          "TU"
        ],
        "type": "string"
      },
      "ClaimLevelEntityIdentifierCodeValue": {
        "description": "Human-readable descriptions for claim level entity identifier codes",
        "enum": [
          "Dependent",
          "Employer",
          "Receiver",
          "Submitter",
          "Attending Physician",
          "Operating Physician",
          "Other Physician",
          "Service Location",
          "Rendering Provider",
          "Billing Provider",
          "Pay-to Provider",
          "Provider",
          "Home Health Care",
          "Ordering Physician",
          "Referring Provider",
          "Supervising Physician",
          "Facility",
          "Other Insured",
          "Subscriber",
          "Insured or Subscriber",
          "Independent Lab",
          "Mammography Screening Center",
          "Payer",
          "Primary Payer",
          "Purchase Service Provider",
          "Patient",
          "Responsible Party",
          "Secondary Payer",
          "Testing Laboratory",
          "Tertiary Payer",
          "Third Party Repricing Organization (TPO)"
        ],
        "type": "string"
      },
      "ClaimLevelStatus": {
        "properties": {
          "entityIdentifierCode": {
            "$ref": "#/components/schemas/ClaimLevelEntityIdentifierCode",
            "description": "A code indicating the entity that is responsible for the claim."
          },
          "entityIdentifierCodeValue": {
            "$ref": "#/components/schemas/ClaimLevelEntityIdentifierCodeValue",
            "description": "The description of the `entityIdentifierCode`."
          },
          "healthCareClaimStatusCategoryCode": {
            "$ref": "#/components/schemas/HealthCareClaimStatusCategoryCode"
          },
          "healthCareClaimStatusCategoryCodeValue": {
            "description": "Description of the `healthCareClaimStatusCategoryCode` property. Visit [277CA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-status-category-code) for a complete list.",
            "type": "string"
          },
          "nationalCouncilForPrescriptionDrugProgramsRejectPaymentCodes": {
            "description": "A National Council for Prescription Drug Programs (NCPDP) reject code.",
            "type": "string"
          },
          "statusCode": {
            "$ref": "#/components/schemas/HealthCareClaimStatusCode",
            "description": "A code indicating the status."
          },
          "statusCodeValue": {
            "description": "The description of the `statusCode`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimNote": {
        "description": "Comments or special instructions related to the claim. Contains information required to substantiate the medical treatment that isn't provided elsewhere in the claim.",
        "properties": {
          "additionalInformation": {
            "description": "Additional information.",
            "type": "string"
          },
          "certificationNarrative": {
            "description": "Certification narrative.",
            "type": "string"
          },
          "diagnosisDescription": {
            "description": "Additional information about the diagnosis.",
            "type": "string"
          },
          "goalRehabOrDischargePlans": {
            "description": "Information about goals, rehabilitation potential, or discharge plans.",
            "type": "string"
          },
          "thirdPartOrgNotes": {
            "description": "Notes from a third-party organization.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimNotes": {
        "description": "Free-form information to substantiate the medical treatment that isn't provided elsewhere in the claim submission. Also used to provide narrative information from the forms Home Health Certification and Plan of Treatment or Medical Update and Patient Information, as needed to substantiate home health services. You can provide up to 10 strings in this array.",
        "properties": {
          "additionalInformation": {
            "deprecated": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "allergies": {
            "description": "Allergies",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "diagnosisDescription": {
            "description": "Diagnosis Description",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "dme": {
            "description": "Durable Medical Equipment (DME) and Supplies",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "functionalLimitsOrReasonHomebound": {
            "description": "Functional Limitations, Reason Homebound, or Both",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "goalRehabOrDischargePlans": {
            "description": "Goals, Rehabilitation Potential, or Discharge Plans",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "medications": {
            "description": "Medications",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "nutritionalRequirments": {
            "description": "Nutritional Requirements",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "ordersForDiscipLinesAndTreatments": {
            "description": "Orders for Disciplines and Treatments",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "reasonsPatientLeavesHome": {
            "description": "Reasons Patient Leaves Home",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "safetyMeasures": {
            "description": "Safety Measures",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "supplementalPlanOfTreatment": {
            "description": "Supplementary Plan of Treatment",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "timesAndReasonsPatientNotAtHome": {
            "description": "Times and Reasons Patient Not at Home",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "unusualHomeOrSocialEnv": {
            "description": "Unusual Home, Social Environment, or Both",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "updatedInformation": {
            "description": "Updated Information",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceFilingIndicatorCode": {
        "description": "Identifies the type of health plan or insurance coverage under which the claim was filed. These codes indicate the specific type of insurance arrangement, government program, or coverage type that applies to the claim.",
        "enum": [
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "AM",
          "CH",
          "DS",
          "HM",
          "LI",
          "LM",
          "MA",
          "MB",
          "MC",
          "OF",
          "TV",
          "VA",
          "WC",
          "ZZ"
        ],
        "type": "string"
      },
      "ClaimPaymentAdvicePayer": {
        "description": "Information about the payer.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimPaymentAdvicePayerAddress",
            "description": "The payer's address information."
          },
          "businessContactInformation": {
            "$ref": "#/components/schemas/BusinessContactInformation",
            "description": "A person or office."
          },
          "centersForMedicareAndMedicaidServicesPlanId": {
            "deprecated": true,
            "description": "Formerly used to report the payer's Health Plan ID (HPID) or Other Entity Identifier (OEID). The Centers for Medicare and Medicaid Services (CMS) no longer uses HPID, so this property will not be populated.",
            "type": "string"
          },
          "healthIndustryNumber": {
            "description": "The payer's health industry number.",
            "type": "string"
          },
          "name": {
            "description": "The payer's business name, such as Cigna or Aetna.",
            "type": "string"
          },
          "nationalAssociationOfInsuranceCommissioners": {
            "description": "The payer's National Association of Insurance Commissioners (NAIC) code.",
            "type": "string"
          },
          "payerIdentificationNumber": {
            "description": "An identifier for the payer. For Medicare carriers or intermediaries, this is the Medicare carrier or intermediary ID number. For Blue Cross and Blue Shield Plans, this is the Blue Cross Blue Shield association plan code.\n\nProviders rarely use this identifier in practice.",
            "type": "string"
          },
          "payerWebSiteUrl": {
            "description": "The payer's web address. The URL is typically provided without the scheme and separator. For example, `stedi.com`.",
            "type": "string"
          },
          "submitterIdentificationNumber": {
            "description": "An identifier for the payer. This is used when the original transaction sender is not the payer or has an identifier other than those already provided.",
            "type": "string"
          },
          "technicalContactInformation": {
            "description": "A person or office.",
            "items": {
              "$ref": "#/components/schemas/TechnicalContactInformation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdvicePayerAddress": {
        "description": "Address information for the payer.",
        "properties": {
          "address1": {
            "description": "The first line of the address.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address.",
            "type": "string"
          },
          "city": {
            "description": "The city where the address is located.",
            "type": "string"
          },
          "countryCode": {
            "description": "The standard code for the country from Part 1 of ISO 3166.",
            "type": "string"
          },
          "countrySubCode": {
            "description": "The standard code for the country subdivision from Part 2 of ISO 3166.",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code for the address, excluding punctuation and blanks.",
            "type": "string"
          },
          "state": {
            "description": "The standard code for the state or province. For example `PA` for Pennsylvania.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceResponse": {
        "description": "The complete claim payment advice response from the payer.",
        "properties": {
          "controlNumber": {
            "description": "The control number the payer provided in the claim payment response. This is used to identify the transaction.",
            "type": "string"
          },
          "detailInfo": {
            "description": "Detailed information about claims in this payment advice.",
            "items": {
              "$ref": "#/components/schemas/DetailInfo"
            },
            "type": "array"
          },
          "financialInformation": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceResponseFinancialInformation",
            "description": "Financial information about the payment including amounts and account details."
          },
          "foreignCurrency": {
            "description": "The standard ISO code for the country whose currency is being used for payments. If this is not present, the currency is US dollars.",
            "type": "string"
          },
          "payee": {
            "$ref": "#/components/schemas/Payee",
            "description": "Information about the payee receiving the payment."
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimPaymentAdvicePayer",
            "description": "Information about the payer making the payment."
          },
          "paymentAndRemitReassociationDetails": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceResponsePaymentAndRemitReassociationDetails",
            "description": "Payment and remittance reassociation details for transaction tracking."
          },
          "productionDate": {
            "description": "The end date for the adjudication production cycle for claims included in this ERA.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerAdjustments": {
            "description": "Provider-level adjustment information for debit or credit transactions such as: accelerated payments, cost report settlements for a fiscal year, and timeliness report penalties unrelated to a specific claim or service. These adjustments can either decrease the payment (a positive number) or increase the payment (a negative number).",
            "items": {
              "$ref": "#/components/schemas/ProviderAdjustments"
            },
            "type": "array"
          },
          "receiverIdentifier": {
            "description": "The business identification information for the entity initially receiving the transaction. This is typically included when the receiver of the transaction is not the payee, such as a clearinghouse or billing service.",
            "type": "string"
          },
          "versionIdentification": {
            "description": "The version number of the adjudication system that generated the claim payments.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceResponseFinancialInformation": {
        "description": "Information about a payment, including the payment method, payment amount, and account details for both the sender and receiver.",
        "properties": {
          "checkIssueOrEFTEffectiveDate": {
            "description": "The date the payer considers the transaction to be settled. If the payment is made by automated clearinghouse (ACH), this is the date the funds are available to the provider. If the payment is made by check, this is the date the check is issued. If the payment is made by Federal Reserve Funds/wire transfer, this is the date that the payer anticipates the money to move.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "creditOrDebitFlagCode": {
            "$ref": "#/components/schemas/CreditDebitFlagCode",
            "description": "A code indicating whether the payment is a credit or debit. Can be set to `C` - Credit or `D` - Debit. Visit [ERA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#credit-or-debit-flag-code) for usage notes."
          },
          "originatingCompanySupplementalCode": {
            "description": "A code that further identifies the payer by division or region.",
            "type": "string"
          },
          "payerIdentifier": {
            "description": "A unique identifier for the payer, mutually established between the financial institution and the payer.",
            "type": "string"
          },
          "paymentFormatCode": {
            "$ref": "#/components/schemas/PaymentFormatCode",
            "description": "A code identifying the payment format. Can be set to `CCP` - Cash Concentration/Disbursement plus Addenda (CCD+) (ACH) or `CTX` - Corporate Trade Exchange (CTX) (ACH)."
          },
          "paymentMethodCode": {
            "$ref": "#/components/schemas/PaymentMethodCode",
            "description": "A code indicating the payment method. For example, `ACH` - Automated Clearing House or `CHK` - Check. Visit [ERA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#payment-method-code) for a complete list and usage notes."
          },
          "receiverAccountDetails": {
            "$ref": "#/components/schemas/ReceiverAccountDetails",
            "description": "Account details for the payment receiver."
          },
          "senderAccountDetails": {
            "$ref": "#/components/schemas/SenderAccountDetails",
            "description": "Account details for the payment sender."
          },
          "totalActualProviderPaymentAmount": {
            "description": "The total amount of the payment to the provider, expressed as a decimal.",
            "type": "string"
          },
          "transactionHandlingCode": {
            "$ref": "#/components/schemas/TransactionHandlingCode",
            "description": "A code indicating the actions taken by both the sender and the receiver. For example, `D` - Make Payment Only. Visit [ERA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#transaction-handling-code) for a complete list and usage notes."
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceResponsePaymentAndRemitReassociationDetails": {
        "description": "Information to uniquely identify the transaction and help with reassociating payments and remittances that have been separated.",
        "properties": {
          "checkOrEFTTraceNumber": {
            "description": "This value uniquely identifies the transaction. This is either the check number, the EFT reference number, or a unique remittance advice identification number (for non-payment ERAs).",
            "type": "string"
          },
          "originatingCompanyIdentifier": {
            "description": "A unique identifier for the payer. This is a 1 followed by the payer's Employer Identification Number (EIN) or Taxpayer Identification Number (TIN).",
            "type": "string"
          },
          "originatingCompanySupplementalCode": {
            "description": "A value that identifies a further subdivision within the payer's organization.",
            "type": "string"
          },
          "traceTypeCode": {
            "$ref": "#/components/schemas/TraceTypeCode",
            "description": "Code that identifies which transaction is being referenced. This can be set to `1` - Current Transaction Trace Numbers."
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceServiceLines": {
        "description": "Information about specific service lines in the claim payment advice.",
        "properties": {
          "healthCareCheckRemarkCodes": {
            "description": "Healthcare check remark codes for this service.",
            "items": {
              "$ref": "#/components/schemas/HealthCareCheckRemarkCodes"
            },
            "type": "array"
          },
          "healthCarePolicyIdentification": {
            "description": "Healthcare policy identification for this service.",
            "items": {
              "$ref": "#/components/schemas/HealthCarePolicyIdentification"
            },
            "type": "array"
          },
          "lineItemControlNumber": {
            "description": "The `providerControlNumber` submitted in the original claim to identify the service line.",
            "type": "string"
          },
          "renderingProviderInformation": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceServiceLinesRenderingProviderInformation",
            "description": "Information about the provider who rendered this service."
          },
          "serviceAdjustments": {
            "description": "Adjustments applied to this service line.",
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustments"
            },
            "type": "array"
          },
          "serviceDate": {
            "description": "The date the service was rendered. Used for single-day services.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "The date the service ended. Used for multi-day services.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceIdentification": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceServiceLinesServiceIdentification",
            "description": "Service identification details."
          },
          "servicePaymentInformation": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceServiceLinesServicePaymentInformation",
            "description": "Payment information for this service line."
          },
          "serviceStartDate": {
            "description": "The date the service began. Used for multi-day services.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceSupplementalAmounts": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceServiceLinesServiceSupplementalAmounts",
            "description": "Supplemental amount information for this service."
          },
          "serviceSupplementalQuantities": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceServiceLinesServiceSupplementalQuantities",
            "description": "Supplemental quantity information for this service."
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceServiceLinesRenderingProviderInformation": {
        "description": "Identifiers for the provider who rendered this service.",
        "properties": {
          "blueCrossProviderNumber": {
            "description": "The rendering provider's Blue Cross Provider Number.",
            "type": "string"
          },
          "blueShieldProviderNumber": {
            "description": "The rendering provider's Blue Shield Provider Number.",
            "type": "string"
          },
          "champusIdentificationNumber": {
            "description": "The rendering provider's CHAMPUS Identification Number.",
            "type": "string"
          },
          "facilityIdNumber": {
            "description": "The rendering provider's Facility ID Number.",
            "type": "string"
          },
          "federalTaxpayerIdentificationNumber": {
            "description": "The rendering provider's Federal Taxpayer Identification Number.",
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The rendering provider's Medicaid Provider Number.",
            "type": "string"
          },
          "medicareProviderNumber": {
            "description": "The rendering provider's Medicare Provider Number.",
            "type": "string"
          },
          "nationalCouncilForPrescriptionDrugProgramPharmacyNumber": {
            "description": "The rendering provider's National Council for Prescription Drug Programs Pharmacy Number.",
            "type": "string"
          },
          "npi": {
            "description": "The rendering provider's National Provider Identifier (NPI).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "providerCommercialNumber": {
            "description": "The Provider Commercial Number.",
            "type": "string"
          },
          "providerUPINNumber": {
            "description": "Deprecated; replaced by NPI in 2007.",
            "type": "string"
          },
          "ssn": {
            "description": "The rendering provider's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The rendering provider's State License Number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceServiceLinesServiceIdentification": {
        "description": "Additional identifiers related to the service line.",
        "properties": {
          "ambulatoryPatientGroupNumber": {
            "description": "The service line's Ambulatory Patient Group (APG) Number.",
            "type": "string"
          },
          "ambulatoryPaymentClassification": {
            "description": "The service line's Ambulatory Payment Classification Number.",
            "type": "string"
          },
          "attachmentCode": {
            "description": "The service line's Attachment Code.",
            "type": "string"
          },
          "authorizationNumber": {
            "description": "The service line's Authorization Number.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The payer's identification for the provider location.",
            "type": "string"
          },
          "preDeterminationOfBenefitsIdentificationNumber": {
            "description": "The service line's Predetermination of Benefits Identification Number.",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "The service line's Prior Authorization Number.",
            "type": "string"
          },
          "rateCodeNumber": {
            "description": "The service line's Rate code number, a percentage that reflects the Ambulatory Surgical Center (ASC) rate for Medicare. This is either 0, 50, 100, or 150.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceServiceLinesServicePaymentInformation": {
        "description": "Payment and control information about a provider for a particular service.",
        "properties": {
          "adjudicatedProcedureCode": {
            "description": "The adjudicated procedure code - an identifying number for a product or service.",
            "type": "string"
          },
          "adjudicatedProcedureModifierCodes": {
            "description": "A list of up to four modifiers that identify special circumstances related to the product or service.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lineItemChargeAmount": {
            "description": "The submitted service charge, expressed as a decimal.",
            "type": "string"
          },
          "lineItemProviderPaymentAmount": {
            "description": "The amount paid for the service, expressed as a decimal. \n\n This amount is calculated as follows: \n\n`servicePaymentInformation.lineItemProviderPaymentAmount =\n  servicePaymentInformation.lineItemChargeAmount - (sum(serviceAdjustments[].adjustmentAmount1) + sum(serviceAdjustments[].adjustmentAmount2) + sum(serviceAdjustments[].adjustmentAmount3) + sum(serviceAdjustments[].adjustmentAmount4) + sum(serviceAdjustments[].adjustmentAmount5) + sum(serviceAdjustments[].adjustmentAmount6))`\n\nAll properties in the formula are within a single `transactions.detailInfo.paymentInfo.serviceLines` array entry. Note that `serviceAdjustments` is an object array that could contain up to 99 entries, each with up to 6 adjustment amounts in separate properties. This allows for up to 594 total adjustments.\n\nAdjustments can be either positive or negative. When the adjustment amounts are positive, the payment decreases. When the adjustment amounts are negative, the payment amount increases, and will be larger than the `lineItemChargeAmount`.",
            "type": "string"
          },
          "nationalUniformBillingCommitteeRevenueCode": {
            "description": "The National Uniform Billing Committee Revenue Code.",
            "type": "string"
          },
          "originalUnitsOfServiceCount": {
            "description": "The original number of units of service submitted, expressed as a decimal.",
            "type": "string"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/ProductServiceIdQualifier",
            "description": "The code identifying the source of the `adjudicatedProcedureCode`."
          },
          "productOrServiceIDQualifierValue": {
            "description": "The description of the `productOrServiceIDQualifier`.",
            "type": "string"
          },
          "submittedAdjudicatedProcedureCode": {
            "description": "The submitted adjudicated procedure code - an identifying number for a product or service.",
            "type": "string"
          },
          "submittedAdjudicatedProcedureModifierCodes": {
            "description": "A list of up to four modifiers that identify special circumstances related to the product or service.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "submittedProcedureCodeDescription": {
            "description": "A free-form description to further clarify the procedure code and any modifiers.",
            "type": "string"
          },
          "submittedProductOrServiceIDQualifier": {
            "$ref": "#/components/schemas/ProductServiceIdQualifier",
            "description": "The code identifying the source of the `submittedAdjudicatedProcedureCode`."
          },
          "submittedProductOrServiceIDQualifierValue": {
            "description": "The description of the `submittedProductOrServiceIDQualifier`.",
            "type": "string"
          },
          "unitsOfServicePaidCount": {
            "description": "The number of units of service that were paid, expressed as a decimal. If not present, the value is assumed to be one.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceServiceLinesServiceSupplementalAmounts": {
        "description": "Information about the service supplemental amount. All values are expressed as decimals.",
        "properties": {
          "allowedActual": {
            "description": "The payer payment plus any assigned patient responsibility.",
            "type": "string"
          },
          "deductionAmount": {
            "description": "This is the late filing reduction amount.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory1": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 1.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory2": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 2.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory3": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 3.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory4": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 4.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory5": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 5.",
            "type": "string"
          },
          "tax": {
            "description": "The tax amount.",
            "type": "string"
          },
          "totalClaimBeforeTaxes": {
            "description": "The total amount for the service charge before taxes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPaymentAdviceServiceLinesServiceSupplementalQuantities": {
        "description": "Additional quantity information about the service. All values are expressed as decimals.",
        "properties": {
          "federalMedicareOrMedicaidPaymentMandateCategory1": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 1.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory2": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 2.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory3": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 3.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory4": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 4.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory5": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 5.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimPricingInformation": {
        "properties": {
          "exceptionCode": {
            "$ref": "#/components/schemas/InstitutionalClaimsExceptionCode"
          },
          "policyComplianceCode": {
            "$ref": "#/components/schemas/PolicyComplianceCode",
            "description": "Code indicating the policy compliance. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#policy-compliance-codes) for a complete list."
          },
          "pricingMethodologyCode": {
            "$ref": "#/components/schemas/PricingMethodologyCode",
            "description": "The pricing methodology code. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#pricing-methodology-codes) for a complete list."
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/ClaimPricingInformationProductOrServiceIDQualifier"
          },
          "rejectReasonCode": {
            "$ref": "#/components/schemas/RejectReasonCode",
            "description": "Code indicating the rejection message returned from the third party organization. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#reject-reason-codes) for a complete list."
          },
          "repricedAllowedAmount": {
            "description": "The allowed amount, expressed as a decimal.",
            "type": "string"
          },
          "repricedApprovedAmount": {
            "description": "The approved DRG amount, expressed as a decimal.",
            "type": "string"
          },
          "repricedApprovedDRGCode": {
            "description": "The approved DRG code.",
            "type": "string"
          },
          "repricedApprovedHCPCSCode": {
            "description": "The approved procedure code. If you provide this property, you must also include `productOrServiceIDQualifier`.",
            "type": "string"
          },
          "repricedApprovedRevenueCode": {
            "description": "The approved revenue code.",
            "type": "string"
          },
          "repricedApprovedServiceUnitCode": {
            "$ref": "#/components/schemas/RepricedApprovedServiceUnitCode"
          },
          "repricedApprovedServiceUnitCount": {
            "description": "The approved service units or inpatient days. The maximum length for this field is 8 digits excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is three.",
            "type": "string"
          },
          "repricedOrgIdentifier": {
            "description": "The organization identification number.",
            "type": "string"
          },
          "repricedPerDiem": {
            "description": "The pricing rate associated with per diem or flat rate pricing, expressed as a decimal.",
            "type": "string"
          },
          "repricedSavingAmount": {
            "description": "The savings amount, expressed as a decimal.",
            "type": "string"
          }
        },
        "required": [
          "pricingMethodologyCode",
          "repricedAllowedAmount"
        ],
        "type": "object"
      },
      "ClaimPricingInformationProductOrServiceIDQualifier": {
        "description": "Code identifying the type of product or service ID used. Can be set to `ER` - Jurisdiction Specific Procedure and Supply Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `HP` - Health Insurance Prospective Payment System (HIPPS) Skilled Nursing Facility Rate Code, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, or `WK` - Advanced Billing Concepts (ABC) Codes. Note that ABC codes are deprecated and should not be used in new claims. If you provide this property, you must also provide `repricedApprovedHCPCSCode` Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#product-or-service-id-qualifier-codes) for a complete list and additional usage notes.",
        "enum": [
          "ER",
          "HC",
          "HP",
          "IV",
          "WK"
        ],
        "type": "string"
      },
      "ClaimPricingRepricingInformation": {
        "description": "Repricing information to be completed by repricers, not providers. For capitated encounters, pricing or repricing information usually is not applicable and is provided to qualify other information within the claim.",
        "properties": {
          "exceptionCode": {
            "$ref": "#/components/schemas/ClaimsExceptionCode"
          },
          "policyComplianceCode": {
            "$ref": "#/components/schemas/PolicyComplianceCode",
            "description": "Code indicating the policy compliance. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#policy-compliance-codes-2) for a complete list."
          },
          "pricingMethodologyCode": {
            "$ref": "#/components/schemas/PricingMethodologyCode"
          },
          "rejectReasonCode": {
            "$ref": "#/components/schemas/RejectReasonCode",
            "description": "Code indicating the rejection message returned from the third party organization. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#reject-reason-codes-2) for a complete list."
          },
          "repricedAllowedAmount": {
            "description": "The dollar amount, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "repricedApprovedAmbulatoryPatientGroupAmount": {
            "description": "The dollar amount, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "repricedApprovedAmbulatoryPatientGroupCode": {
            "description": "The code indicating the type of repricing.",
            "type": "string"
          },
          "repricedSavingAmount": {
            "description": "The dollar amount, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "repricingOrganizationIdentifier": {
            "description": "The identifier of the organization that repriced the claim.",
            "type": "string"
          },
          "repricingPerDiemOrFlatRateAmount": {
            "description": "The pricing rate associated with per diem or flat rate repricing, expressed as a decimal.",
            "type": "string"
          }
        },
        "required": [
          "pricingMethodologyCode",
          "repricedAllowedAmount"
        ],
        "type": "object"
      },
      "ClaimReference": {
        "description": "Information about the claim.",
        "properties": {
          "claimType": {
            "description": "The type of claim, currently not used.",
            "type": "string"
          },
          "correlationId": {
            "description": "An identifier Stedi assigns to the claim.",
            "type": "string"
          },
          "customerClaimNumber": {
            "description": "A tracking number that Stedi assigns to the claim.",
            "type": "string"
          },
          "formatVersion": {
            "description": "The X12 EDI version Stedi used to generate the claim for the payer. This is always `5010`.",
            "type": "string"
          },
          "patientControlNumber": {
            "description": "The `patientControlNumber` from the original request, if supplied. This is a unique identifier that you assign to the claim so you can track the claim and correlate it with responses from the payer.",
            "type": "string"
          },
          "payerID": {
            "description": "The ID of the payer. This is the same as the `tradingPartnerServiceId`.",
            "type": "string"
          },
          "rhclaimNumber": {
            "description": "A tracking number Stedi assigns to the claim. This is the same as the `correlationId`.",
            "type": "string"
          },
          "serviceLines": {
            "description": "Contains a unique identifier for each service line, listed in the order the service lines were included in the claim. You can use these identifiers to correlate payer responses to specific service lines.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineResponseIdentifier"
            },
            "type": "array"
          },
          "submitterId": {
            "description": "Stedi's ID for the entity that submitted the claim.",
            "type": "string"
          },
          "timeOfResponse": {
            "description": "A timestamp for Stedi's response to the claim submission.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimServiceFacilityLocation": {
        "description": "Required when the location for the service is different from the billing provider's address. The purpose of this object is to identify specifically where the service was rendered. This can be healthcare facilities, such as surgical centers or reference labs, OR the patient's address when services were rendered in their home.\n- Only include this object when the service facility location is **different** from the billing provider's address. If you include this object when the address is the same, Stedi omits all of the service facility location information from the claim submission, including the name and any identifiers.\n- Don't use this object when reporting ambulance services - use `ambulancePickupLocation` and `ambulanceDropoffLocation` instead.\n- Sometimes the billing provider is an actual physician group that is located at the same address as a hospital, but is in fact a separate entity. In this case, you can differentiate the service facility location by including the specific suite or building number of the physician group. This ensures that the service facility location is different from the billing provider's address and is reported accurately.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address of where services were rendered. \n\n If the service facility location is in an area where there are no street addresses, enter a description of where the service was rendered. For example, 'crossroad of State Road 34 and 45'. \n\n For United States addresses, you **must** include the full nine-digit zip code with no separators, such as `100031502`. If you don't know the full zip code, you can find it using the [USPS ZIP Code Lookup](https://tools.usps.com/zip-code-lookup.htm) tool."
          },
          "npi": {
            "description": "The organization [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the service facility. Only include this property when the service facility is not a component or subpart of the `billing` provider. Don't include when the service facility is the patient's home.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The laboratory or facility name. When services were rendered in the patient's home, we recommend setting this to `Residence` or something similar.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The telephone extension, if applicable. Only submit the numeric extension. For example, don't include data that indicates an extension, such as 'ext.' or 'x-'.",
            "type": "string"
          },
          "phoneName": {
            "description": "The full name of the person or office.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code, BBB is the telephone number prefix, and CCCC is the telephone number. The phone number should only include the digits 0 to 9. Don't include separators, such as dashes, and don't include long distance access numbers, such as 1. For example, you would format the phone number 123-456-7890 as 1234567890.",
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "Secondary identifier for the service facility location. Used when another identifier is needed for the claims processor to identify the facility or when the entity is not a healthcare provider and does not have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). The `qualifier` can be set to `0B` - State License Number, `LU` - Location Number, or `G2` - Provider Commercial Number. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "address",
          "organizationName"
        ],
        "type": "object"
      },
      "ClaimStatusCode": {
        "description": "Indicates the status of the claim after adjudication by the payer. These codes determine whether the claim was processed as primary, secondary, tertiary, denied, forwarded to other payers, or represents special processing situations like reversals or predeterminations.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "19",
          "20",
          "21",
          "22",
          "23",
          "25"
        ],
        "type": "string"
      },
      "ClaimStatusContactInformation": {
        "properties": {
          "electronicDataInterChangeAccessNumber": {
            "description": "The payer's Electronic Data Interchange Access number.",
            "type": "string"
          },
          "email": {
            "description": "The payer's email address.",
            "type": "string"
          },
          "fax": {
            "description": "The payer's fax number, without separators. For example, `5551123345` for `555-112-3345`",
            "type": "string"
          },
          "name": {
            "description": "The payer contact name.",
            "type": "string"
          },
          "phone": {
            "description": "The payer's telephone number. Phone numbers are formatted as AAABBBCCCC, where AAA represents the area code, BBB represents the telephone number prefix, and CCCC represents the telephone number. Phone numbers are provided without separators, such as dashes or parentheses. For example, `5551123345` for `555-112-3345`.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The payer's telephone extension.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimStatusEncounter": {
        "description": "Information about the referenced claim or claims for which you want to retrieve status information.\n\n We recommend supplying a date range that is at least plus or minus 7 days from the date of the services listed in the claim, using the `beginningDateOfService` and `endDateOfService` properties. The payer may have stored a different date for the encounter than the one in your records, so providing a date range increases the likelihood that the payer will find a match.",
        "properties": {
          "beginningDateOfService": {
            "description": "The date the service began.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "billingType": {
            "description": "The billing type reference ID. For example, the billing type for inpatient services is `111`.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "clearingHouseClaimNumber": {
            "description": "The claim number provided by the clearinghouse.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "endDateOfService": {
            "description": "The date the service ended.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "locationIdentifier": {
            "description": "The application or location identifier. Required if the application or location system identifier is known.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number provided by the service provider.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "pharmacyPrescriptionNumber": {
            "description": "The patient's pharmacy prescription number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "submittedAmount": {
            "description": "The total charges submitted for the claim. Note that not all payer systems retain the original submitted charges; they are sometimes changed during processing.",
            "maxLength": 18,
            "minLength": 1,
            "type": "string"
          },
          "trackingNumber": {
            "description": "This is the tracking number assigned to the claim status request. It is returned in the response as `claims.trackingNumber`. If the payer requires a tracking number and you do not supply one, Stedi generates a tracking number for you from a UUID.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "tradingPartnerClaimNumber": {
            "description": "An identifier for the claim, assigned by the payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimStatusPayer": {
        "description": "Information about the payer listed in the referenced claim.",
        "properties": {
          "centersForMedicareAndMedicaidServicePlanId": {
            "description": "The payer's Health Plan ID (HPID) or Other Entity Identifier (OEID).",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimStatusContactInformation"
          },
          "organizationName": {
            "description": "The payer's organization name. For example `UNITEDHEALTHCARE`.",
            "type": "string"
          },
          "payerIdentification": {
            "description": "The payer's identification number. This is the `tradingPartnerServiceId`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimStatusProviderType": {
        "description": "Identifies the type of provider related to the referenced healthcare claim.",
        "enum": [
          "BillingProvider",
          "ServiceProvider"
        ],
        "type": "string"
      },
      "ClaimStatusRawX12RequestContent": {
        "properties": {
          "x12": {
            "type": "string"
          }
        },
        "required": [
          "x12"
        ],
        "type": "object"
      },
      "ClaimStatusRawX12ResponseContent": {
        "properties": {
          "claims": {
            "description": "The status information for the claim referenced in the original claim status request.\n\nThe payer may return multiple claims in the response if they have more than one claim on file that matches the information you provided.",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "type": "array"
          },
          "controlNumber": {
            "description": "The control number the payer provided in the claim status response. This is used to identify the transaction.",
            "type": "string"
          },
          "dependent": {
            "$ref": "#/components/schemas/Member",
            "description": "Information about the dependent listed in the referenced claim."
          },
          "errorResponse": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "implementationTransactionSetSyntaxError": {
            "description": "The syntax error code in the 999 Implementation Acknowledgment. It indicates the type of error (if present) in the EDI request syntax. Visit `IK502` in the [Implementation Acknowledgment specification](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231/01HRF41ES1DVGCA6X1EHSRPFXZ#properties.heading.properties.transaction_set_response_header_AK2_loop.items.properties.transaction_set_response_trailer_IK5.properties.implementation_transaction_set_syntax_error_code_02) for a complete list.",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/ClaimStatusResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimStatusPayer"
          },
          "providers": {
            "description": "Information about the billing and/or service providers related to the referenced claim.",
            "items": {
              "$ref": "#/components/schemas/StatusResponseProvider"
            },
            "type": "array"
          },
          "reassociationKey": {
            "description": "The control number for the transaction.",
            "type": "string"
          },
          "status": {
            "description": "The status of the entire claim.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ClaimStatusSubscriber",
            "description": "Information about the subscriber listed in the referenced claim."
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim status request. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "transactionSetAcknowledgement": {
            "description": "The acknowledgment code in the 999 Implementation Acknowledgment, an EDI file generated by the payer to acknowledge receipt of the claim status request. It indicates whether the claim status request was accepted or rejected due to errors in the EDI request syntax.",
            "type": "string"
          },
          "x12": {
            "description": "The raw X12 response from the payer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimStatusRequestContent": {
        "properties": {
          "controlNumber": {
            "deprecated": true,
            "description": "Stedi generates a control number for each claim status check, so you don’t need to include this property in your request.",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "dependent": {
            "$ref": "#/components/schemas/Member",
            "description": "Information about the dependent listed in the referenced claim. You must submit the dependent's `firstName`, `lastName`, `dateOfBirth`, and `gender` (if known). If the claim set the dependent's gender to `U` for unknown, you should omit the `gender` property."
          },
          "encounter": {
            "$ref": "#/components/schemas/ClaimStatusEncounter"
          },
          "providers": {
            "description": "Information about the billing and/or service providers related to the referenced claim. For each provider, you must set the `providerType` and one of the following identifiers: `npi`, `taxId`, or `etin`.\n    - When the `providerType` = `BillingProvider`, you must include the provider's `etin`.\n    - When `providerType` = `ServiceProvider`, you must include the `npi` if the provider has one. Otherwise, include the `taxId`.",
            "items": {
              "$ref": "#/components/schemas/StatusRequestProvider",
              "description": "Information about the billing and/or service providers related to the referenced claim. You must include at least the billing provider in this array. For each provider, you must set the `providerType` and one of the following identifiers: `npi`, `taxId`, or `etin`. When the `providerType` = `BillingProvider`, we recommend setting `etin` as the identifier."
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array"
          },
          "serviceLineInformation": {
            "$ref": "#/components/schemas/ServiceLineInformation",
            "deprecated": true
          },
          "serviceLinesInformation": {
            "items": {
              "$ref": "#/components/schemas/ServiceLineInformation"
            },
            "minItems": 1,
            "type": "array"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ClaimStatusSubscriber"
          },
          "tradingPartnerName": {
            "description": "This is the payer name, such as Cigna or Aetna.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "This is the Payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list. You can send requests using the Primary Payer ID, the Stedi Payer ID, or any alias listed in the payer record.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "providers",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "ClaimStatusResponseContent": {
        "properties": {
          "claims": {
            "description": "The status information for the claim referenced in the original claim status request.\n\nThe payer may return multiple claims in the response if they have more than one claim on file that matches the information you provided.",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "type": "array"
          },
          "controlNumber": {
            "description": "The control number the payer provided in the claim status response. This is used to identify the transaction.",
            "type": "string"
          },
          "dependent": {
            "$ref": "#/components/schemas/Member",
            "description": "Information about the dependent listed in the referenced claim."
          },
          "errorResponse": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "implementationTransactionSetSyntaxError": {
            "description": "The syntax error code in the 999 Implementation Acknowledgment. It indicates the type of error (if present) in the EDI request syntax. Visit `IK502` in the [Implementation Acknowledgment specification](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231/01HRF41ES1DVGCA6X1EHSRPFXZ#properties.heading.properties.transaction_set_response_header_AK2_loop.items.properties.transaction_set_response_trailer_IK5.properties.implementation_transaction_set_syntax_error_code_02) for a complete list.",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/ClaimStatusResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimStatusPayer"
          },
          "providers": {
            "description": "Information about the billing and/or service providers related to the referenced claim.",
            "items": {
              "$ref": "#/components/schemas/StatusResponseProvider"
            },
            "type": "array"
          },
          "reassociationKey": {
            "description": "The control number for the transaction.",
            "type": "string"
          },
          "status": {
            "description": "The status of the entire claim.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ClaimStatusSubscriber",
            "description": "Information about the subscriber listed in the referenced claim."
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim status request. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "transactionSetAcknowledgement": {
            "description": "The acknowledgment code in the 999 Implementation Acknowledgment, an EDI file generated by the payer to acknowledge receipt of the claim status request. It indicates whether the claim status request was accepted or rejected due to errors in the EDI request syntax.",
            "type": "string"
          },
          "x12": {
            "description": "The raw X12 response from the payer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimStatusResponseMeta": {
        "description": "Metadata about the response.",
        "properties": {
          "applicationMode": {
            "description": "Identifies where this request can be found for support.",
            "type": "string"
          },
          "billerId": {
            "description": "The biller ID assigned to this request.",
            "type": "string"
          },
          "senderId": {
            "description": "The sender ID assigned to this request.",
            "type": "string"
          },
          "submitterId": {
            "description": "The submitter ID assigned to this request.",
            "type": "string"
          },
          "traceId": {
            "description": "The unique ID assigned to this request within Stedi.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimStatusSubscriber": {
        "description": "Information about the subscriber listed in the referenced claim.\n- You must set both the `dateOfBirth` and `gender` properties when the subscriber is the patient unless the gender is unknown. Stedi determines that the subscriber is the patient when the `dependent` object is not included in the request.\n- If either `dateOfBirth` or `gender` is set, you must include both properties unless the gender is unknown.",
        "properties": {
          "dateOfBirth": {
            "description": "The subscriber's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The subscriber's first name as specified on their policy.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/ClaimStatusSubscriberGender"
          },
          "groupNumber": {
            "description": "The group number associated with the subscriber's insurance policy.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name as specified on their policy. The subscriber can be an individual or a business entity.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "memberId": {
            "description": "The subscriber's insurance member ID. This is the unique identifier for the subscriber on the insurance policy.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "memberId"
        ],
        "type": "object"
      },
      "ClaimStatusSubscriberGender": {
        "description": "A code indicating the subscriber's gender. If the claim set the subscriber's gender to `U` for unknown, you should omit this property from the claim status request.",
        "enum": [
          "M",
          "F"
        ],
        "type": "string"
      },
      "ClaimSupplementalInformation": {
        "description": "Additional information or documentation required for the claim. This is where you can include information about [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments), if applicable.",
        "properties": {
          "adjustedRepricedClaimNumber": {
            "description": "Required when the repricer believes this information is necessary. Providers should not complete this property.",
            "type": "string"
          },
          "carePlanOversightNumber": {
            "description": "Required when the physician is billing Medicare for Care Plan Oversight (CPO). This is the number of the home health agency or hospice providing Medicare covered services to the patient.",
            "type": "string"
          },
          "claimControlNumber": {
            "description": "Required when the `claimFrequencyCode` indicates this claim is a replacement or void to a previously adjudicated claim.",
            "type": "string"
          },
          "claimNumber": {
            "deprecated": true,
            "description": "The claim number assigned by clearinghouse, van, etc.\n\nStedi overwrites this value when it sends the claim to the payer, so you shouldn't include this property in your request. We strongly recommend using the `claimInformation.patientControlNumber` property as your claim tracking ID.",
            "type": "string"
          },
          "cliaNumber": {
            "description": "Required for all CLIA certified facilities performing CLIA covered laboratory services. When this claim contains both in-house and outsourced laboratory services, use the CLIA Number for laboratory services performed by the billing or rendering provider. You can report outsourced laboratory services in the `serviceLines` object.",
            "type": "string"
          },
          "demoProjectIdentifier": {
            "description": "Required when it is necessary to identify claims that are atypical in ways such as content, purpose, and/or payment. For example, claims made as the result of a demonstration or a clinical trial.",
            "type": "string"
          },
          "investigationalDeviceExemptionNumber": {
            "description": "Required when claim involves a Food and Drug Administration (FDA) assigned investigational device exemption (IDE) number. When more than one IDE applies, you must split into separate claims.",
            "type": "string"
          },
          "mammographyCertificationNumber": {
            "description": "Required when mammography services are rendered by a certified mammography provider.",
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "Required when the provider needs to identify the actual medical record of the patient for this episode of care.",
            "type": "string"
          },
          "medicareCrossoverReferenceId": {
            "description": "Required when the submitter is Medicare and the claim is a Medigap or COB crossover claim.",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "Required when an authorization number is assigned by the payer or UMO _and_ the services on this claim were preauthorized. The UMO (Utilization Management Organization) is generally the entity empowered to make a decision regarding the outcome of a health services review or the owner of information.",
            "type": "string"
          },
          "referralNumber": {
            "description": "Required when a referral number is assigned by the payer or Utilization Management Organization (UMO) _and_ a referral is involved.",
            "type": "string"
          },
          "reportInformation": {
            "$ref": "#/components/schemas/ReportInformation",
            "description": "Required when you plan to submit an [attachment](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the claim electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify additional information that is being held at the provider's office and is available upon request.\n\nUse this object when there is a single attachment for the claim. If there are multiple attachments, use the `reportInformations` array instead."
          },
          "reportInformations": {
            "description": "An array of report information for the claim. Use this when you need to submit multiple report information records. You can submit up to 10 objects in this array.\n\nRequired when you plan to submit [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the claim electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify that they have additional information at their office that is available upon request.",
            "items": {
              "$ref": "#/components/schemas/ReportInformation"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "repricedClaimNumber": {
            "description": "Required when the repricer believes this information is necessary. Providers should not complete this property.",
            "type": "string"
          },
          "serviceAuthorizationExceptionCode": {
            "$ref": "#/components/schemas/ServiceAuthorizationExceptionCode"
          }
        },
        "type": "object"
      },
      "ClaimsAddress": {
        "properties": {
          "address1": {
            "description": "The first line of the street address. This typically contains the building number and street name.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the street address. This typically contains the apartment or suite number.",
            "type": "string"
          },
          "city": {
            "description": "The city name.",
            "type": "string"
          },
          "countryCode": {
            "description": "Use the alpha-2 country codes from Part 1 of ISO 3166.",
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "Use the country subdivision codes from Part 2 of ISO 3166.",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal zone or zip code. Exclude punctuation and spaces.",
            "type": "string"
          },
          "state": {
            "description": "The state or province code. Only required when the city is in the Unites States and Canada.",
            "type": "string"
          }
        },
        "required": [
          "address1",
          "city"
        ],
        "type": "object"
      },
      "ClaimsClaimStatus": {
        "properties": {
          "billTypeIdentifier": {
            "description": "The bill type identification.",
            "type": "string"
          },
          "claimServiceBeginDate": {
            "description": "The starting date of the service.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "claimServiceDate": {
            "description": "The date of the service.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "claimServiceEndDate": {
            "description": "The ending date of the service.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "clearinghouseTraceNumber": {
            "description": "The identifier the clearinghouse assigned to the original claim.",
            "type": "string"
          },
          "informationClaimStatuses": {
            "description": "Claim status information.",
            "items": {
              "$ref": "#/components/schemas/InformationClaimStatus"
            },
            "type": "array"
          },
          "patientAccountNumber": {
            "description": "The patient control number provided in the original claim. You can use this value to correlate the payer's response with the original claim.",
            "type": "string"
          },
          "pharmacyPrescriptionNumber": {
            "description": "The Pharmacy Prescription Number.",
            "type": "string"
          },
          "referencedTransactionTraceNumber": {
            "description": "The patient control number provided in the original claim. You can use this value to correlate the payer's response with the original claim.",
            "type": "string"
          },
          "tradingPartnerClaimNumber": {
            "description": "The payer's unique identifier for the claim.",
            "type": "string"
          },
          "voucherIdentifier": {
            "description": "The voucher identifier. Some payers assign voucher identifiers to a group of claims as part of the payment process prior to payment being issued.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsContactInformation": {
        "description": "You must include at least one communication method (phone, fax, or email) in this object.",
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "faxNumber": {
            "description": "The fax number.",
            "type": "string"
          },
          "name": {
            "description": "The full name of the person or office.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The phone extension, if applicable.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code, BBB is the telephone number prefix, and CCCC is the telephone number. The phone number should only include the digits 0 to 9. Don't include separators, such as dashes, and don't include long distance access numbers, such as 1. For example, you would format the phone number 123-456-7890 as 1234567890.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsDiagnosisTypeCode": {
        "description": "Code indicating the specific industry code list. Can be set to `ABK` - International Classification of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis or `ABF` - International Classification of Diseases Clinical Modification (ICD-10-CM) Diagnosis.",
        "enum": [
          "BK",
          "ABK",
          "BF",
          "ABF"
        ],
        "type": "string"
      },
      "ClaimsError": {
        "properties": {
          "code": {
            "description": "The error code.",
            "type": "string"
          },
          "description": {
            "description": "The description of the error code.",
            "type": "string"
          },
          "field": {
            "description": "The field related to the error.",
            "type": "string"
          },
          "followupAction": {
            "description": "Recommended followup actions to correct the error.",
            "type": "string"
          },
          "location": {
            "description": "Where the error is located in the original request.",
            "type": "string"
          },
          "value": {
            "description": "The value for the data causing the error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsExceptionCode": {
        "description": "Code specifying the exception reason for consideration of out-of-network health care services. This is the reason generated by the third-party health organization. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#exception-codes-2) for a complete list.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "type": "string"
      },
      "ClaimsHealthCareInformation": {
        "properties": {
          "diagnosisCode": {
            "description": "The diagnosis code. **Do not** submit the decimal point for ICD codes. The decimal point is implied. Also, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.",
            "type": "string"
          },
          "diagnosisTypeCode": {
            "$ref": "#/components/schemas/ClaimsDiagnosisTypeCode"
          }
        },
        "required": [
          "diagnosisCode",
          "diagnosisTypeCode"
        ],
        "type": "object"
      },
      "ClaimsIndividualRelationshipCode": {
        "description": "Code identifying the relationship to the person insured. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#individual-relationship-codes) for a complete list.",
        "enum": [
          "01",
          "18",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8"
        ],
        "type": "string"
      },
      "ClaimsPayer": {
        "description": "Information about the payer for the submitted claim.",
        "properties": {
          "payerID": {
            "description": "The payer's ID. This is the same as the `tradingPartnerServiceId`.",
            "type": "string"
          },
          "payerName": {
            "description": "The payer's business name, such as Aetna or Cigna.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsProvider": {
        "description": "The entity responsible for overseeing the rendering provider and the care reported in this claim. Applies when the rendering provider is supervised by a physician. Use when the provider applies to the entire claim, not just a specific service line.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "description": "The commercial number of the supervising provider.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "description": "The first name of the supervising provider.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the supervising provider.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The location number of the supervising provider.",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name or initial of the supervising provider.",
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the supervising provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The supervising provider's business name, when the provider is not an individual.",
            "type": "string"
          },
          "providerType": {
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "ssn": {
            "deprecated": true,
            "description": "Social Security Number without spaces or punctuation (9 digits)",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The state license number of the supervising provider.",
            "type": "string"
          },
          "suffix": {
            "description": "The suffix of the supervising provider's name, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "providerType"
        ],
        "type": "object"
      },
      "ClaimsRawX12SubmissionRequestContent": {
        "properties": {
          "x12": {
            "type": "string"
          }
        },
        "required": [
          "x12"
        ],
        "type": "object"
      },
      "ClaimsRawX12SubmissionResponseContent": {
        "properties": {
          "claimReference": {
            "$ref": "#/components/schemas/ClaimReference"
          },
          "controlNumber": {
            "description": "An identifier for the transaction.",
            "type": "string"
          },
          "editResponses": {
            "description": "Currently not used.",
            "items": {
              "$ref": "#/components/schemas/EditResponse"
            },
            "type": "array"
          },
          "editStatus": {
            "description": "Currently not used.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors. Currently not used.",
            "items": {
              "$ref": "#/components/schemas/ClaimsError"
            },
            "type": "array"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimsPayer"
          },
          "status": {
            "description": "The status of the claim submission.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "warnings": {
            "description": "A list of warnings.",
            "items": {
              "$ref": "#/components/schemas/ClaimsWarning"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimsServiceLineReferringProvider": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "claimOfficeNumber": {
            "deprecated": true,
            "type": "string"
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "description": "The provider's Employer Identification Number (EIN). The EIN is typically a string of exactly nine numbers with no separators, unless otherwise specified by the provider. If you include this value, you cannot include the provider's `ssn`.",
            "type": "string"
          },
          "employerIdentificationNumber": {
            "deprecated": true,
            "description": "The provider's Employer Identification Number (EIN). This field is the same as `employerId`. The EIN is typically a string of exactly nine numbers with no separators, unless otherwise specified by the provider. If you include this value, you cannot include the provider's `ssn`.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "naic": {
            "deprecated": true,
            "description": "The National Association of Insurance Commissioners (NAIC) code.",
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's organization name.",
            "type": "string"
          },
          "otherIdentifier": {
            "type": "string"
          },
          "payerIdentificationNumber": {
            "description": "The payer identification number.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "An identifier for the provider. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "ssn": {
            "deprecated": true,
            "description": "The provider's Social Security Number. If you provide this value, you cannot include the provider's `employerId`.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsServiceLineRenderingProvider": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "claimOfficeNumber": {
            "deprecated": true,
            "type": "string"
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "description": "The provider's Employer Identification Number (EIN). The EIN is typically a string of exactly nine numbers with no separators, unless otherwise specified by the provider. If you include this value, you cannot include the provider's `ssn`.",
            "type": "string"
          },
          "employerIdentificationNumber": {
            "deprecated": true,
            "description": "The provider's Employer Identification Number (EIN). This field is the same as `employerId`. The EIN is typically a string of exactly nine numbers with no separators, unless otherwise specified by the provider. If you include this value, you cannot include the provider's `ssn`.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. You should include either the `lastName` or `organizationName` property in this object.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "naic": {
            "deprecated": true,
            "description": "The National Association of Insurance Commissioners (NAIC) code.",
            "type": "string"
          },
          "npi": {
            "description": "The [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name. You should include either the `lastName` or `organizationName` property in this object.",
            "type": "string"
          },
          "otherIdentifier": {
            "type": "string"
          },
          "payerIdentificationNumber": {
            "description": "The payer identification number.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "An identifier for the provider. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `LU` - Location Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "ssn": {
            "deprecated": true,
            "description": "The provider's Social Security Number. If you provide this value, you cannot include the provider's `employerId`.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsServiceLineSupervisingProvider": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "claimOfficeNumber": {
            "deprecated": true,
            "type": "string"
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "description": "The provider's Employer Identification Number (EIN). The EIN is typically a string of exactly nine numbers with no separators, unless otherwise specified by the provider. If you include this value, you cannot include the provider's `ssn`.",
            "type": "string"
          },
          "employerIdentificationNumber": {
            "deprecated": true,
            "description": "The provider's Employer Identification Number (EIN). This field is the same as `employerId`. The EIN is typically a string of exactly nine numbers with no separators, unless otherwise specified by the provider. If you include this value, you cannot include the provider's `ssn`.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "naic": {
            "deprecated": true,
            "description": "The National Association of Insurance Commissioners (NAIC) code.",
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name. You should include either the `lastName` or `organizationName` property in this object.",
            "type": "string"
          },
          "otherIdentifier": {
            "type": "string"
          },
          "payerIdentificationNumber": {
            "deprecated": true,
            "description": "The payer identification number.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "An identifier for the provider. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `LU` - Location Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "ssn": {
            "deprecated": true,
            "description": "The provider's SSN.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimsSubmissionRequestContent": {
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/Billing"
          },
          "claimIdentifier": {
            "$ref": "#/components/schemas/ClaimIdentifier"
          },
          "claimInformation": {
            "$ref": "#/components/schemas/ClaimInformation"
          },
          "controlNumber": {
            "description": "Not currently used.",
            "type": "string"
          },
          "dependent": {
            "$ref": "#/components/schemas/Dependent"
          },
          "ordering": {
            "$ref": "#/components/schemas/Ordering",
            "deprecated": true
          },
          "payToAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "Use when the address for payment is different than that of the billing provider for this claim."
          },
          "payToPlan": {
            "$ref": "#/components/schemas/PayToPlan"
          },
          "payerAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The payer's address. Some payers use this for internal routing. Only provide this address if the payer explicitly requires it."
          },
          "providers": {
            "deprecated": true,
            "description": "Information about all providers, with each provider specified by its type (for example, `Referring`). You can't include this array in the same request as dedicated provider objects, such as `referring` or `rendering`.",
            "items": {
              "$ref": "#/components/schemas/ClaimsProvider"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array"
          },
          "receiver": {
            "$ref": "#/components/schemas/Receiver"
          },
          "referring": {
            "$ref": "#/components/schemas/Referring"
          },
          "rendering": {
            "$ref": "#/components/schemas/Rendering"
          },
          "submitter": {
            "$ref": "#/components/schemas/Submitter"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "supervising": {
            "$ref": "#/components/schemas/Supervising"
          },
          "tradingPartnerName": {
            "description": "This is the payer's business name, like Cigna or Aetna.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "This is the Payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list. You can send requests using the Primary Payer ID, the Stedi Payer ID, or any alias listed in the payer record.",
            "minLength": 1,
            "type": "string"
          },
          "usageIndicator": {
            "description": "Whether you want to send a test or production claim. This property also allows you to filter claims in the Stedi portal by production or test data. By default, this property is set to `P` for production data. Use `T` to designate a claim as test data.",
            "type": "string"
          }
        },
        "required": [
          "billing",
          "claimInformation",
          "receiver",
          "submitter",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "ClaimsSubmissionResponseContent": {
        "properties": {
          "claimReference": {
            "$ref": "#/components/schemas/ClaimReference"
          },
          "controlNumber": {
            "description": "An identifier for the transaction.",
            "type": "string"
          },
          "editResponses": {
            "description": "Currently not used.",
            "items": {
              "$ref": "#/components/schemas/EditResponse"
            },
            "type": "array"
          },
          "editStatus": {
            "description": "Currently not used.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors. Currently not used.",
            "items": {
              "$ref": "#/components/schemas/ClaimsError"
            },
            "type": "array"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimsPayer"
          },
          "status": {
            "description": "The status of the claim submission.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "warnings": {
            "description": "A list of warnings.",
            "items": {
              "$ref": "#/components/schemas/ClaimsWarning"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimsWarning": {
        "description": "Warnings indicate issues that may cause some payers to reject the claim. Stedi doesn’t reject claims with warnings only - a response with warnings but no errors means Stedi still submitted the claim.\n\nIf you receive warnings, we recommend closely monitoring 277CA responses from the payer for rejections. If the claim is rejected, we recommend fixing the issues identified in the warnings before resubmitting.",
        "properties": {
          "code": {
            "description": "A machine-readable code indicating the type of problem.",
            "type": "string"
          },
          "description": {
            "description": "A human-readable description of the problem.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CodeCategory": {
        "description": "Identifies the category to which the `conditionCode` applies. Can be set to `E1` - Spectacle Lenses, `E2` - Contact Lenses, or `E3` - Spectacle Frames.",
        "enum": [
          "E1",
          "E2",
          "E3"
        ],
        "type": "string"
      },
      "CodeListQualifierCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "GR",
          "NI",
          "ZZ"
        ],
        "type": "string"
      },
      "CommunicationMode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "Electronic Data Interchange Access Number",
          "Electronic Mail",
          "Facsimile",
          "Telephone",
          "Uniform Resource Locator (URL)",
          "Telephone Extension",
          "Work Phone Number"
        ],
        "type": "string"
      },
      "ComponentsSchemasClaimStatus": {
        "description": "The status, required action, and paid information of a claim or service line.",
        "properties": {
          "amountPaid": {
            "description": "The total amount paid for the claim. May be zero when no payment is being made. Some payers can provide the adjudicated payment amount before they issue the remittance.",
            "type": "string"
          },
          "checkIssueDate": {
            "description": "The date the payer issued the check for payment. This may also contain a non-payment remittance advice date, if available from the payer.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "checkNumber": {
            "description": "The check identification number or electronic funds transfer (EFT) trace number. This number is used to track the payment. This may also contain a non-payment remittance advice Trace Number (835 or paper), if available from the payer.",
            "type": "string"
          },
          "claimServiceDate": {
            "description": "Either a single date (formatted as `YYYYMMDD`) or a range of dates (formatted as `YYYYMMDD-YYYYMMDD`) identifying the period of service related to the claim. This property is derived from the service level dates.",
            "type": "string"
          },
          "clearingHouseClaimNumber": {
            "description": "The claim number provided by the clearinghouse.",
            "type": "string"
          },
          "effectiveDate": {
            "description": "The date the claim was placed in this status by the payer's adjudication process.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entity": {
            "description": "The description of the `entityCode`. For example, `Home Health Care`.",
            "type": "string"
          },
          "entityCode": {
            "description": "Code identifying the organizational entity, physical location, property, or individual associated with the `statusCode`. For example `1G` - Oncology Center.",
            "type": "string"
          },
          "paidDate": {
            "description": "This is the date of denial or approval for the claim. This date may or may not be the same as the issue date of the check, EFT, or non-payment remittance. Some payers can provide this date before they issue the remittance.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number provided by the service provider in the original claim. You can use this value to correlate the claim status response to the original claim.",
            "type": "string"
          },
          "statusCategoryCode": {
            "description": "The status category code. Visit [Claim Status Category Codes](https://x12.org/codes/claim-status-category-codes) in the official X12 documentation for a complete list.",
            "type": "string"
          },
          "statusCategoryCodeValue": {
            "description": "The description of the `statusCategoryCode`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The status code used to identify the status of an entire claim or a service line. For example, `20` - Accepted for Processing. \n\nThis is either a Health Care Claim Status Code or a National Council for Prescription Drug Programs (NCPDP) Reject/Payment Code, when the status is related to pharmacy claims.\n\n Visit [Claim Status Codes]([Health Care Claim Status Code](https://x12.org/codes/claim-status-codes) in the official X12 documentation or the [NCPDP website](https://ncpdp.org/) for a complete list of codes and their values.",
            "type": "string"
          },
          "statusCodeValue": {
            "description": "The description of the `statusCode`.",
            "type": "string"
          },
          "submittedAmount": {
            "description": "The total charges submitted for the claim. The total claim charge may change from the submitted claim total charge based on claims processing instructions, such as claim splitting. Some payers may not store the original submitted charge. Some HMO encounters supply zero as the amount of original charges.",
            "type": "string"
          },
          "trackingNumber": {
            "description": "This is the trace or reference number of the original claim status request.",
            "type": "string"
          },
          "tradingPartnerClaimNumber": {
            "description": "An identifier for the claim, assigned by the payer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompositeDiagnosisCodePointers": {
        "description": "Diagnosis code pointers in order of importance to this service line. These pointers are an index to the ICD-10-CM codes you included in the `claimInformation.healthCareCodeInformation` object array. The pointer values can be from 1 to 12 (integer numbers).\n- You **must** set at least one pointer for the primary diagnosis. Then, you can add up to three additional pointers (up to four in total).\n- The number of pointers cannot exceed the number of diagnosis codes in the `claimInformation.healthCareCodeInformation` object array. For example, if you only supplied one diagnosis code, then the only valid pointer value is 1.\n- Don't put ICD-10-CM codes here - they belong in `claimInformation.healthCareCodeInformation`.",
        "properties": {
          "diagnosisCodePointers": {
            "description": "A diagnosis code pointer for this service line.",
            "items": {
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "diagnosisCodePointers"
        ],
        "type": "object"
      },
      "CompositeMedicalProcedureIdentifier": {
        "description": "Identifies relevant medical procedures by their standard codes and modifiers (if applicable).",
        "properties": {
          "diagnosisCodePointer": {
            "description": "The diagnosis code pointer.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "procedureCode": {
            "description": "The procedure code. Many payers do not support eligibility checks for specific procedure codes. If the payer does not support procedure codes, they return a generic benefits response for the service type code `30`.",
            "type": "string"
          },
          "procedureModifiers": {
            "description": "Procedure modifiers that provides additional information related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "productOrServiceID": {
            "description": "The product or service ID. This value represents the end of the range of applicable procedure codes. The beginning of the range is listed in `procedureCode`.",
            "type": "string"
          },
          "productOrServiceIdQualifier": {
            "description": "The name of the `productOrServiceIdQualifierCode`. For example, `American Dental Association`.",
            "type": "string"
          },
          "productOrServiceIdQualifierCode": {
            "description": "Identifies the external code list used to provide the specified procedure or service codes. Can be `AD` - American Dental Association, `CJ` - Current Procedural Terminology (CPT) codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `ID` - International Classification of Diseases 9th Revision, Clinical Modification (ICD-9-CM) - Procedure, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, `N4` - National Drug Code in 5-4-2 Format, or `ZZ` - Mutually Defined",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConditionIndicator": {
        "description": "Code indicating the condition of the certificate. Can be set to `38` - Certification signed by the physician is on file at the supplier's office or `ZV` - Replacement Item.",
        "enum": [
          "38",
          "ZV"
        ],
        "type": "string"
      },
      "ConditionIndicatorCode": {
        "description": "A second code indicating the condition of the certificate. Can be set to `38` - Certification signed by the physician is on file at the supplier's office or `ZV` - Replacement Item.",
        "enum": [
          "38",
          "ZV"
        ],
        "type": "string"
      },
      "ConditionIndicatorDurableMedicalEquipment": {
        "description": "Required when a Durable Medical Equipment Regional Carrier Certificate of Medical Necessity (DMERC CMN) or a DMERC Information Form (DIF), or Oxygen Therapy Certification is included on this service line and the information is necessary for adjudication.",
        "properties": {
          "certificationConditionIndicator": {
            "$ref": "#/components/schemas/ConditionIndicatorDurableMedicalEquipmentCertificationConditionIndicator"
          },
          "conditionIndicator": {
            "$ref": "#/components/schemas/ConditionIndicator"
          },
          "conditionIndicatorCode": {
            "$ref": "#/components/schemas/ConditionIndicatorCode"
          }
        },
        "required": [
          "certificationConditionIndicator",
          "conditionIndicator"
        ],
        "type": "object"
      },
      "ConditionIndicatorDurableMedicalEquipmentCertificationConditionIndicator": {
        "description": "Code indicating whether there is a certification. Can be set to `N` - No or `Y` - Yes.",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ConditionInformation": {
        "description": "HI",
        "properties": {
          "conditionCodes": {
            "description": "An array of condition codes.",
            "items": {
              "type": "string"
            },
            "maxItems": 12,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "conditionCodes"
        ],
        "type": "object"
      },
      "Confidence": {
        "properties": {
          "level": {
            "$ref": "#/components/schemas/ConfidenceLevel",
            "description": "The confidence level for the match."
          },
          "reason": {
            "description": "A reason for the confidence level. For example, `This record was identified as a low confidence match due to a DOB partial match`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfidenceLevel": {
        "enum": [
          "REVIEW_NEEDED",
          "HIGH"
        ],
        "type": "string"
      },
      "ContactInformation": {
        "properties": {
          "contacts": {
            "description": "The contact information.",
            "items": {
              "$ref": "#/components/schemas/Contacts"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the contact person.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactInformationOrderingProvider": {
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "faxNumber": {
            "description": "The fax number, formatted as AAABBBCCCC.",
            "type": "string"
          },
          "name": {
            "description": "The full name of the person or office.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The phone extension, if applicable.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code, BBB is the telephone number prefix, and CCCC is the telephone number. The phone number should only include the digits 0 to 9. Don't include separators, such as dashes, and don't include long distance access numbers, such as 1. For example, you would format the phone number 123-456-7890 as 1234567890.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ContactInformationSubscriberDependent": {
        "description": "Only use this object for payer administrative contacts on property and casualty claims. Otherwise, you shoudn't include contact information here. If you include this object, you must supply at least one communication method (phone, fax, or email).",
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "faxNumber": {
            "description": "The fax number.",
            "type": "string"
          },
          "name": {
            "description": "The full name of the person or office.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The phone extension, if applicable.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code. For example, you would format the phone number `123-456-7890` as `1234567890`. You should always include the area code, if applicable. Don't include long distance access numbers (such as `1`) or extensions in this field.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ContactMethod": {
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "fax": {
            "description": "The fax number.",
            "type": "string"
          },
          "phone": {
            "description": "The telephone number including the area code (if applicable). Phone numbers are formatted as AAABBBCCCC, where AAA represents the area code, BBB represents the telephone number prefix, and CCCC represents the telephone number. Phone numbers are provided without separators, such as dashes or parentheses. For example, `5551123345` for `555-112-3345`.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The telephone extension, if applicable.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactMethods": {
        "properties": {
          "electronicDataInterChangeAccessNumber": {
            "description": "The Electronic Data Interchange Access Number.",
            "type": "string"
          },
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "fax": {
            "description": "The fax number.",
            "type": "string"
          },
          "phone": {
            "description": "The telephone number including the area code (if applicable). Phone numbers are formatted as AAABBBCCCC, where AAA represents the area code, BBB represents the telephone number prefix, and CCCC represents the telephone number. Phone numbers are provided without separators, such as dashes or parentheses. For example, `5551123345` for `555-112-3345`.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The telephone extension, if applicable.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Contacts": {
        "description": "Contacts",
        "properties": {
          "communicationMode": {
            "$ref": "#/components/schemas/CommunicationMode",
            "description": "The type of communication number provided.\n\nPayers may sometimes return other non-compliant values."
          },
          "communicationNumber": {
            "description": "The communication number referenced in `communicationMode`. It includes the country or area code when applicable. \n \n Note that phone numbers are formatted as AAABBBCCCC, where AAA represents the area code, BBB represents the telephone number prefix, and CCCC represents the telephone number. Phone numbers are provided without separators, such as dashes or parentheses. For example, `5551123345` for `555-112-3345`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContractInformation": {
        "description": "Required when the submitter is contractually obligated to supply this information on post-adjudicated claims.",
        "properties": {
          "contractAmount": {
            "description": "The total dollar amount of the contract, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "contractCode": {
            "description": "The contract code. This is an identifier for the contract.",
            "type": "string"
          },
          "contractPercentage": {
            "description": "The allowance or charge percent, expressed as a decimal. For example, `0.80`.",
            "type": "string"
          },
          "contractTypeCode": {
            "$ref": "#/components/schemas/ContractInformationContractTypeCode"
          },
          "contractVersionIdentifier": {
            "description": "An additional identifier for the contract. Identifies the revision level of a particular format, program, technique or algorithm.",
            "type": "string"
          },
          "termsDiscountPercentage": {
            "description": "Terms discount percentage, expressed as a decimal, available to the purchaser if an invoice is paid on or before the Terms Discount Due Date.",
            "type": "string"
          }
        },
        "required": [
          "contractTypeCode"
        ],
        "type": "object"
      },
      "ContractInformationContractTypeCode": {
        "description": "Code indicating the type of contract. Can be set to `01` - Diagnosis Related Group (DRG), `02` - Per Diem, `03` - Variable Per Diem, `04` - Flat, `05` - Capitated, `06` - Percent, or `09` - Other.",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "09"
        ],
        "type": "string"
      },
      "ConvertReport277ResponseContent": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "transactions": {
            "description": "The payer's 277 response.",
            "items": {
              "$ref": "#/components/schemas/ReportsClaimAcknowledgmentResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "ConvertReport835ResponseContent": {
        "description": "Transaction response structure for claim payment advice.",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Metadata that helps Stedi track and debug the response."
          },
          "transactions": {
            "description": "The payer's 835 response.",
            "items": {
              "$ref": "#/components/schemas/ClaimPaymentAdviceResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "CoordinationOfBenefits400ErrorResponseContent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BadRequestException"
          },
          {
            "$ref": "#/components/schemas/ValidationException"
          }
        ]
      },
      "CoordinationOfBenefitsRequestContent": {
        "properties": {
          "dependent": {
            "$ref": "#/components/schemas/COBDependent"
          },
          "encounter": {
            "$ref": "#/components/schemas/COBEncounter"
          },
          "provider": {
            "$ref": "#/components/schemas/COBProvider",
            "description": "An object containing information about the entity requesting the COB check. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider.  You must provide the `organizationName` (if the entity is an organization) or `firstName` and `lastName` (if the provider is an individual). You must also provide the provider's [National Provider Identifier](https://www.stedi.com/docs/healthcare/national-provider-identifier) (`npi`)."
          },
          "subscriber": {
            "$ref": "#/components/schemas/COBSubscriber"
          },
          "tradingPartnerServiceId": {
            "description": "This is the Payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list of supported payers for COB checks.\n    - Each check **must** be for a participating health plan for which the patient has coverage. For example, if the patient has coverage from Cigna and UnitedHealthcare, a COB check to Aetna will return an error.\n    - Medicare and Medicare Advantage plans aren't supported. If you submit a COB check for a Medicare or Medicare Advantage plan, the request will fail with an `AAA` = `75` error (Subscriber/Insured Not Found).\n    - Ensure that you're sending the request to the correct payer entity. For example, Blue Cross Blue Shield (BCBS) has multiple entities that operate in different states. If you send a request to the wrong entity, the request will fail with an `AAA` = `75` error (Subscriber/Insured Not Found).",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "encounter",
          "provider",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "CoordinationOfBenefitsResponseContent": {
        "properties": {
          "benefitsInformation": {
            "description": "Information about the patient's healthcare benefits, including:\n- Active coverage with the health plan identified in the COB request\n- Coverage overlap (if it exists) with one or more payers\n- Payer primacy details (if Stedi was able to determine)\n- Benefits details, such as coverage dates and service types",
            "items": {
              "$ref": "#/components/schemas/COBBenefitsInformation"
            },
            "type": "array"
          },
          "coordinationOfBenefits": {
            "$ref": "#/components/schemas/COB",
            "description": "An overview of the COB response. It indicates whether there is a coverage overlap, whether that overlap creates a coordination of benefits instance, and whether Stedi was able to identify payer primacy (when a COB instance exists)."
          },
          "dependent": {
            "$ref": "#/components/schemas/COBResponseDependent",
            "description": "Information about the dependent listed in the original COB request."
          },
          "errors": {
            "description": "If the COB request fails, the COB response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/COBMetaData",
            "description": "Metadata about the response. Stedi uses this data for tracking and troubleshooting."
          },
          "payer": {
            "$ref": "#/components/schemas/COBPayer",
            "description": "Information about the payer listed in the COB request."
          },
          "planDateInformation": {
            "$ref": "#/components/schemas/COBPlanDateInformation"
          },
          "provider": {
            "$ref": "#/components/schemas/COBResponseProvider",
            "description": "Information about the entity that submitted the original coordination of benefits request. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider. This object will always include the provider's [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier)."
          },
          "subscriber": {
            "$ref": "#/components/schemas/COBResponseSubscriber",
            "description": "Information about the primary policyholder for the insurance plan listed in the COB request."
          }
        },
        "type": "object"
      },
      "CopayStatusCode": {
        "description": "Code indicating whether co-payment requirements were met. Can be set to `O` - Copay exempt.",
        "enum": [
          "0"
        ],
        "type": "string"
      },
      "CorrectedPriorityPayer": {
        "description": "Information about the corrected priority payer. Used when the current payer believes that another payer has priority for making a payment and the claim is not being automatically transferred to that payer.",
        "properties": {
          "blueCrossBlueShieldAssociationPlanCode": {
            "description": "The provider's Blue Cross Blue Shield Association Plan Code.",
            "type": "string"
          },
          "centersForMedicareAndMedicaidServicesPlanId": {
            "description": "Used to report the provider's Health Plan ID (HPID) or Other Entity Identifier (OEID).",
            "type": "string"
          },
          "nationalAssociationOfInsuranceCommissionersIdentification": {
            "description": "The provider's National Association of Insurance Commissioners (NAIC) number.",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name (when the provider is not an individual) or the provider's last name (when the provider is an individual).",
            "type": "string"
          },
          "payorId": {
            "description": "The provider's Payer Identification number.",
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The provider's Pharmacy Processor Number.",
            "type": "string"
          },
          "taxId": {
            "description": "The provider's Federal Tax Identification Number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CoverageType": {
        "description": "The types of insurance coverage that a payer can provide. Used to indicate whether a payer supports transactions for medical coverage, dental coverage, or both.",
        "enum": [
          "medical",
          "dental"
        ],
        "type": "string"
      },
      "CreditDebitFlagCode": {
        "description": "Indicates whether a financial transaction represents a credit or debit to the provider's account. Used to specify the direction of money flow in payment transactions.",
        "enum": [
          "C",
          "D"
        ],
        "type": "string"
      },
      "CrossoverCarrier": {
        "description": "Information about the crossover carrier. The crossover carrier is defined as any payer to which the claim is transferred for further payment after the current payer has finalized it.",
        "properties": {
          "blueCrossBlueShieldAssociationPlanCode": {
            "description": "The provider's Blue Cross Blue Shield Association Plan Code.",
            "type": "string"
          },
          "centersForMedicareAndMedicaidServicesPlanId": {
            "description": "Used to report the provider's Health Plan ID (HPID) or Other Entity Identifier (OEID).",
            "type": "string"
          },
          "nationalAssociationOfInsuranceCommissionersIdentification": {
            "description": "The provider's National Association of Insurance Commissioners (NAIC) number.",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name (when the provider is not an individual) or the provider's last name (when the provider is an individual).",
            "type": "string"
          },
          "payorId": {
            "description": "The provider's Payer Identification number.",
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The provider's Pharmacy Processor Number.",
            "type": "string"
          },
          "taxId": {
            "description": "The provider's Federal Tax Identification Number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTimePeriodFormatQualifier": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "D8",
          "RD8"
        ],
        "type": "string"
      },
      "DelayReasonCode": {
        "description": "Code indicating the reason for the delay in claim submission. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#delay-reason-codes) for a complete list.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "15"
        ],
        "type": "string"
      },
      "DeliveryOrCalendarPatternQualifier": {
        "description": "The name of the `deliveryOrCalendarPatternCode`. For example, `Last Working Day of Period`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1st Week of the Month",
          "2nd Week of the Month",
          "3rd Week of the Month",
          "4th Week of the Month",
          "5th Week of the Month",
          "1st & 3rd Week of the Month",
          "2nd & 4th Week of the Month",
          "1st Working Day of Period",
          "Last Working Day of Period",
          "Monday through Friday",
          "Monday through Saturday",
          "Monday through Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Sunday",
          "Monday through Thursday",
          "Immediately",
          "As Directed",
          "Daily Mon. Through Fri.",
          "1/2 Mon. & 1/2 Tues.",
          "1/2 Tues. & 1/2 Thurs.",
          "1/2 Wed. & 1/2 Fri.",
          "Once Anytime Mon. through Fri.",
          "Tuesday through Friday",
          "Monday, Tuesday and Thursday",
          "Monday, Tuesday and Friday",
          "Wednesday and Thursday",
          "Monday, Wednesday and Thursday",
          "Tuesday, Thursday and Friday",
          "1/2 Tues. & 1/2 Fri.",
          "1/2 Mon. & 1/2 Wed.",
          "1/3 Mon., 1/3 Wed., 1/3 Fri.",
          "Whenever Necessary",
          "1/2 By Wed. Bal. By Fri.",
          "None (Also Used to Cancel or Override a Previous Pattern)"
        ],
        "type": "string"
      },
      "DeliveryOrCalendarPatternQualifierCode": {
        "description": "Code that specifies the routine shipments, deliveries, or calendar pattern. For example `9` - Last Working Day of Period. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#delivery-frequency-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "SG",
          "SL",
          "SP",
          "SX",
          "SY",
          "SZ",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y"
        ],
        "type": "string"
      },
      "DeliveryPatternTimeQualifier": {
        "description": "The name of the `deliveryPatternTimeCode`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1st Shift (Normal Working Hours)",
          "2nd Shift",
          "3rd Shift",
          "A.M.",
          "P.M.",
          "As Directed",
          "Any Shift",
          "None (Also Used to Cancel or Override a Previous Pattern)"
        ],
        "type": "string"
      },
      "DeliveryPatternTimeQualifierCode": {
        "description": "A code specifying the time for routine shipments or deliveries.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "Y"
        ],
        "type": "string"
      },
      "DentalAttachmentReportTypeCode": {
        "description": "Code indicating the title or contents of a document, report or supporting item. For example, `B4` - Referral Form or `DA` - Dental Models. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#attachment-report-type-codes) for a complete list.",
        "enum": [
          "B4",
          "DA",
          "DG",
          "EB",
          "OZ",
          "P6",
          "RB",
          "RR"
        ],
        "type": "string"
      },
      "DentalClaimContractInformation": {
        "description": "Required when the submitter is contractually obligated to supply this information on post-adjudicated claims.",
        "properties": {
          "contractAmount": {
            "description": "The total dollar amount of the contract, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "contractCode": {
            "description": "The contract code. This is a unique identifier for the contract.",
            "type": "string"
          },
          "contractPercentage": {
            "description": "The allowance or charge percent, expressed as a decimal. For example, `0.80`.",
            "type": "string"
          },
          "contractTypeCode": {
            "$ref": "#/components/schemas/DentalContractTypeCode"
          },
          "contractVersionIdentifier": {
            "description": "An additional identifer for the contract. Identifies the revision level of a particular format, program, technique or algorithm.",
            "type": "string"
          },
          "termsDiscountPercentage": {
            "description": "Terms discount percentage, expressed as a percent, available to the purchaser if an invoice is paid on or before the Terms Discount Due Date.",
            "type": "string"
          }
        },
        "required": [
          "contractTypeCode"
        ],
        "type": "object"
      },
      "DentalClaimDateInformation": {
        "properties": {
          "accidentDate": {
            "description": "The date of the accident related to this claim. Required when `relatedCausesCode` is set to `AA` - Auto Accident or `OA` - Other Accident. Also required when `relatedCausesCode` is set to `EM` - Employment and this claim is the result of an accident.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "appliancePlacementDate": {
            "description": "The date the appliance was placed.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "repricerReceivedDate": {
            "description": "The date the repricing entity received the initial claim. Required when a repricer is passing the claim onto the payer.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceDate": {
            "description": "A single service date or a range of service dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DentalClaimInformation": {
        "properties": {
          "autoAccidentCountryCode": {
            "description": "The country code where the accident occurred. Use when `relatedCausesCode` = `AA` and the accident occurred in a country other than US or Canada.",
            "type": "string"
          },
          "autoAccidentStateCode": {
            "description": "A code identifying the state or province in which the automobile accident occurred. Use this code when `relatedCausesCode` is set to `AA`.",
            "type": "string"
          },
          "benefitsAssignmentCertificationIndicator": {
            "$ref": "#/components/schemas/ClaimInformationBenefitsAssignmentCertificationIndicator"
          },
          "claimChargeAmount": {
            "description": "The total dollar amount charged for the services on this claim, expressed as a decimal. For example, `100.50`. This is the total amount before any adjustments or payments. The amount must balance to the sum of the service line charges.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "claimContractInformation": {
            "$ref": "#/components/schemas/DentalClaimContractInformation"
          },
          "claimDateInformation": {
            "$ref": "#/components/schemas/DentalClaimDateInformation",
            "description": "Dates related to services within the claim, including the date an appliance was placed and the date of the accident (if applicable). All dates apply to all services in the claim unless specifically overridden within an individual service line."
          },
          "claimFilingCode": {
            "$ref": "#/components/schemas/ClaimFilingCode"
          },
          "claimFrequencyCode": {
            "$ref": "#/components/schemas/ClaimFrequencyCode",
            "description": "Code specifying the frequency of the claim. Can be set to `1` - Admit thru Discharge Claim, `7` - Replacement of Prior Claim, or `8` - Void/Cancel of Prior Claim. Visit the National Uniform Billing Committee for a [complete code list](https://www.nubc.org/system/files/media/file/2019/06/billTypeFrequencyCodes837.pdf) and usage notes."
          },
          "claimNotes": {
            "description": "Include comments or special instructions related to the claim. Required when the provider needs to include additional information to substantiate the medical treatment that can't be provided elsewhere in the claim submission. You can include up to five objects in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "claimPricingRepricingInformation": {
            "$ref": "#/components/schemas/ClaimPricingRepricingInformation"
          },
          "claimSupplementalInformation": {
            "$ref": "#/components/schemas/DentalClaimSupplementalInformation"
          },
          "delayReasonCode": {
            "$ref": "#/components/schemas/DelayReasonCode"
          },
          "fileInformation": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "type": "string"
          },
          "fileInformationList": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "healthCareCodeInformation": {
            "description": "Details about the patient's healthcare diagnosis. Only required when the diagnosis may have an impact on the adjudication of the claim in cases where specific dental procedures may minimize the risks associated with the connection between the patient's oral and systemic health conditions.\n- **Don't** submit the decimal for ICD codes; the decimal is implied.\n- Use `ABK` as the type for the principal diagnosis code and `ABF` for any other diagnosis codes you include.\n- Use one `ABK` code as the first object, and then you can submit up to 11 `ABF` codes as needed. If you need to submit more codes than this, you must create additional, separate claims.",
            "items": {
              "$ref": "#/components/schemas/DentalHealthCareInformation"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "orthodonticTotalMonthsOfTreatment": {
            "$ref": "#/components/schemas/OrthodonticTotalMonthsOfTreatment",
            "description": "Information about orthodontic treatment. Required when the claim contains services related to treatment for orthodontic purposes. You **must** include one of these properties in this object: `monthsCount`, `monthsRemaining`, or `treatmentIndicator`."
          },
          "otherSubscriberInformation": {
            "description": "Required when other payers are known to potentially be involved in paying on this claim. This object contains information about other health plans under which the patient has coverage. It's used for coordination of benefits scenarios.",
            "items": {
              "$ref": "#/components/schemas/DentalOtherSubscriberInformation"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "patientAmountPaid": {
            "description": "The total amount in dollars the patient or their representatives have paid on this claim. For example, `20.50`. This includes any co-payments, co-insurance, or other amounts already collected from the patient.\n\nIf the patient has not paid anything, you should omit this property entirely - **don't** set it to `0`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "patientControlNumber": {
            "description": "An identifier you assign to the claim. We **strongly recommend** submitting a unique value for this property so you can use it to correlate this claim with responses, such as the 277CA and 835 ERA.\n  - We recommend using only alphanumeric characters and generating unique values that are the shortest possible length. Stedi accepts any valid value, but some payers replace non-alphanumeric characters and truncate shorter than the official 20-character limit. When this happens, the payer returns a different identifier in responses than the one you originally sent, making it more difficult to correlate the claim and perform real-time claim status checks.\n  - If you plan to submit the autogenerated CMS-1500 PDF for this claim, you must limit this value to 14 characters or this value will be truncated in the PDF.",
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "placeOfServiceCode": {
            "$ref": "#/components/schemas/PlaceOfServiceCode",
            "description": "Code identifying the type of facility where the services were or may be performed. Visit [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list."
          },
          "planParticipationCode": {
            "$ref": "#/components/schemas/DentalPlanParticipationCode",
            "description": "The code indicating whether the provider accepts assignment in their relationship with the payer. Can be set to `A` - Assigned or `C` - Not Assigned. Code `A` is required when either the provider accepts assignment or has a participation agreement with the payer OR when the provider doesn't accept assignment or have a participation agreement but is advising the payer to adjudicate this specific claim under participating provider benefits allowed in certain plans.\n\n Note that this is **not** where you should indicate whether the patient has assigned benefits to the provider - you must indicate that in the `benefitsAssignmentCertificationIndicator` property."
          },
          "predeterminationOfBenefits": {
            "description": "Required when the entire claim is being submitted as a predetermination of benefits. Predetermination of benefits claims are submitted in advance of services to get an estimate of what the patient's health plan will pay.\n  - Can be set to `true` to indicate predetermination of dental benefits.\n  - Not all dental payers support predetermination of benefits claims.\n  - Some payers prohibit setting `claimInformation.claimDateInformation.serviceDate` for predetermination of benefits claims. Refer to your payer's specific guidelines for more information.",
            "type": "boolean"
          },
          "propertyCasualtyClaimNumber": {
            "description": "The agency claim number for this transaction. Used when services included in this claim are part of a property and casualty claim.",
            "type": "string"
          },
          "relatedCausesCode": {
            "description": "Code identifying an accompanying cause of an illness, injury or an accident. Can be set to `AA` - Auto Accident, `EM` - Employment, or `OA` - Other Accident. You can include up to two codes in this array.",
            "items": {
              "$ref": "#/components/schemas/ClaimInformationRelatedCausesCodeItem"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "releaseInformationCode": {
            "$ref": "#/components/schemas/ReleaseInformationCode"
          },
          "serviceFacilityLocation": {
            "$ref": "#/components/schemas/ClaimServiceFacilityLocation",
            "description": "Required when the location for the service is different from the billing provider's address. The purpose of this object is to identify specifically where the service was rendered. This can be healthcare facilities, such as surgical centers or reference labs, OR the patient's address when services were rendered in their home.\n    - Only include this object when the service facility location is **different** from the billing provider's address. If you include this object when the address is the same, Stedi omits all of the service facility location information from the claim submission, including the name and any identifiers.\n    - Sometimes the billing provider is an actual physician group that is located at the same address as a hospital, but is in fact a separate entity. In this case, you can differentiate the service facility location by including the specific suite or building number of the physician group. This ensures that the service facility location is different from the billing provider's address and is reported accurately."
          },
          "serviceLines": {
            "description": "Information about one or more services rendered to the patient.\n    - Each service line must be a unique service event as defined by the payer's billing policies. This means that you can use the same procedure code on multiple service lines as long as they are distinct events.\n    - Some procedure codes are date-specific. In these cases, you may need to create a separate service line with that code for each applicable date of service, even if the episode of care extended over multiple days.\n    - Service lines can share the same dates of service if the patient received multiple services on the same day.",
            "items": {
              "$ref": "#/components/schemas/DentalServiceLine"
            },
            "type": "array"
          },
          "signatureIndicator": {
            "$ref": "#/components/schemas/SignatureIndicator"
          },
          "specialProgramCode": {
            "$ref": "#/components/schemas/DentalSpecialProgramCode"
          },
          "toothStatus": {
            "description": "The status of the teeth involved in the service. Required when the submitter is reporting a missing tooth or a tooth to be extracted in the future. You can include up to 35 objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ToothStatus"
            },
            "type": "array"
          }
        },
        "required": [
          "benefitsAssignmentCertificationIndicator",
          "claimChargeAmount",
          "claimFrequencyCode",
          "patientControlNumber",
          "placeOfServiceCode",
          "releaseInformationCode",
          "serviceLines",
          "signatureIndicator"
        ],
        "type": "object"
      },
      "DentalClaimSupplementalInformation": {
        "description": "Additional information or documentation required for the claim. This is where you can include information about [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments), if applicable.",
        "properties": {
          "adjustedRepricedClaimNumber": {
            "description": "Required when the repricer believes this information is necessary. Providers should not complete this property.",
            "type": "string"
          },
          "claimControlNumber": {
            "description": "Required when the `claimFrequencyCode` indicates this claim is a replacement or void to a previously adjudicated claim.",
            "type": "string"
          },
          "claimNumber": {
            "deprecated": true,
            "description": "The claim number assigned by clearinghouse, van, etc.\n\nStedi overwrites this value when it sends the claim to the payer, so you shouldn't include this property in your request. We strongly recommend using the `claimInformation.patientControlNumber` property as your claim tracking ID.",
            "type": "string"
          },
          "predeterminationOfBenefitsIdentifier": {
            "description": "The Predetermination of Benefits Identification Number assigned by the payer. Required for services that have been previously predetermined and are now being submitted for payment. The identifier you supply here applies to the entire claim.",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "Required when an authorization number is assigned by the payer or UMO _and_ the services on this claim were preauthorized. This authorization number applies to the payer you listed in the `receiver` object. If you need to include authorization numbers for other payers, you can include them in `claimInformation.otherSubscriberInformation.otherPayerName.otherPayerPriorAuthorizationNumber`. \n\nGenerally, preauthorization numbers are assigned by the payer or UMO to authorize a service prior to its being performed. The UMO (Utilization Management Organization) is generally the entity empowered to make a decision regarding the outcome of a health services review or the owner of information.",
            "type": "string"
          },
          "referralNumber": {
            "description": "Required when a referral number is assigned by the payer or Utilization Management Organization (UMO) _and_ a referral is involved.",
            "type": "string"
          },
          "reportInformation": {
            "$ref": "#/components/schemas/DentalReportInformation",
            "description": "Required when you plan to submit an [attachment](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the claim electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify additional information that is being held at the provider's office and is available upon request.\n\nUse this object when there is a single attachment for the claim. If there are multiple attachments, use the `reportInformations` array instead."
          },
          "reportInformations": {
            "description": "An array of report information for the claim. Use this when you need to submit multiple report information records. You can submit up to 10 objects in this array.\n\nRequired when you plan to submit [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the claim electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify that they have additional information at their office that is available upon request.",
            "items": {
              "$ref": "#/components/schemas/DentalReportInformation"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "repricedClaimNumber": {
            "description": "Required when the repricer believes this information is necessary. Providers should not complete this property.",
            "type": "string"
          },
          "serviceAuthorizationExceptionCode": {
            "$ref": "#/components/schemas/ServiceAuthorizationExceptionCode"
          }
        },
        "type": "object"
      },
      "DentalClaimsRawX12SubmissionRequestContent": {
        "properties": {
          "x12": {
            "type": "string"
          }
        },
        "required": [
          "x12"
        ],
        "type": "object"
      },
      "DentalClaimsRawX12SubmissionResponseContent": {
        "properties": {
          "claimReference": {
            "$ref": "#/components/schemas/ClaimReference"
          },
          "controlNumber": {
            "description": "An identifier for the transaction.",
            "type": "string"
          },
          "editResponses": {
            "description": "Currently not used.",
            "items": {
              "$ref": "#/components/schemas/EditResponse"
            },
            "type": "array"
          },
          "editStatus": {
            "description": "Currently not used.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors. Currently not used.",
            "items": {
              "$ref": "#/components/schemas/ClaimsError"
            },
            "type": "array"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimsPayer"
          },
          "status": {
            "description": "The status of the claim submission.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "warnings": {
            "description": "A list of warnings.",
            "items": {
              "$ref": "#/components/schemas/ClaimsWarning"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DentalClaimsSubmissionRequestContent": {
        "properties": {
          "assistantSurgeon": {
            "$ref": "#/components/schemas/AssistantSurgeon"
          },
          "billing": {
            "$ref": "#/components/schemas/Billing"
          },
          "claimIdentifier": {
            "$ref": "#/components/schemas/ClaimIdentifier"
          },
          "claimInformation": {
            "$ref": "#/components/schemas/DentalClaimInformation",
            "description": "Information about the healthcare claim. \n\n Note that the objects and properties marked as required are required for all claims, while others are conditionally required, depending on type of claim and claim circumstances. For example, you must always provide the `placeOfServiceCode` property, but you only need to provide the `otherSubscriberInformation` object in coordination of benefits scenarios. When you include a conditionally required object, you must provide all of its required properties."
          },
          "dependent": {
            "$ref": "#/components/schemas/DentalDependent"
          },
          "payToAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "Use when the address for payment is different than that of the billing provider for this claim."
          },
          "payToPlan": {
            "$ref": "#/components/schemas/PayToPlan"
          },
          "payerAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The payer's address. Some payers use this for internal routing. Only provide this address if the payer explicitly requires it."
          },
          "receiver": {
            "$ref": "#/components/schemas/Receiver"
          },
          "referring": {
            "$ref": "#/components/schemas/Referring"
          },
          "rendering": {
            "$ref": "#/components/schemas/Rendering"
          },
          "submitter": {
            "$ref": "#/components/schemas/Submitter",
            "description": "The entity submitting the healthcare claim. This can be either an individual or an organization, such as a doctor, hospital, or insurance company. You must submit at least `organizationName` or `lastName` properties and the `contactInformation` object. If you don't supply the `submitterIdentification` property, Stedi uses the value from `billing.npi` in the request."
          },
          "subscriber": {
            "$ref": "#/components/schemas/DentalSubscriber"
          },
          "supervising": {
            "$ref": "#/components/schemas/Supervising"
          },
          "tradingPartnerName": {
            "description": "This is the payer's business name, like Cigna or Aetna.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "This is the Payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list. You can send requests using the Primary Payer ID, the Stedi Payer ID, or any alias listed in the payer record.",
            "type": "string"
          },
          "usageIndicator": {
            "description": "Whether you want to send a test or production claim. This property also allows you to filter claims in the Stedi portal by production or test data. By default, this property is set to `P` for production data. Use `T` to designate a claim as test data.",
            "type": "string"
          }
        },
        "required": [
          "billing",
          "claimInformation",
          "receiver",
          "submitter",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "DentalClaimsSubmissionResponseContent": {
        "properties": {
          "claimReference": {
            "$ref": "#/components/schemas/ClaimReference"
          },
          "controlNumber": {
            "description": "An identifier for the transaction.",
            "type": "string"
          },
          "editResponses": {
            "description": "Currently not used.",
            "items": {
              "$ref": "#/components/schemas/EditResponse"
            },
            "type": "array"
          },
          "editStatus": {
            "description": "Currently not used.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors. Currently not used.",
            "items": {
              "$ref": "#/components/schemas/ClaimsError"
            },
            "type": "array"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimsPayer"
          },
          "status": {
            "description": "The status of the claim submission.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "warnings": {
            "description": "A list of warnings.",
            "items": {
              "$ref": "#/components/schemas/ClaimsWarning"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DentalContractInformation": {
        "description": "Required when the submitter is contractually obligated to supply this information on post-adjudicated claims.",
        "properties": {
          "contractAmount": {
            "description": "The total dollar amount of the contract, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "contractCode": {
            "description": "The contract code. This is an identifier for the contract.",
            "type": "string"
          },
          "contractPercentage": {
            "description": "The allowance or charge percent, expressed as a decimal. For example, `0.80`.",
            "type": "string"
          },
          "contractTypeCode": {
            "$ref": "#/components/schemas/DentalContractInformationContractTypeCode"
          },
          "contractVersionIdentifier": {
            "description": "An additional identifier for the contract. Identifies the revision level of a particular format, program, technique or algorithm.",
            "type": "string"
          },
          "termsDiscountPercentage": {
            "description": "Terms discount percentage, expressed as a decimal, available to the purchaser if an invoice is paid on or before the Terms Discount Due Date.",
            "type": "string"
          }
        },
        "required": [
          "contractTypeCode"
        ],
        "type": "object"
      },
      "DentalContractInformationContractTypeCode": {
        "description": "Code indicating the type of contract. Can be set to `02` - Per Diem, `03` - Variable Per Diem, `04` - Flat, `05` - Capitated, `06` - Percent, or `09` - Other.",
        "enum": [
          "02",
          "03",
          "04",
          "05",
          "06",
          "09"
        ],
        "type": "string"
      },
      "DentalContractTypeCode": {
        "description": "A code identifying the type of contract. Can be set to `02` - Per Diem, `03` - Variable Per Diem, `04` - Flat, `05` - Capitated, `06` - Percent, or `09` - Other.",
        "enum": [
          "02",
          "03",
          "04",
          "05",
          "06",
          "09"
        ],
        "type": "string"
      },
      "DentalDependent": {
        "description": "Dependent who received the medical care associated with the claim. Note that if the dependent has their own member ID for the health plan, you should include the dependent's information in the `subscriber` object instead. To check whether a dependent has a member ID, submit an [Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) to the payer. The payer returns the dependent's member ID in the `dependents.memberId` property in the response, if present.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestSubscriberDependentAddress",
            "description": "The dependent's address. Every claim must include address information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n  - The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n  - If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependent` object in the response.\n  - If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach."
          },
          "dateOfBirth": {
            "description": "The patient's date of birth",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/DependentGender",
            "description": "Code indiciating the patient's gender. Can be set to `F` - Female, `M` - Male, or `U` - Unknown.\n\nSome payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records. If the gender isn't known or the patient declines to answer, use `U` or perform an eligibility check to determine the gender according to the payer's records."
          },
          "lastName": {
            "description": "The patient's last name. **Don't** include the patient's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "type": "string"
          },
          "memberId": {
            "description": "The patient's identification number. Only used in Property and Casualty claims.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name or initial.",
            "type": "string"
          },
          "relationshipToSubscriberCode": {
            "$ref": "#/components/schemas/RelationshipToSubscriberCode"
          },
          "ssn": {
            "description": "The patient's Social Security Number. Only used for Property and Casualty claims.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "suffix": {
            "description": "The patient's name suffix, such as Jr. or III. Only include the patient's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "firstName",
          "gender",
          "lastName",
          "relationshipToSubscriberCode"
        ],
        "type": "object"
      },
      "DentalDiagnosisTypeCode": {
        "description": "Code indicating the specific industry code list. Can be set to `ABK` - International Classification of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis or `ABF` - International Classification of Diseases Clinical Modification (ICD-10-CM) Diagnosis, `TQ` Systemized Nomenclature of Dentistry (SNODENT).",
        "enum": [
          "ABK",
          "ABF",
          "TQ"
        ],
        "type": "string"
      },
      "DentalHealthCareInformation": {
        "properties": {
          "diagnosisCode": {
            "description": "The diagnosis code. **Do not** submit the decimal point for ICD codes. The decimal point is implied. Also, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.",
            "type": "string"
          },
          "diagnosisTypeCode": {
            "$ref": "#/components/schemas/DentalDiagnosisTypeCode"
          }
        },
        "required": [
          "diagnosisCode",
          "diagnosisTypeCode"
        ],
        "type": "object"
      },
      "DentalLineAdjudicationInformation": {
        "description": "Includes service line adjudication information for coordination of benefits between the initial payers of a health care claim and all subsequent payers.",
        "properties": {
          "adjudicationOrPaymentDate": {
            "description": "The date the other payer adjudicated or paid the claim.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "bundledOrUnbundledLineNumber": {
            "description": "The LX assigned number of the service line into which this service line is bundled. It's only used to bundle service lines.",
            "type": "string"
          },
          "claimAdjustmentInformation": {
            "description": "Required when the payer made line level adjustments which caused the amount paid to differ from the amount originally charged. You can include up to five objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustment"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "otherPayerPrimaryIdentifier": {
            "description": "The payer ID for the payer responsible for reimbursement.",
            "type": "string"
          },
          "paidServiceUnitCount": {
            "description": "The number of paid units from the remittance advice. expressed as a decimal. When paid units are not present on the remittance advice, use the original billed units. The maximum length for this property is 8 digits excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is three.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "type": "string"
          },
          "procedureCodeDescription": {
            "description": "The meaning of the procedure code.",
            "type": "string"
          },
          "procedureModifier": {
            "description": "Modifiers that convey special circumstances related to the performance of the service. You can include up to four modifiers in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "remainingPatientLiability": {
            "description": "The amount of the service line that the patient is still responsible for, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "serviceIdQualifier": {
            "$ref": "#/components/schemas/DentalLineAdjudicationInformationServiceIdQualifier",
            "description": "Code identifying the the type of product or service ID. Can be set to `AD` - American Dental Association Codes or `ER` - Jurisdiction Specific Procedure and Supply Codes."
          },
          "serviceLinePaidAmount": {
            "description": "The amount paid for this service line, expressed as a decimal. Zero (0) is an acceptable value.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          }
        },
        "required": [
          "adjudicationOrPaymentDate",
          "otherPayerPrimaryIdentifier",
          "paidServiceUnitCount",
          "procedureCode",
          "serviceIdQualifier",
          "serviceLinePaidAmount"
        ],
        "type": "object"
      },
      "DentalLineAdjudicationInformationServiceIdQualifier": {
        "enum": [
          "AD",
          "ER"
        ],
        "type": "string"
      },
      "DentalMeasurementUnitCode": {
        "enum": [
          "UN"
        ],
        "type": "string"
      },
      "DentalMedicareOutpatientAdjudication": {
        "description": "Claim-level data related to the adjudication of Medicare claims not related to an inpatient setting. Required when outpatient adjudication information is reported in the remittance advice _or_ when you need to report remark codes.",
        "properties": {
          "claimPaymentRemarkCode": {
            "description": "The remark code. Visit the X12 [Remittance Advice Remark Codes](https://x12.org/codes/remittance-advice-remark-codes) for a complete list. You can include up to five codes in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "hcpcsPayableAmount": {
            "description": "The claim Health Care Financing Administration Common Procedural Coding System (HCPCS) payable amount, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "nonPayableProfessionalComponentBilledAmount": {
            "description": "The professional component amount billed but not payable, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "reimbursementRate": {
            "description": "The reimbursement percentage, expressed as a decimal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DentalOtherPayerName": {
        "description": "Details about the other payer.",
        "properties": {
          "otherPayerAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The payer's address."
          },
          "otherPayerAdjudicationOrPaymentDate": {
            "description": "The date the other payer adjudicated the claim. Required when this payer has previously adjudicated the claim and you aren’t including a value for `LineAdjudicationInformation.adjudicationOrPaymentDate`.",
            "type": "string"
          },
          "otherPayerClaimAdjustmentIndicator": {
            "description": "The only valid value is `true`. Required when Required when the claim is being sent in the payer-to-payer COB model AND the destination payer is secondary to this payer AND this payer has re-adjudicated the claim.",
            "type": "boolean"
          },
          "otherPayerClaimControlNumber": {
            "description": "The claim control number assigned by this payer.",
            "type": "string"
          },
          "otherPayerIdentifier": {
            "description": "The identifier specified in `otherPayerIdentifierCode`. When sending Line Adjudication Information for this payer, the identifier sent in `lineAdjudicationInformation.otherPayerPrimaryIdentifier` must match this value.",
            "type": "string"
          },
          "otherPayerIdentifierTypeCode": {
            "$ref": "#/components/schemas/OtherPayerIdentifierTypeCode"
          },
          "otherPayerOrganizationName": {
            "description": "The payer's organization name.",
            "type": "string"
          },
          "otherPayerPredeterminationIdentification": {
            "description": "The authorization number assigned by this payer.",
            "type": "string"
          },
          "otherPayerPriorAuthorizationNumber": {
            "description": "The authorization number assigned by this payer.",
            "type": "string"
          },
          "otherPayerPriorAuthorizationOrReferralNumber": {
            "description": "The referral number assigned by this payer.",
            "type": "string"
          },
          "otherPayerSecondaryIdentifier": {
            "description": "An additional identification number to identify the other payer. The `qualifier` can be set to `2U` - Payer Identification Number, `EI` - Employer Identification Number, `FY` - Claim Office Number, or `NF` - National Association of Insurance Commissioners (NAIC) Code.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerSecondaryIdentifierItem"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerIdentifier",
          "otherPayerIdentifierTypeCode",
          "otherPayerOrganizationName"
        ],
        "type": "object"
      },
      "DentalOtherSubscriberInformation": {
        "properties": {
          "benefitsAssignmentCertificationIndicator": {
            "$ref": "#/components/schemas/OtherSubscriberInformationBenefitsAssignmentCertificationIndicator"
          },
          "claimFilingIndicatorCode": {
            "$ref": "#/components/schemas/ClaimFilingIndicatorCode"
          },
          "claimLevelAdjustments": {
            "description": "Use this object to report prior payers' claim level adjustments that cause the amount paid to differ from the amount originally charged. Codes and associated amounts must come from either paper remittance advice or 835s (Electronic Remittance Advice) received on the claim. When the information originates from a paper remittance advice that does not use the standard Claim Adjustment Reason Codes, you must convert them to standard Claim Adjustment Reason Codes.",
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustment"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "individualRelationshipCode": {
            "$ref": "#/components/schemas/ClaimsIndividualRelationshipCode"
          },
          "insuranceGroupOrPolicyNumber": {
            "description": "The group or policy number.",
            "type": "string"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/OtherSubscriberInformationInsuranceTypeCode"
          },
          "medicareOutpatientAdjudication": {
            "$ref": "#/components/schemas/DentalMedicareOutpatientAdjudication"
          },
          "nonCoveredChargeAmount": {
            "description": "Required when the destination payer's cost avoidance policy allows providers to bypass claim submission to the otherwise prior payer identified in `otherSubscriberInformation.otherPayerName`. The amount must equal the total claim charge amount you reported in `claimInformation.claimChargeAmount`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "otherInsuredGroupName": {
            "description": "The name of the health plan.",
            "type": "string"
          },
          "otherPayerAssistantSurgeon": {
            "$ref": "#/components/schemas/OtherPayerAssistantSurgeon"
          },
          "otherPayerBillingProvider": {
            "description": "Information about the billing provider.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerBillingProvider"
            },
            "type": "array"
          },
          "otherPayerName": {
            "$ref": "#/components/schemas/DentalOtherPayerName"
          },
          "otherPayerReferringProvider": {
            "description": "Information about the provider who directed the patient to the rendering provider for care. For example, a primary care physician may refer patients to a specialist.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerReferringProvider"
            },
            "type": "array"
          },
          "otherPayerRenderingProvider": {
            "description": "Information about the rendering provider.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerRenderingProvider"
            },
            "type": "array"
          },
          "otherPayerServiceFacilityLocation": {
            "description": "Information about the service facility location.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerServiceFacilityLocation"
            },
            "type": "array"
          },
          "otherPayerSupervisingProvider": {
            "description": "Information about the supervising provider.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerSupervisingProvider"
            },
            "type": "array"
          },
          "otherSubscriberName": {
            "$ref": "#/components/schemas/DentalOtherSubscriberName"
          },
          "payerPaidAmount": {
            "description": "The total amount in dollars the payer has paid on this claim. It is acceptable to set this to `0` (Zero). This is required when you include the `payToPlan` object, and you should set it to the amount the Medicaid agency actually paid.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "paymentResponsibilityLevelCode": {
            "$ref": "#/components/schemas/OtherSubscriberInformationPaymentResponsibilityLevelCode"
          },
          "releaseOfInformationCode": {
            "$ref": "#/components/schemas/ReleaseOfInformationCode"
          },
          "remainingPatientLiability": {
            "description": "This is the remaining amount (as determined by the provider) to be paid after the other payer identified in the `otherPayerName` object has adjudicated the claim.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          }
        },
        "required": [
          "benefitsAssignmentCertificationIndicator",
          "individualRelationshipCode",
          "otherPayerName",
          "otherSubscriberName",
          "paymentResponsibilityLevelCode",
          "releaseOfInformationCode"
        ],
        "type": "object"
      },
      "DentalOtherSubscriberName": {
        "description": "The person or entity who is the primary policyholder for the other payer's health plan.",
        "properties": {
          "otherInsuredAdditionalIdentifiers": {
            "description": "The primary policyholder's Social Security Number. The Social Security Number must be a string of exactly nine numbers with no separators. For example `123456789`.",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "otherInsuredAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The other subscriber's address."
          },
          "otherInsuredFirstName": {
            "description": "The primary policyholder's first name, if they are an individual.",
            "type": "string"
          },
          "otherInsuredIdentifier": {
            "description": "The identifier you specified in `otherInsuredIdentifierTypeCode`.",
            "type": "string"
          },
          "otherInsuredIdentifierTypeCode": {
            "$ref": "#/components/schemas/OtherInsuredIdentifierTypeCode"
          },
          "otherInsuredLastName": {
            "description": "The primary policyholder's last name or organizational name. Don't include the primary policyholder's name suffix, such as Jr. or III. Use the designated `otherInsuredNameSuffix` property instead.",
            "type": "string"
          },
          "otherInsuredMiddleName": {
            "description": "The primary policyholder's middle name or initial, if they are an individual.",
            "type": "string"
          },
          "otherInsuredNameSuffix": {
            "description": "The primary policyholder's name suffix, such as Jr. or III. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          },
          "otherInsuredQualifier": {
            "$ref": "#/components/schemas/OtherInsuredQualifier"
          }
        },
        "required": [
          "otherInsuredIdentifier",
          "otherInsuredIdentifierTypeCode",
          "otherInsuredLastName",
          "otherInsuredQualifier"
        ],
        "type": "object"
      },
      "DentalPlanParticipationCode": {
        "enum": [
          "A",
          "C"
        ],
        "type": "string"
      },
      "DentalReportInformation": {
        "properties": {
          "attachmentControlNumber": {
            "description": "A control number assigned to the attachment. The payer uses this identifier to match the attachment to the claim.\n  - You must include either this property or `attachmentId` in the request, but not both. Including both properties will result in an error.\n  - We recommend using a ULID or UUID of up to 50 characters.\n  - Stedi autogenerates a control number if you don't provide one.",
            "type": "string"
          },
          "attachmentId": {
            "description": "The unique identifier for the attachment file you previously uploaded to Stedi. This value is returned in the `attachmentId` property of the [Create Claim Attachment (275) JSON](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-submit-claim-attachment) response. Stedi uses it to generate and submit the 275 claim attachment transaction to the payer.\n  - This property is **required** when you're submitting attachment files through Stedi.\n  - You must include either this property or `attachmentControlNumber` in the request, but not both. Including both properties will result in an error.",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "attachmentReportTypeCode": {
            "$ref": "#/components/schemas/DentalAttachmentReportTypeCode"
          },
          "attachmentTransmissionCode": {
            "$ref": "#/components/schemas/ReportInformationAttachmentTransmissionCode"
          }
        },
        "required": [
          "attachmentReportTypeCode",
          "attachmentTransmissionCode"
        ],
        "type": "object"
      },
      "DentalService": {
        "properties": {
          "compositeDiagnosisCodePointers": {
            "$ref": "#/components/schemas/CompositeDiagnosisCodePointers"
          },
          "description": {
            "description": "A free form description to clarify the procedure code and any procedure modifiers, as needed.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "lineItemChargeAmount": {
            "description": "The total charge amount for the service, including the provider's base charge and any applicable tax or postage. It is acceptable to set this to `0` (zero).",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "oralCavityDesignation": {
            "description": "Required when the nomenclature associated with the procedure reported in `claimInformation.serviceLines.dentalService.procedureCode` refers to a quadrant or arch and the area of the oral cavity is not uniquely defined.\n- You can include up to five codes per service line.\n- You should report individual tooth numbers in one or more `teethInformation` objects.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "placeOfServiceCode": {
            "description": "Code identifying the type of facility where the services were or may be performed. Visit [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "type": "string"
          },
          "procedureCount": {
            "description": "The number of procedures performed.",
            "format": "double",
            "type": "number"
          },
          "procedureModifiers": {
            "description": "Modifier codes that clarify or improve the reporting accuracy of the associated procedure code. You can include up to four modifiers in this array. Only include modifier codes when required; otherwise, do not send.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "prosthesisCrownOrInlayCode": {
            "$ref": "#/components/schemas/ProsthesisCrownOrInlayCode"
          }
        },
        "required": [
          "lineItemChargeAmount",
          "procedureCode"
        ],
        "type": "object"
      },
      "DentalServiceIdQualifier": {
        "enum": [
          "AD"
        ],
        "type": "string"
      },
      "DentalServiceLine": {
        "properties": {
          "assistantSurgeon": {
            "$ref": "#/components/schemas/DentalServiceLineAssistantSurgeon",
            "description": "Information about the assistant surgeon who rendered the care. Use this object when the rendering providers provided these services in the role of the assistant surgeon.\n\nThis should be an individual, not an organization, and you should supply at least the surgeon's `lastName` and an identifier, which is typically the `npi`."
          },
          "contractInformation": {
            "$ref": "#/components/schemas/DentalContractInformation"
          },
          "dentalService": {
            "$ref": "#/components/schemas/DentalService",
            "description": "Information about the service rendered to the patient, including the procedure code, the line item charge amount, and the place of service."
          },
          "fileInformation": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "lineAdjudicationInformation": {
            "description": "Includes service line adjudication information for coordination of benefits between the initial payers of a health care claim and all subsequent payers.",
            "items": {
              "$ref": "#/components/schemas/DentalLineAdjudicationInformation"
            },
            "type": "array"
          },
          "linePricingRepricingInformation": {
            "$ref": "#/components/schemas/DentalServiceLinePricingRepricingInformation"
          },
          "postageTaxAmount": {
            "description": "The amount of the postage, formatted as a decimal. When you include this property, the total `lineItemChargeAmount` for this service line must include this postage value.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "providerControlNumber": {
            "description": "A unique identifier for this service line within the claim. It appears in the 835 (ERA) response as `lineItemControlNumber`, allowing you to correlate ERAs to the specific service lines from the original claim. If you don't set this property, Stedi uses a random UUID. Stedi returns service line identifiers in the `claimReference.serviceLines.lineItemControlNumber` object of the synchronous API response.",
            "type": "string"
          },
          "renderingProvider": {
            "$ref": "#/components/schemas/DentalServiceLineRenderingProvider",
            "description": "Information about the provider who rendered the services. This can be a individual or a company (a laboratory or other facility). This is where you should enter the substitute provider's (locum tenens physician) information, if applicable.\n\nYou should only include this object when the rendering provider information for this service line is different than the information listed in the `rendering` object for the entire claim."
          },
          "salesTaxAmount": {
            "description": "Sales tax, formatted as a decimal. When you include this property, the total `lineItemChargeAmount` for this service line must include this sales tax value.",
            "type": "string"
          },
          "serviceDate": {
            "description": "The date the service was rendered (for services performed on a single day),. **Do not** supply a date here if you are including the `serviceLineDateInformation.treatmentStartDate` property in the service line.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceFacilityLocation": {
            "$ref": "#/components/schemas/DentalServiceLineServiceFacilityLocation",
            "description": "Information about where the services were rendered. This can be healthcare facilities, such as surgical centers or reference labs, OR the patient's address when services were rendered in their home.\n    - Only include this object when the service facility location is **different** from the billing provider's address. If you include this object when the address is the same, Stedi omits all of the service facility location information from the claim submission, including the name and any identifiers.\n    - Sometimes the billing provider is an actual physician group that is located at the same address as a hospital, but is in fact a separate entity. In this case, you can differentiate the service facility location by including the specific suite or building number of the physician group. This ensures that the service facility location is different from the billing provider's address and is reported accurately."
          },
          "serviceLineDateInformation": {
            "$ref": "#/components/schemas/DentalServiceLineDateInformation"
          },
          "serviceLineReferenceInformation": {
            "$ref": "#/components/schemas/DentalServiceLineReferenceInformation"
          },
          "supervisingProvider": {
            "$ref": "#/components/schemas/DentalServiceLineSupervisingProvider",
            "description": "Information about the provider who oversaw the rendering provider and the care reported in this service line. Include this object when the supervising provider is different than the one listed in the `supervising` object for the entire claim.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`."
          },
          "teethInformation": {
            "description": "Identify a tooth by its number and the surfaces involved in the service.",
            "items": {
              "$ref": "#/components/schemas/ToothInformation"
            },
            "type": "array"
          }
        },
        "required": [
          "dentalService"
        ],
        "type": "object"
      },
      "DentalServiceLineAssistantSurgeon": {
        "properties": {
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "npi": {
            "description": "The individual National Provider Identifier (NPI) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "providerUpinNumber": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DentalServiceLineDateInformation": {
        "description": "Identify specific dates related to the service rendered.",
        "properties": {
          "applianceDate": {
            "description": "The date the appliance was placed. Required when the orthodontic appliance placement date is different than the date you supplied in `claimInformation.claimDateInformation.appliancePlacementDate`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "estimatedPriorPlacementDate": {
            "description": "The estimated date when the previous appliance was placed. Either this property or `priorPlacementDate` is required when the `claimInformation.serviceLines.dentalService.prosthesisCrownOrInlayCode` for this service line is set to `R` for Replacement.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "priorPlacementDate": {
            "description": "The exact date when the previous appliance was placed. Either this property or `estimatedPriorPlacementDate` is required when the `claimInformation.serviceLines.dentalService.prosthesisCrownOrInlayCode` for this service line is set to `R` for Replacement.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "replacementDate": {
            "description": "The date the orthodontic appliance was replaced.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "treatmentCompletionDate": {
            "description": "The date the treatment was completed. If you include this property, **do not** include the `serviceDate` property in this service line.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "treatmentStartDate": {
            "description": "The date the treatment began. This may apply to the following scenarios: initial impression or preparation for a crown or denture, reporting initial endontic treatment, or reporting the implant fixture placement. If you include this property, **do not** include the `serviceDate` property in this service line.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DentalServiceLinePricingRepricingInformation": {
        "description": "Repricing information about the line item. This information is completed by repricers, not providers. For capitated encounters, pricing or repricing information usually is not applicable and is provided to qualify other information within the claim.",
        "properties": {
          "exceptionCode": {
            "$ref": "#/components/schemas/ClaimsExceptionCode"
          },
          "measurementUnitCode": {
            "$ref": "#/components/schemas/DentalMeasurementUnitCode",
            "description": "The unit of measure for the service that was repriced. Can be set to `UN` - Units."
          },
          "policyComplianceCode": {
            "$ref": "#/components/schemas/PolicyComplianceCode",
            "description": "Code indicating the policy compliance status of the claim. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#policy-compliance-codes-2) for a complete list."
          },
          "pricingMethodologyCode": {
            "$ref": "#/components/schemas/PricingMethodologyCode"
          },
          "rejectReasonCode": {
            "$ref": "#/components/schemas/RejectReasonCode",
            "description": "Code indicating the rejection message returned from the third party organization. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#reject-reason-codes-2) for a complete list."
          },
          "repricedAllowedAmount": {
            "description": "The dollar amount, expressed as a decimal. For example, `100.50`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "repricedApprovedHCPCSCode": {
            "description": "The procedure code for the service that was repriced.",
            "type": "string"
          },
          "repricedApprovedServiceUnitCount": {
            "description": "The number of units for the service that was repriced, expressed as a decimal. The maximum length for this field is 8 digits excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is three.",
            "format": "double",
            "type": "number"
          },
          "repricedSavingAmount": {
            "description": "The dollar amount, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "repricingOrganizationIdentifier": {
            "description": "The identifier of the organization that repriced the claim.",
            "type": "string"
          },
          "repricingPerDiemOrFlatRateAmount": {
            "description": "The pricing rate associated with per diem or flat rate repricing, expressed as a decimal.",
            "type": "string"
          },
          "serviceIdQualifier": {
            "$ref": "#/components/schemas/DentalServiceIdQualifier",
            "description": "The qualifier for the type of code included in `repricedApprovedHCPCSCode`. Can be set to `AD` - American Dental Association Codes."
          }
        },
        "required": [
          "pricingMethodologyCode",
          "repricedAllowedAmount"
        ],
        "type": "object"
      },
      "DentalServiceLineReferenceInformation": {
        "description": "Additional identifiers for the service line.",
        "properties": {
          "adjustedRepricedLineItemReferenceNumber": {
            "description": "Required when a repricing (pricing) organization needs to have an identifying number on the service line. Only completed by repricing organizations.",
            "type": "string"
          },
          "predeterminationOfBenefits": {
            "description": "The Predetermination of Benefits Identification Numbers relevant to this service line. Required for services that have been previously predetermined and are now being submitted for payment. You can include up to five objects in this array.",
            "items": {
              "$ref": "#/components/schemas/PredeterminationOfBenefits"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "priorAuthorization": {
            "description": "Prior authorization numbers relevant to this service line. Required when services have been previously authorized and are now being submitted for payment. You can include up to five objects in this array.",
            "items": {
              "$ref": "#/components/schemas/PriorAuthorization"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "referralNumber": {
            "description": "Required when this service line involved a referral number that is different than the number reported at the claim level. You can include up to five objects in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "repricedLineItemReferenceNumber": {
            "description": "Required when a repricing (pricing) organization needs to have an identifying number on the service line. Only completed by repricing organizations.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DentalServiceLineRenderingProvider": {
        "properties": {
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "npi": {
            "description": "The National Provider Identifier (NPI) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "providerUpinNumber": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "taxonomyCode"
        ],
        "type": "object"
      },
      "DentalServiceLineServiceFacilityLocation": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress"
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "npi": {
            "description": "The organization National Provider Identifier (NPI) assigned to the service facility. Only include this property when the service facility is not a component or subpart of the billing provider. Don't include when the service facility is the patient's home.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "providerUpinNumber": {
            "description": "Deprecated; do not use.",
            "type": "string"
          }
        },
        "required": [
          "organizationName"
        ],
        "type": "object"
      },
      "DentalServiceLineSupervisingProvider": {
        "properties": {
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "npi": {
            "description": "The individual National Provider Identifier (NPI) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "providerUpinNumber": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DentalSpecialProgramCode": {
        "description": "Code indicating the Special Program under which the services rendered to the patient were performed. Used for Medicaid claims only. Can be set to `01` - Early & Periodic Screening, Diagnosis and Treatment (EPSDT) or Child Assessment Program (CHAP), `02` - Physically Handicapped Children's Program, `03` - Special Federal Funding, or `05` - Disability. Codes `02`, `03`, and `05` are used for Medicaid claims only.",
        "enum": [
          "01",
          "02",
          "03",
          "05"
        ],
        "type": "string"
      },
      "DentalSubscriber": {
        "description": "The person or entity who is the primary policyholder for the health plan _or_ a dependent with their own member ID.\n- When a dependent has a unique, payer-assigned member ID, treat them as the `subscriber` for the claim submission - include their information here and omit the `dependent` object from the request. Note that the subscriber can be an individual or a business entity. Stedi treats the subscriber as an individual when the request doesn't contain a value for the `subscriber.organizationName` property.\n- You must set the `dateOfBirth` and `gender` properties when the subscriber is the patient. Stedi determines that the subscriber is the patient when the `dependent` object is not included in the request.\n- If either `dateOfBirth` or `gender` is set, you must include both properties. You can either include both properties or neither within a single request.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestSubscriberDependentAddress",
            "description": "The subscriber's address. Every claim must include address information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n  - The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n  - If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependent` object in the response.\n  - If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach."
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth. This property is **required** if the subscriber is an individual.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The subscriber's first name. This property is **recommended** when the subscriber is an individual. Some payers reject requests without the `firstName` property.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/SubscriberGender",
            "description": "Identifies the subscriber's gender. This property is **required** when the subscriber is the patient. Can be set to `F` - Female, `M` - Male, or `U` - Unknown. \n\nSome payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records. If the gender isn't known or the patient declines to answer, use `U` or perform an eligibility check to determine the gender according to the payer's records."
          },
          "groupNumber": {
            "description": "The subscriber's health plan group number.\n  - Provide this property OR the `policyNumber`, not both.\n  - Provide this property OR the `subscriberGroupName`, not both. If this property is set, Stedi ignores the `subscriberGroupName` property.",
            "type": "string"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/SubscriberInsuranceTypeCode",
            "description": "Identifies the type of insurance policy within a specific insurance program. This property is **required** when sending claims to Medicare and Medicare is not the primary payer (`paymentResponsibilityLevelCode` is not set to `P`). Otherwise, don't include this property in the claim.\n\nVisit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#insurance-type-codes) for a complete list of insurance type codes."
          },
          "lastName": {
            "description": "The subscriber's last name. This property is **required** if the subscriber is an individual.\n\n **Don't** include the subscriber's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy. This property is **required** if the subscriber is an individual.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "type": "string"
          },
          "organizationName": {
            "description": "The business name of the entity submitting the claim. When the subscriber is an organization, you should identify the patient in the `dependent` object.",
            "type": "string"
          },
          "paymentResponsibilityLevelCode": {
            "$ref": "#/components/schemas/SubscriberPaymentResponsibilityLevelCode"
          },
          "policyNumber": {
            "description": "The subscriber's health plan policy number. You should provide either this property OR the `groupNumber`, not both.",
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "subscriberGroupName": {
            "description": "The name of the subscriber's health plan. For example, Cigna or Blue Cross Blue Shield. \n\nProvide either this property OR the `groupNumber`, not both. If `groupNumber` is set, Stedi ignores this value and uses the value in `groupNumber`.",
            "type": "string"
          },
          "suffix": {
            "description": "The suffix of the subscriber's name, such as Jr. or Sr. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dependent": {
        "description": "Dependent who received the medical care associated with the claim. Note that if the dependent has their own member ID for the health plan, you should include the dependent's information in the `subscriber` object instead. To check whether a dependent has a member ID, submit an [Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) to the payer. The payer returns the dependent's member ID in the `dependents.memberId` property in the response, if present.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestSubscriberDependentAddress",
            "description": "The dependent's address. Every claim must include address information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n  - The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n  - If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependent` object in the response.\n  - If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach."
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformationSubscriberDependent"
          },
          "dateOfBirth": {
            "description": "The patient's date of birth",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/DependentGender",
            "description": "Code indiciating the patient's gender. Can be set to `F` - Female, `M` - Male, or `U` - Unknown.\n\nSome payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records. If the gender isn't known or the patient declines to answer, use `U` or perform an eligibility check to determine the gender according to the payer's records."
          },
          "lastName": {
            "description": "The patient's last name. **Don't** include the patient's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "type": "string"
          },
          "memberId": {
            "description": "The patient's identification number. Only used in Property and Casualty claims.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name or initial.",
            "type": "string"
          },
          "relationshipToSubscriberCode": {
            "$ref": "#/components/schemas/RelationshipToSubscriberCode"
          },
          "ssn": {
            "description": "The patient's Social Security Number. Only used for Property and Casualty claims.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "suffix": {
            "description": "The patient's name suffix, such as Jr. or III. Only include the patient's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "firstName",
          "gender",
          "lastName",
          "relationshipToSubscriberCode"
        ],
        "type": "object"
      },
      "DependentGender": {
        "description": "Code indiciating the patient's gender. Can be set to `F` - Female, `M` - Male, or `U` - Unknown.\n\nYou should set this property to `U` when the patient declines to answer or does not identify as male or female. Note that some payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records.",
        "enum": [
          "M",
          "F",
          "U"
        ],
        "type": "string"
      },
      "DependentInsuredIndicator": {
        "description": "Indicates the status of the insured. For the dependent, this is always `N`.",
        "enum": [
          "N"
        ],
        "type": "string"
      },
      "DependentRelationship": {
        "description": "The name of the `relationToSubscriberCode`. For example, `Child` when the code is `19`.",
        "enum": [
          "Spouse",
          "Child",
          "Employee",
          "Unknown",
          "Organ Donor",
          "Cadaver Donor",
          "Life Partner",
          "Other Relationship"
        ],
        "type": "string"
      },
      "DependentRelationshipCode": {
        "description": "For the dependent, this can be `01` - Spouse, `19` - Child, `20` Employee, `21` - Unknown, `39` - Organ Donor, `40` - Cadaver Donor, `53` - Life Partner, or `G8` - Other Relationship.",
        "enum": [
          "01",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8",
          "Unknown"
        ],
        "type": "string"
      },
      "DetailInfo": {
        "description": "Information about the claim or service line.",
        "properties": {
          "assignedNumber": {
            "description": "A unique ID assigned to identify this set of claim information within the response.",
            "type": "string"
          },
          "paymentInfo": {
            "description": "Information relevant to the claim and claim payment, including the subscriber, providers, and service lines. Note that the amount paid may not match the claim amount, even when the claim was not denied. This can happen for several reasons, including adjustments and corrected balances due from other claims.",
            "items": {
              "$ref": "#/components/schemas/PaymentInfo"
            },
            "type": "array"
          },
          "providerSummaryInformation": {
            "$ref": "#/components/schemas/ProviderSummaryInformation",
            "description": "Summary information about the provider."
          },
          "providerSupplementalSummaryInformation": {
            "$ref": "#/components/schemas/ProviderSupplementalSummaryInformation",
            "description": "Supplemental summary information about the provider."
          }
        },
        "type": "object"
      },
      "DfiIdNumberQualifier": {
        "description": "Identifies the type of Depository Financial Institution (DFI) identification number being used. This specifies the format and country of the bank routing information.",
        "enum": [
          "01",
          "04"
        ],
        "type": "string"
      },
      "DiagnosisRelatedGroupInformation": {
        "properties": {
          "drugRelatedGroupCode": {
            "description": "The diagnosis related group code.",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "drugRelatedGroupCode"
        ],
        "type": "object"
      },
      "DiagnosisTypeCode": {
        "description": "The type of diagnosis code you are providing. You can set to `BK` - International Classification of Diseases Clinical Modification (ICD-9-CM) Principal Diagnosis, `ABK` - International Classification of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis, `BF`- International Classification of Diseases Clinical Modification (ICD-9-CM) Diagnosis, or `ABF`- International Classification of Diseases Clinical Modification (ICD-10-CM) Diagnosis. \n\n Note that ICD-9 codes are **deprecated** and should no longer be used in eligibility checks.",
        "enum": [
          "BK",
          "ABK",
          "BF",
          "ABF"
        ],
        "type": "string"
      },
      "DiscoveryBenefitsInformation": {
        "properties": {
          "additionalInformation": {
            "description": "A free-form message containing additional information about the benefits in the response.",
            "items": {
              "$ref": "#/components/schemas/AdditionalInformation"
            },
            "type": "array"
          },
          "authOrCertIndicator": {
            "$ref": "#/components/schemas/AuthOrCertIndicator",
            "description": "Code indicating whether the benefit is subject to prior authorization or certification. Can be `Y` - Yes, `N` - No, or `U` - Unknown.\n\nPayers may sometimes return other non-compliant values."
          },
          "benefitAmount": {
            "description": "The monetary benefit amount, such as a patient's co-pay or deductible. This value is expressed as a decimal, such as 100.00. \n \n The payer will always send a value in this property when the `benefitsInformation.code` = `B` - Co-Payment, `C` - Deductible, `G` - Out of Pocket (Stop Loss), `J` - Cost Containment, or `Y` - Spend Down. For those codes, this value represents the patient's portion of responsibility. \n \n The payer will **never** send this value when `benefitsInformation.code` = `A` - Co-Insurance. This property can contain zero when the patient has no responsibility. \n \n Learn more about [patient costs](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits).",
            "type": "string"
          },
          "benefitPercent": {
            "description": "The percentage of the benefit, such as co-insurance. This property can contain zero when the patient has no responsibility. \n \n The payer will always send a value in this property when `benefitsInformation.code` = `A` - Co-Insurance. For this code, this value represents the patient's portion of the responsibility. The percentage is expressed as a decimal, such as `0.80` represents 80%. \n \n The payer will **never** send a value in this property when `benefitsInformation.code` = `B` - Co-Payment, `C` - Deductible, `G` - Out of Pocket (Stop Loss), `J` - Cost Containment, or `Y` - Spend Down. \n \n Learn more about [patient costs](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits).",
            "type": "string"
          },
          "benefitQuantity": {
            "description": "The quantity of the benefit, qualified by the type specified in `quantityQualifier`. For example, `10` when the `quantityQualifier` is `Visits`.",
            "type": "string"
          },
          "benefitsAdditionalInformation": {
            "$ref": "#/components/schemas/BenefitsAdditionalInformation"
          },
          "benefitsRelatedEntities": {
            "description": "Other entities associated with the eligibility or benefits. This could be a provider, an individual, an organization, or another payer. When present, this array typically contains information about the patient's primary care provider (PCP), another organization that handles a specific benefit type (such as telehealth mental health services), or another health plan for the patient (coordination of benefits scenarios).\n- This is where information for a crossover carrier such as Medicaid or Medicare is provided, if it's applicable to the patient and the payer supports it.\n- For Blue Cross Blue Shield (BCBS) payers, Stedi returns an entry containing information about the patient's home plan - the plan that actually verified the coverage. In this object, the `entityIdentifier` property is set to `Party Performing Verification`. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#bcbs-home-plan)",
            "items": {
              "$ref": "#/components/schemas/BenefitsRelatedEntity"
            },
            "type": "array"
          },
          "benefitsServiceDelivery": {
            "items": {
              "$ref": "#/components/schemas/BenefitsServiceDelivery"
            },
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/BenefitsInformationCode"
          },
          "compositeMedicalProcedureIdentifier": {
            "$ref": "#/components/schemas/CompositeMedicalProcedureIdentifier"
          },
          "coverageLevel": {
            "$ref": "#/components/schemas/BenefitsInformationCoverageLevelName"
          },
          "coverageLevelCode": {
            "$ref": "#/components/schemas/BenefitsInformationCoverageLevelCode"
          },
          "eligibilityAdditionalInformationList": {
            "description": "Used when there are multiple Nature of Injury Codes or a Facility Type Codes included in the response.",
            "items": {
              "$ref": "#/components/schemas/EligibilityAdditionalInformation"
            },
            "type": "array"
          },
          "headerLoopIdentifierCode": {
            "description": "The loop header identifier number in the `LS` segment of the original X12 EDI transaction.",
            "type": "string"
          },
          "inPlanNetworkIndicator": {
            "$ref": "#/components/schemas/InPlanNetworkIndicatorName"
          },
          "inPlanNetworkIndicatorCode": {
            "$ref": "#/components/schemas/InPlanNetworkIndicatorCode"
          },
          "insuranceType": {
            "$ref": "#/components/schemas/InsuranceTypeName"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/InsuranceTypeCode",
            "description": "Code identifying the type of insurance policy. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#insurance-type-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "name": {
            "$ref": "#/components/schemas/BenefitsInformationName"
          },
          "planCoverage": {
            "description": "The specific product name or special program name for an insurance plan. For example `Gold 1-2-3`.\n\nPayers are normally required to send the plan name when `benefitsInformation.code` is set to values `1` - `8` and the `benefitsInformation.serviceTypeCodes` contains `30` (Health Benefit Plan Coverage). However, behavior may vary by payer, so don't rely on this information being present in the response. Note that the plan name returned in this property may not exactly match the name the payer uses in official plan documents or marketing literature.\n\nVisit [What's the plan name?](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits#what’s-the-plan-name%3F) in the benefits response documentation for more details.",
            "type": "string"
          },
          "quantityQualifier": {
            "$ref": "#/components/schemas/QuantityQualifierName",
            "description": "The name of the `quantityQualifierCode`.\n\nPayers may sometimes return other non-compliant values."
          },
          "quantityQualifierCode": {
            "$ref": "#/components/schemas/QuantityQualifierCode",
            "description": "Code indicating the type of quantity for the benefit. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#quantity-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "serviceTypeCodes": {
            "description": "An array of [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) related to the benefit type.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceTypeCode"
            },
            "type": "array"
          },
          "serviceTypes": {
            "description": "The names of the service type codes listed in the `serviceTypeCodes` array.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceType"
            },
            "type": "array"
          },
          "timeQualifier": {
            "$ref": "#/components/schemas/TimeQualifierName",
            "description": "The name of the `timeQualifierCode`.\n\nPayers may sometimes return other non-compliant values."
          },
          "timeQualifierCode": {
            "$ref": "#/components/schemas/TimeQualifierCode",
            "description": "Code indicating the time period for the benefit information. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#time-qualifier-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "trailerLoopIdentifierCode": {
            "description": "The loop trailer identifier number in the `LE` segment of the original X12 EDI transaction.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryPayer": {
        "properties": {
          "centersForMedicareAndMedicaidPlanId": {
            "description": "The payer's Centers for Medicare and Medicaid Services PlanID.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformation",
            "description": "The payer's contact information.\n\nNote that when `contacts.communicationMode` is set to `UR`, the `communicationNumber` property may not contain a valid URL. Most payers provide a partial web address for their provider portal, or something similar, such as `www.example.com/portal`. You must add the appropriate scheme and separators, such as `https://` or `http://`, to make it a valid URL."
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/PayerEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type qualifier for the payer. Can be set to `Person` (not commonly used) or `Non-Person Entity` (most common).\n\nPayers may sometimes return other non-compliant values."
          },
          "etin": {
            "description": "The payer's Electronic Transmitter Identification Number (ETIN).",
            "type": "string"
          },
          "federalTaxpayersIdNumber": {
            "description": "The payer's federal taxpayer's identification number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "firstName": {
            "description": "The payer's first name, when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "lastName": {
            "description": "The payer's last name. Used when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "middleName": {
            "description": "The payer's middle name or initial, when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "naic": {
            "description": "The payer's National Association of Insurance Commissioners (NAIC) identification number.",
            "type": "string"
          },
          "name": {
            "description": "The payer's business name, when the payer is not a person.",
            "type": "string"
          },
          "npi": {
            "description": "The payer's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "payorIdentification": {
            "description": "The payor identification.",
            "type": "string"
          },
          "suffix": {
            "description": "The payer's name suffix, such as Jr. or III. Used when the payer is an individual (not commonly used).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryPlanDateInformation": {
        "properties": {
          "added": {
            "description": "Added date. Payers may return this information in the case of retroactive eligibility.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admission": {
            "description": "The admission date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "certification": {
            "description": "The certification date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraBegin": {
            "description": "The date when COBRA coverage begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraEnd": {
            "description": "The date when COBRA coverage ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfDeath": {
            "description": "The date of death. Payers may return this information in the case of a deceased subscriber or dependent.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfLastUpdate": {
            "description": "The date when the plan information was last updated.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharge": {
            "description": "The discharge date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "effectiveDateOfChange": {
            "description": "The effective date of change.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibility": {
            "description": "Plan eligibility dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityBegin": {
            "description": "The date when the patient is first eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityEnd": {
            "description": "The date when the patient is no longer eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "enrollment": {
            "description": "The date when the patient is enrolled in the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "issue": {
            "description": "The issue date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "plan": {
            "description": "Plan effective dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planBegin": {
            "description": "The date coverage from the plan begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planEnd": {
            "description": "The date coverage from the plan ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyEffective": {
            "description": "The date when the policy becomes effective.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyExpiration": {
            "description": "The date when the policy expires.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateBegin": {
            "description": "The start of the period when the plan premium was paid in full.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateEnd": {
            "description": "The end of period when the plan premium payments are up-to-date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "service": {
            "description": "The service date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "status": {
            "description": "The status date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryResponseDependent": {
        "description": "Common fields shared between subscriber and dependent structures in the eligibility response.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The member's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriod": {
            "description": "The military service date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriodFormatQualifier": {
            "$ref": "#/components/schemas/DateTimePeriodFormatQualifier",
            "description": "The format of the military service date and time period. Can be `D8` - Date or `RD8` - Range of Dates.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "Context that identifies the exact military unit. Used to report military service data.",
            "type": "string"
          },
          "employmentStatusCode": {
            "$ref": "#/components/schemas/EmploymentStatusCode",
            "description": "The member's employment status code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#employment-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "endDateTimePeriod": {
            "description": "The military service end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseDependentEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type for the member. It can technically be set to `Person` or `Non-Person Entity`. In practice, our customers only receive `Person`.\n\nPayers may sometimes return other non-compliant values."
          },
          "firstName": {
            "description": "The member's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the patient's gender."
          },
          "governmentServiceAffiliationCode": {
            "$ref": "#/components/schemas/GovernmentServiceAffiliationCode",
            "description": "The member's government service affiliation code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#government-service-affiliation-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number associated with the insurance policy.",
            "type": "string"
          },
          "healthCareDiagnosisCodes": {
            "items": {
              "$ref": "#/components/schemas/HealthCareDiagnosisCode"
            },
            "type": "array"
          },
          "informationStatusCode": {
            "$ref": "#/components/schemas/InformationStatusCode",
            "description": "The status of the member's information, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#information-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "insuredIndicator": {
            "$ref": "#/components/schemas/DependentInsuredIndicator"
          },
          "lastName": {
            "description": "The member's last name.",
            "type": "string"
          },
          "maintenanceReasonCode": {
            "$ref": "#/components/schemas/MaintenanceReasonCode"
          },
          "maintenanceTypeCode": {
            "$ref": "#/components/schemas/MaintenanceTypeCode"
          },
          "memberId": {
            "description": "The member ID for the insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The member's middle name or initial.",
            "type": "string"
          },
          "militaryServiceRankCode": {
            "$ref": "#/components/schemas/MilitaryServiceRankCode",
            "description": "The member's military service rank code. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#military-service-rank-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The network identification number associated with the insurance policy.",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number associated with the insurance policy.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/DependentRelationship"
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/DependentRelationshipCode"
          },
          "responseProvider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "ssn": {
            "description": "The member's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "startDateTimePeriod": {
            "description": "The military service start date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III.",
            "type": "string"
          },
          "uniqueHealthIdentifier": {
            "description": "The member's unique health identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryResponseProvider": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The provider's contact information."
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseProviderEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier"
          },
          "federalTaxpayersIdNumber": {
            "description": "The Federal Taxpayer Identification Number (also known as an EIN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name. This applies to providers that are an individual.",
            "type": "string"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "payorIdentification": {
            "description": "The Payor Identification.",
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The pharmacy processor number.",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/ResponseProviderCode",
            "description": "A code that communicates the provider's role in the type of benefits information in the response. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "providerFirstName": {
            "description": "The provider's first name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerName": {
            "description": "The provider's last name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerOrgName": {
            "description": "The provider's organization name.",
            "type": "string"
          },
          "referenceIdentification": {
            "description": "The Health Care Provider Taxonomy Code.",
            "type": "string"
          },
          "serviceProviderNumber": {
            "description": "The service provider number. This is an identification number assigned by the payer.",
            "type": "string"
          },
          "servicesPlanID": {
            "description": "The Centers for Medicare and Medicaid Services (CMS) Plan ID.",
            "type": "string"
          },
          "ssn": {
            "description": "The Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr., Sr., or III.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryResponseSubscriber": {
        "description": "Common fields shared between subscriber and dependent structures in the eligibility response.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The member's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriod": {
            "description": "The military service date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriodFormatQualifier": {
            "$ref": "#/components/schemas/DateTimePeriodFormatQualifier",
            "description": "The format of the military service date and time period. Can be `D8` - Date or `RD8` - Range of Dates.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "Context that identifies the exact military unit. Used to report military service data.",
            "type": "string"
          },
          "employmentStatusCode": {
            "$ref": "#/components/schemas/EmploymentStatusCode",
            "description": "The member's employment status code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#employment-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "endDateTimePeriod": {
            "description": "The military service end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseSubscriberEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type for the member. It can technically be set to `Person` or `Non-Person Entity`. In practice, our customers only receive `Person`.\n\nPayers may sometimes return other non-compliant values."
          },
          "firstName": {
            "description": "The member's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the patient's gender."
          },
          "governmentServiceAffiliationCode": {
            "$ref": "#/components/schemas/GovernmentServiceAffiliationCode",
            "description": "The member's government service affiliation code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#government-service-affiliation-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number associated with the insurance policy.",
            "type": "string"
          },
          "healthCareDiagnosisCodes": {
            "items": {
              "$ref": "#/components/schemas/HealthCareDiagnosisCode"
            },
            "type": "array"
          },
          "informationStatusCode": {
            "$ref": "#/components/schemas/InformationStatusCode",
            "description": "The status of the member's information, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#information-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "insuredIndicator": {
            "$ref": "#/components/schemas/SubscriberInsuredIndicator"
          },
          "lastName": {
            "description": "The member's last name.",
            "type": "string"
          },
          "maintenanceReasonCode": {
            "$ref": "#/components/schemas/MaintenanceReasonCode"
          },
          "maintenanceTypeCode": {
            "$ref": "#/components/schemas/MaintenanceTypeCode"
          },
          "memberId": {
            "description": "The member ID for the insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The member's middle name or initial.",
            "type": "string"
          },
          "militaryServiceRankCode": {
            "$ref": "#/components/schemas/MilitaryServiceRankCode",
            "description": "The member's military service rank code. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#military-service-rank-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The network identification number associated with the insurance policy.",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number associated with the insurance policy.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/SubscriberRelationship"
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/SubscriberRelationshipCode"
          },
          "responseProvider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "ssn": {
            "description": "The member's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "startDateTimePeriod": {
            "description": "The military service start date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III.",
            "type": "string"
          },
          "uniqueHealthIdentifier": {
            "description": "The member's unique health identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryStatus": {
        "enum": [
          "PENDING",
          "COMPLETE",
          "ERROR"
        ],
        "type": "string"
      },
      "DrugIdentification": {
        "description": "To report prescribed drugs and biologics.",
        "properties": {
          "linkSequenceNumber": {
            "description": "Required when the provided medication involves the compounding of two or more drugs being reported and there is no prescription number. The link sequence number is a provider assigned number that is unique to this claim. It allows the receiver to piece together the components of the compound.",
            "type": "string"
          },
          "measurementUnitCode": {
            "$ref": "#/components/schemas/MeasurementUnitCode"
          },
          "nationalDrugCode": {
            "type": "string"
          },
          "nationalDrugUnitCount": {
            "description": "The numeric value of the drug quantity.",
            "type": "string"
          },
          "pharmacyPrescriptionNumber": {
            "description": "In cases where a compound drug is being billed, the components of the compound will all have the same prescription number. Payers receiving the claim can relate all the components by matching the prescription number.",
            "type": "string"
          },
          "serviceIdQualifier": {
            "$ref": "#/components/schemas/DrugIdentificationServiceIdQualifier"
          }
        },
        "required": [
          "measurementUnitCode",
          "nationalDrugCode",
          "nationalDrugUnitCount",
          "serviceIdQualifier"
        ],
        "type": "object"
      },
      "DrugIdentificationServiceIdQualifier": {
        "description": "Code indicating the source of the drug code or product number. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#drug-identification-product-or-service-id-qualifier-codes) for a complete list.",
        "enum": [
          "EN",
          "EO",
          "HI",
          "N4",
          "ON",
          "UK",
          "UP"
        ],
        "type": "string"
      },
      "DtpDate": {
        "properties": {
          "date": {
            "description": "A single date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endDate": {
            "description": "The end date of a range.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "startDate": {
            "description": "The beginning date of a range.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DurableMedicalEquipmentCertificateOfMedicalNecessity": {
        "description": "Required on claims that include a Durable Medical Equipment Regional Carrier (DMERC) Certificate of Medical Necessity (CMN).",
        "properties": {
          "attachmentTransmissionCode": {
            "$ref": "#/components/schemas/DurableMedicalEquipmentCertificateOfMedicalNecessityAttachmentTransmissionCode"
          }
        },
        "required": [
          "attachmentTransmissionCode"
        ],
        "type": "object"
      },
      "DurableMedicalEquipmentCertificateOfMedicalNecessityAttachmentTransmissionCode": {
        "description": "Code indicating the timing, transmission method, or format by which attachments will be sent. Required when the actual attachment is maintained by an attachment warehouse or similar vendor. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#attachment-transmission-codes) for a complete list. Use code `NS` when the paperwork is available on request at the provider's site, but is not being sent with the claim at this time.",
        "enum": [
          "AB",
          "AD",
          "AF",
          "AG",
          "NS"
        ],
        "type": "string"
      },
      "DurableMedicalEquipmentCertification": {
        "description": "Required when a Durable Medical Equipment Regional Carrier Certificate of Medical Necessity (DMERC CMN) or a DMERC Information Form (DIF) or Oxygen Therapy Certification is included on this service line.",
        "properties": {
          "certificationTypeCode": {
            "$ref": "#/components/schemas/CertificationTypeCode"
          },
          "durableMedicalEquipmentDurationInMonths": {
            "description": "The length of time the DME equipment is needed.",
            "type": "string"
          }
        },
        "required": [
          "certificationTypeCode",
          "durableMedicalEquipmentDurationInMonths"
        ],
        "type": "object"
      },
      "DurableMedicalEquipmentService": {
        "description": "Information about durable medical equipment. For example, the rental and purchase price information.",
        "properties": {
          "days": {
            "description": "The length of medical treatment required.",
            "type": "string"
          },
          "frequencyCode": {
            "$ref": "#/components/schemas/FrequencyCode"
          },
          "purchasePrice": {
            "description": "The purchase price for the equipment, expressed as a decimal. For example, `100.50`.",
            "type": "string"
          },
          "rentalPrice": {
            "description": "The rental price for the equipment, expressed as a decimal. For example, `100.50`.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "frequencyCode",
          "purchasePrice",
          "rentalPrice"
        ],
        "type": "object"
      },
      "EditResponse": {
        "description": "Currently not used.",
        "properties": {
          "allowOverride": {
            "type": "string"
          },
          "badData": {
            "type": "string"
          },
          "claimCorePath": {
            "type": "string"
          },
          "editActivity": {
            "type": "string"
          },
          "editName": {
            "type": "string"
          },
          "element": {
            "type": "string"
          },
          "errorDescription": {
            "type": "string"
          },
          "fieldIndex": {
            "type": "string"
          },
          "loop": {
            "type": "string"
          },
          "phaseID": {
            "type": "string"
          },
          "qualifierCode": {
            "type": "string"
          },
          "referenceID": {
            "type": "string"
          },
          "segment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityAdditionalInformation": {
        "properties": {
          "codeCategory": {
            "$ref": "#/components/schemas/InjuryCodeCategory",
            "description": "The code category. Always set to `44` - Nature of Injury.\n\nPayers may sometimes return other non-compliant values."
          },
          "codeListQualifier": {
            "description": "The name of the `codeListQualifierCode`. For example `Mutually Defined` when the code is set to `ZZ`.",
            "type": "string"
          },
          "codeListQualifierCode": {
            "$ref": "#/components/schemas/CodeListQualifierCode",
            "description": "Identifies a specific industry code list. Can be `GR` - National Council on Compensation Insurance (NCCI) Nature of Injury Code, `NI` - Nature of Injury Code, or `ZZ` - Mutually Defined.\n\n When this is set to `ZZ`, the `industryCode` property will be set to a place of service code.\n\nPayers may sometimes return other non-compliant values."
          },
          "industry": {
            "description": "The name of the `industryCode`. For example `Pharmacy` when the code is `01`.",
            "type": "string"
          },
          "industryCode": {
            "description": "The specific industry code. When `codeListQualifierCode` is set to `ZZ` - Mutually Defined, this property will be set to a place of service code. Visit the [Place of Service Code Set](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list of these codes and their descriptions.",
            "type": "string"
          },
          "injuredBodyPartName": {
            "description": "Description of injured body parts.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheck400ErrorResponseContent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EligibilityCheckOutputValidationErrors"
          },
          {
            "$ref": "#/components/schemas/ValidationException"
          }
        ]
      },
      "EligibilityCheckDependentError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `subscriber` or `dependent` level include missing or incorrect identifying information and that the payer was unable to locate the patient in their system. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckDependentErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckProviderAndMemberFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckDependentErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "15",
          "33",
          "35",
          "42",
          "43",
          "45",
          "47",
          "48",
          "49",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "77",
          "98",
          "AA",
          "AE",
          "AF",
          "AG",
          "AO",
          "CI",
          "E8",
          "IA",
          "MA"
        ],
        "type": "string"
      },
      "EligibilityCheckError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more AAA errors that specify the reasons for the rejection and any recommended follow-up actions. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckErrorCode",
            "description": "The error code. Visit [Eligibility troubleshooting](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) for a complete list of all possible error codes and descriptions.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckErrorCode": {
        "description": "This is a superset of all the possible codes in the sub-loops, as all errors are bubbled up to the top level of the response\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "04",
          "15",
          "33",
          "35",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "97",
          "98",
          "AA",
          "AE",
          "AF",
          "AG",
          "AO",
          "CI",
          "E8",
          "IA",
          "MA",
          "T4"
        ],
        "type": "string"
      },
      "EligibilityCheckFollowupAction": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "Please Correct and Resubmit",
          "Resubmission Not Allowed",
          "Please Resubmit Original Transaction",
          "Resubmission Allowed",
          "Do Not Resubmit; Inquiry Initiated to a Third Party",
          "Please Wait 30 Days and Resubmit",
          "Please Wait 10 Days and Resubmit",
          "Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly"
        ],
        "type": "string"
      },
      "EligibilityCheckOutputValidationErrors": {
        "example": {
          "$ref": "#/x-eligibility-error-400-example"
        }
      },
      "EligibilityCheckPayerError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `payer` level include issues with payer enrollment and that the payer's system is down or experiencing issues. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckPayerErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckPayerErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "04",
          "41",
          "42",
          "79",
          "80",
          "T4"
        ],
        "type": "string"
      },
      "EligibilityCheckProviderAndMemberFollowupAction": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "Please Correct and Resubmit",
          "Resubmission Not Allowed",
          "Resubmission Allowed",
          "Do Not Resubmit; Inquiry Initiated to a Third Party",
          "Please Wait 30 Days and Resubmit",
          "Please Wait 10 Days and Resubmit",
          "Do Not Resubmit; We Will Hold Your Request and Respond Again Shortly"
        ],
        "type": "string"
      },
      "EligibilityCheckProviderError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `provider` level include missing or incorrect information and issues with the provider's NPI registration with the payer. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckProviderErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckProviderAndMemberFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckProviderErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "15",
          "41",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "50",
          "51",
          "79",
          "97",
          "T4"
        ],
        "type": "string"
      },
      "EligibilityCheckRequestContent": {
        "properties": {
          "controlNumber": {
            "deprecated": true,
            "description": "Stedi generates a control number for each eligibility check, so you don’t need to include this property in your request.",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          },
          "dependents": {
            "description": "A dependent for which you want to retrieve benefits information.\n- You can only submit one dependent per eligibility check.\n- Only include the patient's information here when they are listed as a dependent on the subscriber's insurance plan AND the payer cannot uniquely identify them through information outside the subscriber's policy. For example, if the dependent has their own member ID number, you should identify them in the `subscriber` object instead. This includes member IDs that differ only by a suffix, such as `01`, because the patient can still be uniquely identified.\n- Most Medicaid plans don't support dependents, with a [few exceptions](https://www.stedi.com/docs/healthcare/send-eligibility-checks#medicaid-dependents). Sending this array to payers that don't support dependents will either cause an error, or the payer may ignore the information and return results for the subscriber instead.\n- Each payer has different requirements, so you should supply the fields necessary for each payer to identify the dependent in their system. However, we **strongly recommend** including the dependent's date of birth in the request when available because many payers return errors without it.\n- Enter the patient's name exactly as written on their insurance card, if available, including any special or punctuation characters such as apostrophes, hyphens (dashes), or spaces. Visit [patient names](https://www.stedi.com/docs/healthcare/send-eligibility-checks#patient-names) for all best practices to avoid unnecessary failures.",
            "items": {
              "$ref": "#/components/schemas/RequestDependent"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "encounter": {
            "$ref": "#/components/schemas/Encounter"
          },
          "externalPatientId": {
            "description": "A unique identifier for the patient that Stedi uses to identify and correlate historical eligibility checks for the same individual. We recommend including this value in all requests.",
            "maxLength": 36,
            "type": "string"
          },
          "informationReceiverName": {
            "$ref": "#/components/schemas/InformationReceiverName",
            "deprecated": true,
            "description": "Use the corresponding properties in the `provider` object instead."
          },
          "portalPassword": {
            "description": "The password that the provider uses to log in to the payer's portal. This is not commonly used.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "portalUsername": {
            "description": "The username that the provider uses to log in to the payer's portal. This is not commonly used.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider",
            "description": "Information about the entity requesting the eligibility check. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider.\n - You must provide the `organizationName` (if the entity is an organization), or `firstName` and `lastName` (if the provider is an individual).\n - You must also provide an identifier - this is typically the provider's [National Provider Identifier](https://www.stedi.com/docs/healthcare/national-provider-identifier) (`npi`). If the provider doesn't have an NPI, you can supply an alternative, such as their `taxId` or `ssn`.\n - Don't include additional properties, such as `taxId` or `address`, unless they are specifically required or suggested by the payer."
          },
          "submitterTransactionIdentifier": {
            "description": "This property is only relevant for asynchronous batch eligibility checks.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/RequestSubscriber"
          },
          "tradingPartnerName": {
            "description": "The payer's name, such as Cigna or Aetna.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "This is the payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list. You can send requests using the primary payer ID, the Stedi payer ID, or any alias listed in the payer record.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "provider",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "EligibilityCheckResponseContent": {
        "properties": {
          "benefitsInformation": {
            "description": "Information about the patient's healthcare benefits, such as coverage level (individual vs. family), coverage type (deductibles, co-pays, etc.), out of pocket maximums, and more. \n \n Payers typically return at least the following properties: `code`, `coverageLevelCode`, `serviceTypeCodes`, and either `benefitAmount` or `benefitPercent`. However, the exact properties returned in this object are up to the payer's discretion.\n\nThe payer may send benefits information for service type codes (STCs) you didn't request - this is expected. The STC you send in the request tells the payer the types of benefits information you want, but they aren't required to respond with exactly the same STC(s) in the response. Receiving different STCs than you requested can also mean that the payer is ignoring the STC you sent, which is why we recommend [testing payers](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#test-payer-stc-support) to determine their support for specific STCs.\n\nVisit [Determine patient benefits](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits) for more information about benefit types, details about how to interpret the `benefitsInformation` array, and additional examples.",
            "items": {
              "$ref": "#/components/schemas/BenefitsInformation"
            },
            "type": "array"
          },
          "controlNumber": {
            "description": "An identifier for the payer's response.",
            "type": "string"
          },
          "dependents": {
            "description": "Information about the patient when they are a dependent. When the patient is a dependent, this array will contain a single object with the patient's information. When the patient is a subscriber, or considered to be a subscriber because they have a unique member ID, their information is returned in the `subscriber` object, and this array will be empty.\n\n When present, this object will always include the dependent's name for identification, but many payers will also return the date of birth and other identifying information.",
            "items": {
              "$ref": "#/components/schemas/ResponseDependent"
            },
            "type": "array"
          },
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "errors": {
            "description": "When a payer rejects your eligibility check, the response contains one or more [`AAA` errors](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) that specify the reasons for the rejection and any recommended follow-up actions.\n\nAny errors that occur at the `payer`, `provider`, `subscriber`, or `dependents` levels are also included in this array, allowing you to review all errors in a central location. If there are no `AAA` errors, this array will be empty.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "implementationTransactionSetSyntaxError": {
            "description": "The implementation transaction set error code provided in `IK502` of the 999 transaction.",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/EligibilityMetaDataJSON"
          },
          "payer": {
            "$ref": "#/components/schemas/Payer"
          },
          "planDateInformation": {
            "$ref": "#/components/schemas/PlanDateInformation"
          },
          "planInformation": {
            "$ref": "#/components/schemas/PlanInformation"
          },
          "planStatus": {
            "deprecated": true,
            "description": "Please use `benefitsInformation` instead.",
            "items": {
              "$ref": "#/components/schemas/PlanStatus",
              "deprecated": true
            },
            "type": "array"
          },
          "provider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "reassociationKey": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "status": {
            "description": "Errors Stedi encountered when generating or sending the final X12 EDI transaction to the payer. These can include validation errors and payer unavailable errors that prevent delivery.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ResponseSubscriber"
          },
          "subscriberTraceNumbers": {
            "description": "A unique identifier for the eligibility request. It's used to trace the transaction. Stedi always generates a trace number for internal tracking, and the payer may generate one as well. Stedi returns both its internal trace number and the payer's trace number (if present) in this array.\n\nYou can't set your own trace number when submitting eligibility checks through this endpoint.",
            "items": {
              "$ref": "#/components/schemas/SubscriberTraceNumber"
            },
            "type": "array"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original eligibility check request. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "transactionSetAcknowledgement": {
            "description": "The transaction set acknowledgment code provided in in the [X12 EDI 999 response](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231/01HRF41ES1DVGCA6X1EHSRPFXZ#properties.heading.properties.transaction_set_response_header_AK2_loop.items.properties.transaction_set_response_trailer_IK5).",
            "type": "string"
          },
          "warnings": {
            "description": "Warnings indicate non-fatal issues with your eligibility check or a non-standard response from the payer.",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "type": "array"
          },
          "x12": {
            "description": "Typically this property contains the raw X12 EDI [271 Eligibility Benefit Response](https://portal.stedi.com/app/guides/view/hipaa/health-care-eligibility-benefit-response-x279a1/01GS66YHZPB37ABF34DBPSR213) from the payer.\n\nIn some circumstances, this property may contain a [999 Implementation Acknowledgment](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231a1/01HMRQV0N8SPHG58M4ZG1CRHH0) instead of a 271. A 999 indicates validation errors in the X12 EDI transaction, such as improper formatting or missing or invalid values.\n\nIf the 999 is returned in this property, many of the other response properties will be empty, as they are mapped to information in the 271.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckSubscriberError": {
        "description": "When a payer rejects your eligibility check, the response contains one or more `AAA` errors that specify the reasons for the rejection and any recommended follow-up actions. Common reasons for rejection at the `subscriber` or `dependent` level include missing or incorrect identifying information and that the payer was unable to locate the patient in their system. [Learn more](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors)",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/EligibilityCheckSubscriberErrorCode",
            "description": "The error code.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "The error description.",
            "type": "string"
          },
          "field": {
            "description": "The error type, `AAA`.",
            "type": "string"
          },
          "followupAction": {
            "$ref": "#/components/schemas/EligibilityCheckProviderAndMemberFollowupAction",
            "description": "Allowed actions you can take, based on the rejection reason code. For example `Please Correct and Resubmit`.\n\nPayers may sometimes return other non-compliant values."
          },
          "location": {
            "description": "The location of the error within the original X12 EDI response.",
            "type": "string"
          },
          "possibleResolutions": {
            "description": "Information to help you correct the error.\n\nWe periodically update this guidance, so these strings may change at any time and may differ between eligibility responses. **Don't build programmatic logic that depends on matching these strings exactly.**",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityCheckSubscriberErrorCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "15",
          "33",
          "35",
          "42",
          "43",
          "45",
          "47",
          "48",
          "49",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "63",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "78",
          "98",
          "AA",
          "AE",
          "AF",
          "AG",
          "AO",
          "CI",
          "E8",
          "IA",
          "MA"
        ],
        "type": "string"
      },
      "EligibilityMetaDataJSON": {
        "description": "Metadata about the response. Stedi uses this data for tracking and troubleshooting.",
        "properties": {
          "applicationMode": {
            "$ref": "#/components/schemas/ApplicationModes",
            "description": "The type of data in the request. This is either `production` when you send a request with a standard API key or `test` when you send a request in test mode with a [test API key](https://www.stedi.com/docs/api-reference/index#api-key-types). The `information` value is not currently used.\n\nPayers may sometimes return other non-compliant values."
          },
          "billerId": {
            "description": "The biller ID Stedi assigns to this request.",
            "type": "string"
          },
          "outboundTraceId": {
            "description": "The unique ID Stedi assigns to this request.",
            "type": "string"
          },
          "senderId": {
            "description": "The sender ID Stedi assigns to this request.",
            "type": "string"
          },
          "submitterId": {
            "description": "The submitter ID Stedi assigns to this request.",
            "type": "string"
          },
          "traceId": {
            "description": "The transaction identifier the payer sends in the response. This should be the same as the `outboundTraceId`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityMetaDataRawX12": {
        "description": "Metadata about the response. Stedi uses this data for tracking and troubleshooting.",
        "properties": {
          "applicationMode": {
            "$ref": "#/components/schemas/ApplicationModes",
            "description": "The type of data in the request. This is either `production` when you send a request with a standard API key or `test` when you send a request in test mode with a [test API key](https://www.stedi.com/docs/api-reference/index#api-key-types). The `information` value is not currently used.\n\nPayers may sometimes return other non-compliant values."
          },
          "billerId": {
            "description": "The biller ID Stedi assigns to this request.",
            "type": "string"
          },
          "outboundTraceId": {
            "description": "The transaction identifier in the request's `BHT03` element.",
            "type": "string"
          },
          "senderId": {
            "description": "The sender ID Stedi assigns to this request.",
            "type": "string"
          },
          "submitterId": {
            "description": "The submitter ID Stedi assigns to this request.",
            "type": "string"
          },
          "traceId": {
            "description": "The transaction identifier in the response's `BHT03` element. This should be the same as the `outboundTraceId`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityRawX12Check400ErrorResponseContent": {
        "example": {
          "$ref": "#/x-raw-x12-parse-error-example"
        }
      },
      "EligibilityRawX12CheckRequestContent": {
        "properties": {
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "externalPatientId": {
            "description": "A unique identifier for the patient that Stedi uses to identify and correlate historical eligibility checks for the same individual. We recommend including this value in all requests.",
            "maxLength": 36,
            "type": "string"
          },
          "x12": {
            "type": "string"
          }
        },
        "required": [
          "x12"
        ],
        "type": "object"
      },
      "EligibilityRawX12CheckResponseContent": {
        "properties": {
          "benefitsInformation": {
            "description": "Information about the patient's healthcare benefits, such as coverage level (individual vs. family), coverage type (deductibles, co-pays, etc.), out of pocket maximums, and more. \n \n Payers typically return at least the following properties: `code`, `coverageLevelCode`, `serviceTypeCodes`, and either `benefitAmount` or `benefitPercent`. However, the exact properties returned in this object are up to the payer's discretion.\n\nThe payer may send benefits information for service type codes (STCs) you didn't request - this is expected. The STC you send in the request tells the payer the types of benefits information you want, but they aren't required to respond with exactly the same STC(s) in the response. Receiving different STCs than you requested can also mean that the payer is ignoring the STC you sent, which is why we recommend [testing payers](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#test-payer-stc-support) to determine their support for specific STCs.\n\nVisit [Determine patient benefits](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits) for more information about benefit types, details about how to interpret the `benefitsInformation` array, and additional examples.",
            "items": {
              "$ref": "#/components/schemas/BenefitsInformation"
            },
            "type": "array"
          },
          "controlNumber": {
            "description": "An identifier for the payer's response.",
            "type": "string"
          },
          "dependents": {
            "description": "Information about the patient when they are a dependent. When the patient is a dependent, this array will contain a single object with the patient's information. When the patient is a subscriber, or considered to be a subscriber because they have a unique member ID, their information is returned in the `subscriber` object, and this array will be empty.\n\n When present, this object will always include the dependent's name for identification, but many payers will also return the date of birth and other identifying information.",
            "items": {
              "$ref": "#/components/schemas/ResponseDependent"
            },
            "type": "array"
          },
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "errors": {
            "description": "When a payer rejects your eligibility check, the response contains one or more [`AAA` errors](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) that specify the reasons for the rejection and any recommended follow-up actions.\n\nAny errors that occur at the `payer`, `provider`, `subscriber`, or `dependents` levels are also included in this array, allowing you to review all errors in a central location. If there are no `AAA` errors, this array will be empty.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "implementationTransactionSetSyntaxError": {
            "description": "The implementation transaction set error code provided in `IK502` of the 999 transaction.",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/EligibilityMetaDataRawX12"
          },
          "payer": {
            "$ref": "#/components/schemas/Payer"
          },
          "planDateInformation": {
            "$ref": "#/components/schemas/PlanDateInformation"
          },
          "planInformation": {
            "$ref": "#/components/schemas/PlanInformation"
          },
          "planStatus": {
            "deprecated": true,
            "description": "Please use `benefitsInformation` instead.",
            "items": {
              "$ref": "#/components/schemas/PlanStatus",
              "deprecated": true
            },
            "type": "array"
          },
          "provider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "reassociationKey": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "status": {
            "description": "Errors Stedi encountered when generating or sending the final X12 EDI transaction to the payer. These can include validation errors and payer unavailable errors that prevent delivery.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ResponseSubscriber"
          },
          "subscriberTraceNumbers": {
            "description": "A unique identifier for the eligibility request. It's used to trace the transaction. Stedi always generates a trace number for internal tracking, and the payer may generate one as well. You can also optionally [supply your own trace number](https://www.stedi.com/docs/healthcare/send-eligibility-checks#trn) in a `TRN` segment.\n\nStedi returns its internal trace number in this array as well as the trace numbers from you and the payer (if provided).",
            "items": {
              "$ref": "#/components/schemas/SubscriberTraceNumber"
            },
            "type": "array"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original eligibility check request. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "transactionSetAcknowledgement": {
            "description": "The transaction set acknowledgment code provided in in the [X12 EDI 999 response](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231/01HRF41ES1DVGCA6X1EHSRPFXZ#properties.heading.properties.transaction_set_response_header_AK2_loop.items.properties.transaction_set_response_trailer_IK5).",
            "type": "string"
          },
          "warnings": {
            "description": "Warnings indicate non-fatal issues with your eligibility check or a non-standard response from the payer.",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "type": "array"
          },
          "x12": {
            "description": "Typically this property contains the raw X12 EDI [271 Eligibility Benefit Response](https://portal.stedi.com/app/guides/view/hipaa/health-care-eligibility-benefit-response-x279a1/01GS66YHZPB37ABF34DBPSR213) from the payer.\n\nIn some circumstances, this property may contain a [999 Implementation Acknowledgment](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231a1/01HMRQV0N8SPHG58M4ZG1CRHH0) instead of a 271. A 999 indicates validation errors in the X12 EDI transaction, such as improper formatting or missing or invalid values.\n\nIf the 999 is returned in this property, many of the other response properties will be empty, as they are mapped to information in the 271.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmergencyIndicator": {
        "description": "Code indicating whether the service was related to an emergency. Can be set to `Y` - Yes. An emergency is when the patient requires immediate medical intervention as a result of severe, life threatening, or potentially disabling conditions.",
        "enum": [
          "Y"
        ],
        "type": "string"
      },
      "EmploymentStatusCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "AE",
          "AO",
          "AS",
          "AT",
          "AU",
          "CC",
          "DD",
          "HD",
          "IR",
          "LX",
          "PE",
          "RE",
          "RM",
          "RR",
          "RU"
        ],
        "type": "string"
      },
      "Encounter": {
        "description": "Details about the eligibility or benefit information you are requesting for the patient.\n- If you don't specify either `serviceTypeCodes` or a `procedureCode` and `productOrServiceIDQualifier`, Stedi defaults to using `30` (Plan coverage and general benefits) as the only `serviceTypeCodes` value.\n- You can specify either a single `dateOfService` or a `beginningDateOfService` and `endDateOfService`. The payer defaults to using the current date in their timezone if you don't include one.\n- When checking eligibility for today, omit the `dateOfService` property to ensure consistent behavior across payers.\n- We recommend submitting dates up to 12 months in the past or up to the end of the current month. Payers aren't required to support dates outside these ranges. However, some payers such as the Centers for Medicare and Medicaid Services (CMS) do support requests for dates further in the future - especially the next calendar month. Check the payer's documentation to determine their specific behavior.",
        "properties": {
          "beginningDateOfService": {
            "description": "The beginning date of service. If you include this value, you must also include the `endDateOfService`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateOfService": {
            "description": "The date of service. You can use this value to specify a single occasion, such as a doctor's visit. If you don't specify a service date (either a single day or a range of dates), the payer defaults to using the current date in their timezone.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "diagnosisCodePointer": {
            "description": "Diagnosis code pointers in order of importance to the service. These pointers are an index to the ICD-10 codes you included in the `subscriber.healthCareCodeInformation` or `dependents.healthCareCodeInformation` object arrays. The pointer values can be from 1 - 8 (integer numbers). If you are including diagnosis codes, you **must** set at least one pointer here for the primary diagnosis. Then, you can add up to three additional pointers (up to four in total). Don't put ICD-10 codes here.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "endDateOfService": {
            "description": "The end date of service. If you include this value, you must also include the `beginningDateOfService`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "industryCode": {
            "$ref": "#/components/schemas/IndustryCode"
          },
          "medicalProcedures": {
            "description": "Use only when you need to send multiple procedure codes in a single request. Otherwise, use the `encounter.procedureCode` and `encounter.productOrServiceIDQualifier` properties.",
            "items": {
              "$ref": "#/components/schemas/MedicalProcedure"
            },
            "maxItems": 98,
            "minItems": 1,
            "type": "array"
          },
          "priorAuthorizationOrReferralNumber": {
            "description": "The prior authorization or referral number for a particular benefit or procedure.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string"
          },
          "procedureModifiers": {
            "description": "The procedure modifier that provides additional information related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/EncounterProductOrServiceIDQualifier"
          },
          "referenceIdentificationQualifier": {
            "$ref": "#/components/schemas/EncounterReferenceIdentificationQualifier"
          },
          "serviceTypeCodes": {
            "description": "One or more codes classifying the type of services for which you want to receive benefits information.\n\nIf you don't specify a service type code or a `procedureCode` and `productOrServiceIDQualifier`, Stedi defaults to using `30` - Health Benefit Plan Coverage. Visit [Service Type Codes](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#full-stc-list) for a complete list.\n\nNot all payers support all service type codes, and not all payers support multiple service type codes in the same request. We recommend including one service type code per request unless you're sure the payer supports multiple.\n\nPayers aren't required to respond with exactly the same STC(s) in the response, so you may receive benefits information for STCs you didn't request. However, receiving different STCs can mean that the payer is ignoring the STC you sent, which is why we recommend [testing payers](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#test-payer-stc-support) to determine their support for specific STCs.",
            "items": {
              "$ref": "#/components/schemas/RequestEligibilityServiceTypeCode"
            },
            "maxItems": 99,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EncounterProductOrServiceIDQualifier": {
        "description": "Code identifying the type/source of the `procedureCode`. You can set this to `AD` - American Dental Association Codes, `CJ` - Current Procedural Terminology (CPT) Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `ID` - International Classification of Diseases, 9th Revision, Clinical Modification (ICD-9-CM) - Procedure, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, `N4` - National Drug Code in 5-4-2 Format, or `ZZ` - Mutually Defined.",
        "enum": [
          "AD",
          "CJ",
          "HC",
          "ID",
          "IV",
          "N4",
          "ZZ"
        ],
        "type": "string"
      },
      "EncounterReferenceIdentificationQualifier": {
        "description": "The type of information you provided in the `priorAuthorizationOrReferralNumber` property. You can set this to `9F` - Referral Number or `G1` - Prior Authorization Number.",
        "enum": [
          "9F",
          "G1"
        ],
        "type": "string"
      },
      "EnrollmentInfo": {
        "description": "Information about enrollment requirements for the payer",
        "properties": {
          "ptanRequired": {
            "description": "Whether a PTAN (Provider Transaction Access Number) is required for transaction enrollment.\n\nThe Provider Transaction Access Number (PTAN) is a Medicare-issued number given to providers upon enrollment with Medicare. This number is usually six digits and is assigned based on the type of service and the location of the provider. Upon enrollment, Medicare Administrating Contracting (MAC) providers should receive their assigned PTAN number in their approval letter.",
            "type": "boolean"
          },
          "transactionEnrollmentProcesses": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcesses",
            "description": "Enrollment details for specific transaction types.\n\nStedi only returns this object when information about the enrollment process is available for one or more transaction types. When this object isn't included in the response, it **doesn't** mean no transaction types require enrollment. Refer to the `transactionSupport` object for details about which transaction types require enrollment."
          }
        },
        "type": "object"
      },
      "EnrollmentProcessType": {
        "description": "Whether transaction enrollment is single or multi-step.\n  - `ONE_CLICK` indicates that once you submit the transaction enrollment request, Stedi can complete the rest of the enrollment process without any further action from you.\n  - `MULTI_STEP` indicates that you must complete additional steps to finish the enrollment process. Customer support will reach out with clear instructions explaining how to complete any remaining steps.",
        "enum": [
          "ONE_CLICK",
          "MULTI_STEP"
        ],
        "type": "string"
      },
      "EntityIdentificationCode": {
        "description": "Code identifying the type of `benefitsInformation.entityIdentificationValue`.",
        "enum": [
          "MI",
          "PI"
        ],
        "type": "string"
      },
      "EntityIdentifierName": {
        "description": "Identifies the type of `benefitsInformation.benefitsRelatedEntity`.",
        "enum": [
          "Insured or Subscriber",
          "Payer",
          "Primary Payer",
          "Secondary Payer",
          "Tertiary Payer"
        ],
        "type": "string"
      },
      "EntityTypeQualifier": {
        "description": "The type of entity.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Person",
          "Non-Person Entity"
        ],
        "type": "string"
      },
      "EpsdtIndicator": {
        "description": "Code indicating whether there was EPSDT involvement in the service. Can be set to `Y` - Yes. EPSDT is a program that provides comprehensive and preventive health care services for children under age 21 who are enrolled in Medicaid.",
        "enum": [
          "Y"
        ],
        "type": "string"
      },
      "EpsdtReferral": {
        "description": "Required on Early & Periodic Screening, Diagnosis, and Treatment (EPSDT) claims when the screening service is being billed in this claim.",
        "properties": {
          "certificationConditionCodeAppliesIndicator": {
            "$ref": "#/components/schemas/CertificationConditionCodeAppliesIndicator"
          },
          "conditionCodes": {
            "description": "Code indicating the patient's status. Set to `AV` when the patient refused the referral. Set to `NU` when you set `certificationConditionCodeAppliesIndicator` to `N`. Set to `S2` when the patient is currently under treatment for the referred diagnostic or corrective health problem. Set to `ST` when _either_ the patient is referred to another provider for diagnostic or corrective treatment for at least one health problem identified during an initial or periodic screening service (not including dental referrals) _or_ the patient is scheduled for another appointment with the screening provider for diagnostic or corrective treatment for at least one health problem identified during an initial or periodic screening service (not including dental referrals).",
            "items": {
              "$ref": "#/components/schemas/EpsdtReferralConditionCodesItem"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "certificationConditionCodeAppliesIndicator",
          "conditionCodes"
        ],
        "type": "object"
      },
      "EpsdtReferralConditionCodesItem": {
        "enum": [
          "AV",
          "NU",
          "S2",
          "ST"
        ],
        "type": "string"
      },
      "ErrorDetail": {
        "properties": {
          "code": {
            "description": "The error code.",
            "type": "string"
          },
          "description": {
            "description": "The description of the error code.",
            "type": "string"
          },
          "field": {
            "description": "The attribute that caused the error.",
            "type": "string"
          },
          "followupAction": {
            "description": "Follow-up actions to correct the error.",
            "type": "string"
          },
          "location": {
            "description": "Where the error occurred within the request syntax. If this is a network or system error, there is no location attribute.",
            "type": "string"
          },
          "value": {
            "description": "The value that caused the error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "type": "array"
          },
          "transactionIdentifier": {
            "$ref": "#/components/schemas/TransactionIdentifier"
          }
        },
        "type": "object"
      },
      "ExportPDF400ErrorResponseContent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MissingParameter"
          },
          {
            "$ref": "#/components/schemas/ValidationException"
          }
        ]
      },
      "ExportPDF403ErrorResponseContent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MaximumResponseSizeExceeded"
          },
          {
            "$ref": "#/components/schemas/AccessDeniedException"
          }
        ]
      },
      "ExportPDF404ErrorResponseContent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/NoTransactionsFound"
          },
          {
            "$ref": "#/components/schemas/ResourceNotFoundException"
          }
        ]
      },
      "ExportPDFResponseContent": {
        "properties": {
          "errors": {
            "description": "Errors that prevented Stedi from returning one or more PDFs for the specified `businessId`. This array may be empty if there were no errors.",
            "items": {
              "$ref": "#/components/schemas/PDFError"
            },
            "type": "array"
          },
          "pdfs": {
            "description": "Data for PDF files Stedi generated for the specified `businessId`. This array may be empty if there are no PDFs available for the specified `businessId`. It may also contain multiple PDFs if there is more than one claim with the same `businessId` value.",
            "items": {
              "$ref": "#/components/schemas/PDFData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExternalCauseOfInjury": {
        "properties": {
          "externalCauseOfInjury": {
            "description": "The external cause of injury code(s) for the patient. These must be valid codes from the appropriate coding system. **Do not** submit the decimal for ICD codes; the decimal is implied.",
            "maxLength": 30,
            "type": "string"
          },
          "presentOnAdmissionIndicator": {
            "$ref": "#/components/schemas/ExternalCauseOfInjuryPresentOnAdmissionIndicator"
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/ExternalCauseOfInjuryQualifierCode"
          }
        },
        "required": [
          "externalCauseOfInjury",
          "qualifierCode"
        ],
        "type": "object"
      },
      "ExternalCauseOfInjuryPresentOnAdmissionIndicator": {
        "description": "Indicates whether the external cause of injury was present on admission. Can be set to `N` - No (onset did NOT occur prior to admission to the hospital), `Y` - Yes (onset occurred prior to admission to the hospital), `U` - Unknown, or `W` - Not Applicable.",
        "enum": [
          "N",
          "U",
          "Y",
          "W"
        ],
        "type": "string"
      },
      "ExternalCauseOfInjuryQualifierCode": {
        "description": "Code identifying the type of external cause of injury code used. Can be set to `ABN` - International Classification of Diseases Clinical Modification External Cause of Injury Code or `BN` - International Classification of Diseases Clinical Modification External Cause of Injury Code. Note that ICD-9 is deprecated and cannot be used in new claims.",
        "enum": [
          "ABN",
          "BN"
        ],
        "type": "string"
      },
      "Failure": {
        "description": "Currently not used.",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FamilyPlanningIndicator": {
        "description": "Code indicating whether the service was related to family planning. Can be set to `Y` - Yes.",
        "enum": [
          "Y"
        ],
        "type": "string"
      },
      "FormIdentification": {
        "description": "Use this object to attach standardized supplemental information to the claim when required by the payer. One example is payer documentation requirements for home health services.",
        "properties": {
          "formIdentifier": {
            "description": "A code from the industry code list you identified in `formTypeCode`.",
            "type": "string"
          },
          "formTypeCode": {
            "$ref": "#/components/schemas/FormTypeCode"
          },
          "supportingDocumentation": {
            "description": "Use to provide information in response to a coded questionnaire document.",
            "items": {
              "$ref": "#/components/schemas/SupportingDocumentation"
            },
            "maxItems": 99,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "formIdentifier",
          "formTypeCode"
        ],
        "type": "object"
      },
      "FormTypeCode": {
        "description": "Code indicating the type of form. Can be set to `AS` - Form Type Code or `UT` - Centers for Medicare and Medicaid Services (CMS) Durable Medical Equipment Regional Carrier (DMERC) Certificate of Medical Necessity (CMN) Forms. Set this to `AS` when you plan to include a home health form in the `formIdentifier` property.",
        "enum": [
          "AS",
          "UT"
        ],
        "type": "string"
      },
      "FrequencyCode": {
        "description": "Code indicating the frequency at which the rental equipment is billed. Can be set to `1` - weekly, `4` - monthly, or `6` - daily.",
        "enum": [
          "1",
          "4",
          "6"
        ],
        "type": "string"
      },
      "GatewayTimeoutExceptionResponseContent": {
        "description": "The server response for a gateway timeout error.",
        "properties": {
          "code": {
            "description": "Classification of the exception type.",
            "type": "string"
          },
          "message": {
            "description": "Human readable exception message.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "Gender": {
        "enum": [
          "M",
          "F"
        ],
        "type": "string"
      },
      "GenderWithUnknown": {
        "enum": [
          "M",
          "F",
          "U"
        ],
        "type": "string"
      },
      "GetInsuranceDiscoveryCheckResponseContent": {
        "properties": {
          "coveragesFound": {
            "description": "The number of potential coverage matches for the patient. This will be `0` if Stedi didn't find any matching coverage.",
            "type": "number"
          },
          "discoveryId": {
            "description": "A unique ID for this insurance discovery check. You can use it to retrieve the results asynchronously through the [Insurance Discovery Check Results](https://www.stedi.com/docs/api-reference/healthcare/get-insurance-discovery-results) endpoint.",
            "type": "string"
          },
          "errors": {
            "description": "When a payer rejects your eligibility check, the response contains one or more [`AAA` errors](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) that specify the reasons for the rejection and any recommended follow-up actions.\n\nAny errors that occur at the `payer`, `provider`, `subscriber`, or `dependents` levels are also included in this array, allowing you to review all errors in a central location. If there are no `AAA` errors, this array will be empty.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "items": {
            "description": "An array of potential coverage matches for the patient. This will only be populated if the insurance discovery check `status` is `COMPLETE`. Each item in the array contains information about a potential match, including the provider, subscriber, payer, and plan information.",
            "items": {
              "$ref": "#/components/schemas/InsuranceDiscoveryResponseFields"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/InsuranceDiscoveryMetadata"
          },
          "status": {
            "$ref": "#/components/schemas/DiscoveryStatus",
            "description": "The status of the discovery check. This is either `PENDING` or `COMPLETE`.\n    - If the status is `COMPLETE`, the `items` array will contain any potential coverage matches Stedi found for the patient.\n    - If the status is `PENDING`, the check is still in progress. You can immediately begin polling the [Insurance Discovery Check Results](https://www.stedi.com/docs/api-reference/healthcare/get-insurance-discovery-results) endpoint to retrieve the results asynchronously."
          }
        },
        "type": "object"
      },
      "GetPDF1500OutputPayload": {
        "contentEncoding": "byte",
        "description": "A base64 encoded string of the CMS-1500 Claim Form PDF. To render the PDF, you must decode the base64 string and save it to a file with a `.pdf` extension.",
        "type": "string"
      },
      "GetPayerRecordResponseContent": {
        "properties": {
          "payer": {
            "$ref": "#/components/schemas/PayerRecord",
            "description": "The payer record matching the provided Stedi payer ID. The record includes the payer's display name and aliases as well as supported transaction types and details about the payer's [transaction enrollment](https://www.stedi.com/docs/healthcare/transaction-enrollment) process."
          }
        },
        "required": [
          "payer"
        ],
        "type": "object"
      },
      "GovernmentServiceAffiliationCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "Q",
          "R",
          "S",
          "U",
          "W"
        ],
        "type": "string"
      },
      "HealthCareCheckRemarkCodes": {
        "description": "Standard codes used to communicate informational remarks.",
        "properties": {
          "codeListQualifierCode": {
            "description": "Code identifying the specific industry code list containing the `remarkCode`. Can be `HE` - Claim Payment Remark Codes or `RX` - National Council for Prescription Drug Programs Reject/Payment Codes.",
            "type": "string"
          },
          "codeListQualifierCodeValue": {
            "description": "The description of the `codeListQualifierCode`. Can be `Claim Payment Remark Codes` or `National Council for Prescription Drug Programs Reject/Payment Codes`.",
            "type": "string"
          },
          "remark": {
            "description": "The human readable description of the remark code.",
            "type": "string"
          },
          "remarkCode": {
            "description": "The code identifying the specific remark.\n\nThis property can either be a [Remittance Advice Remark Code (RARC)](https://x12.org/codes/remittance-advice-remark-codes) (`codeListQualifierCode` set to `HE`) or a National Council for Prescription Drug Programs Reject/Payment Code (`codeListQualifierCode` set to `RX`).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HealthCareClaimStatusCategoryCode": {
        "description": "Code indicating the status category of the `statusCode` property. Visit [277CA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-status-category-code) for a complete list.",
        "enum": [
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "DR01",
          "DR02",
          "DR03",
          "DR04",
          "DR05",
          "DR06",
          "DR07",
          "DR08",
          "P0",
          "P1",
          "P2",
          "P3",
          "P4",
          "P5",
          "F0",
          "F1",
          "F2",
          "F3",
          "F3F",
          "F3N",
          "F4",
          "R0",
          "R1",
          "R3",
          "R4",
          "R5",
          "R6",
          "R7",
          "R8",
          "R9",
          "R10",
          "R11",
          "R12",
          "R13",
          "R14",
          "R15",
          "R16",
          "R17",
          "E0",
          "E1",
          "E2",
          "E3",
          "E4",
          "D0"
        ],
        "type": "string"
      },
      "HealthCareClaimStatusCode": {
        "enum": [
          "0",
          "1",
          "2",
          "3",
          "6",
          "12",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "23",
          "24",
          "25",
          "26",
          "27",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "37",
          "38",
          "39",
          "40",
          "41",
          "42",
          "44",
          "45",
          "46",
          "47",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "59",
          "60",
          "61",
          "64",
          "65",
          "66",
          "72",
          "73",
          "78",
          "81",
          "83",
          "84",
          "85",
          "86",
          "88",
          "89",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "100",
          "101",
          "102",
          "103",
          "104",
          "105",
          "106",
          "107",
          "109",
          "110",
          "111",
          "114",
          "116",
          "117",
          "121",
          "123",
          "124",
          "125",
          "126",
          "127",
          "128",
          "129",
          "130",
          "131",
          "132",
          "133",
          "134",
          "135",
          "136",
          "137",
          "138",
          "139",
          "140",
          "141",
          "142",
          "143",
          "144",
          "145",
          "146",
          "147",
          "148",
          "149",
          "150",
          "152",
          "153",
          "154",
          "155",
          "156",
          "157",
          "158",
          "159",
          "160",
          "161",
          "162",
          "163",
          "164",
          "165",
          "166",
          "167",
          "168",
          "170",
          "171",
          "172",
          "173",
          "174",
          "175",
          "176",
          "177",
          "178",
          "179",
          "180",
          "181",
          "182",
          "183",
          "184",
          "185",
          "186",
          "187",
          "188",
          "189",
          "190",
          "191",
          "192",
          "193",
          "194",
          "195",
          "196",
          "197",
          "198",
          "199",
          "200",
          "201",
          "202",
          "203",
          "204",
          "205",
          "206",
          "207",
          "208",
          "209",
          "210",
          "211",
          "212",
          "213",
          "214",
          "215",
          "216",
          "217",
          "218",
          "219",
          "222",
          "223",
          "224",
          "225",
          "226",
          "227",
          "228",
          "229",
          "230",
          "231",
          "232",
          "233",
          "234",
          "235",
          "236",
          "237",
          "238",
          "239",
          "240",
          "241",
          "242",
          "243",
          "244",
          "245",
          "246",
          "247",
          "249",
          "250",
          "251",
          "252",
          "254",
          "255",
          "256",
          "257",
          "258",
          "259",
          "260",
          "261",
          "262",
          "263",
          "264",
          "265",
          "266",
          "267",
          "268",
          "269",
          "270",
          "271",
          "272",
          "273",
          "274",
          "275",
          "276",
          "277",
          "279",
          "281",
          "282",
          "283",
          "284",
          "286",
          "287",
          "288",
          "290",
          "291",
          "292",
          "293",
          "294",
          "295",
          "296",
          "297",
          "298",
          "299",
          "300",
          "301",
          "305",
          "306",
          "307",
          "308",
          "310",
          "311",
          "312",
          "313",
          "314",
          "315",
          "316",
          "318",
          "319",
          "320",
          "322",
          "323",
          "324",
          "325",
          "326",
          "327",
          "329",
          "330",
          "331",
          "333",
          "334",
          "335",
          "336",
          "337",
          "339",
          "340",
          "341",
          "342",
          "343",
          "344",
          "345",
          "346",
          "352",
          "353",
          "354",
          "360",
          "363",
          "364",
          "365",
          "366",
          "374",
          "375",
          "380",
          "382",
          "383",
          "384",
          "385",
          "386",
          "387",
          "388",
          "389",
          "390",
          "391",
          "394",
          "395",
          "396",
          "397",
          "398",
          "400",
          "401",
          "402",
          "403",
          "406",
          "407",
          "408",
          "409",
          "414",
          "417",
          "419",
          "420",
          "428",
          "430",
          "431",
          "432",
          "433",
          "434",
          "435",
          "441",
          "442",
          "443",
          "449",
          "450",
          "451",
          "452",
          "453",
          "454",
          "455",
          "456",
          "457",
          "458",
          "459",
          "460",
          "464",
          "465",
          "466",
          "467",
          "468",
          "469",
          "470",
          "471",
          "472",
          "473",
          "474",
          "475",
          "476",
          "477",
          "478",
          "479",
          "480",
          "481",
          "483",
          "484",
          "485",
          "486",
          "487",
          "488",
          "489",
          "490",
          "491",
          "492",
          "493",
          "494",
          "495",
          "496",
          "497",
          "498",
          "499",
          "500",
          "501",
          "502",
          "503",
          "504",
          "505",
          "506",
          "507",
          "508",
          "509",
          "510",
          "511",
          "512",
          "513",
          "514",
          "515",
          "516",
          "517",
          "518",
          "519",
          "520",
          "521",
          "522",
          "523",
          "524",
          "525",
          "526",
          "527",
          "528",
          "529",
          "530",
          "531",
          "532",
          "533",
          "534",
          "535",
          "536",
          "537",
          "538",
          "539",
          "540",
          "541",
          "542",
          "543",
          "544",
          "545",
          "546",
          "547",
          "548",
          "549",
          "550",
          "551",
          "552",
          "553",
          "554",
          "555",
          "556",
          "557",
          "558",
          "559",
          "560",
          "561",
          "562",
          "563",
          "564",
          "565",
          "566",
          "567",
          "568",
          "569",
          "571",
          "572",
          "573",
          "574",
          "575",
          "576",
          "577",
          "578",
          "579",
          "580",
          "581",
          "582",
          "583",
          "584",
          "585",
          "586",
          "587",
          "588",
          "589",
          "590",
          "591",
          "592",
          "593",
          "594",
          "595",
          "596",
          "597",
          "598",
          "599",
          "600",
          "601",
          "602",
          "603",
          "604",
          "605",
          "606",
          "607",
          "608",
          "609",
          "610",
          "611",
          "612",
          "613",
          "614",
          "615",
          "616",
          "617",
          "618",
          "619",
          "620",
          "621",
          "622",
          "623",
          "624",
          "625",
          "626",
          "627",
          "628",
          "629",
          "630",
          "631",
          "632",
          "633",
          "634",
          "635",
          "636",
          "637",
          "638",
          "639",
          "640",
          "642",
          "643",
          "644",
          "645",
          "646",
          "647",
          "648",
          "649",
          "650",
          "651",
          "652",
          "653",
          "654",
          "655",
          "656",
          "657",
          "658",
          "659",
          "660",
          "661",
          "662",
          "663",
          "664",
          "665",
          "666",
          "667",
          "668",
          "669",
          "670",
          "671",
          "672",
          "673",
          "674",
          "675",
          "676",
          "677",
          "678",
          "679",
          "680",
          "681",
          "682",
          "683",
          "684",
          "685",
          "686",
          "687",
          "688",
          "689",
          "690",
          "691",
          "692",
          "693",
          "694",
          "695",
          "696",
          "697",
          "698",
          "699",
          "700",
          "701",
          "702",
          "703",
          "704",
          "705",
          "706",
          "707",
          "708",
          "709",
          "710",
          "711",
          "712",
          "713",
          "714",
          "715",
          "716",
          "717",
          "718",
          "719",
          "720",
          "721",
          "722",
          "723",
          "724",
          "725",
          "726",
          "727",
          "728",
          "729",
          "730",
          "731",
          "732",
          "733",
          "734",
          "735",
          "736",
          "737",
          "738",
          "739",
          "740",
          "741",
          "742",
          "743",
          "744",
          "745",
          "746",
          "747",
          "748",
          "749",
          "750",
          "751",
          "752",
          "753",
          "754",
          "755",
          "756",
          "757",
          "758",
          "759",
          "760",
          "761",
          "762",
          "763",
          "764",
          "765",
          "766",
          "767",
          "768",
          "769",
          "770",
          "771",
          "772",
          "773",
          "774",
          "775",
          "776",
          "777",
          "778",
          "779",
          "780",
          "781",
          "782",
          "783",
          "784",
          "785",
          "786",
          "787",
          "788",
          "789",
          "790",
          "791",
          "792",
          "793",
          "794",
          "795",
          "796",
          "798",
          "799",
          "800",
          "801",
          "802",
          "803"
        ],
        "type": "string"
      },
      "HealthCareDiagnosisCode": {
        "description": "Information about the patient's healthcare diagnosis.",
        "properties": {
          "diagnosisCode": {
            "description": "The diagnosis code. The decimal points are omitted in diagnosis codes - the decimal point is assumed.",
            "type": "string"
          },
          "diagnosisTypeCode": {
            "description": "The type of diagnosis code provided. It can be `ABK` - International Classification of Diseases Clinical Modification (ICD-10-CM) Principal Diagnosis or `BK` - International Classification of Diseases Clinical Modification (ICD-9-CM) Principal Diagnosis.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HealthCareInformation": {
        "properties": {
          "diagnosisCode": {
            "description": "The diagnosis code. Omit the decimal points in diagnosis codes - the decimal point is assumed.",
            "maxLength": 30,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "diagnosisTypeCode": {
            "$ref": "#/components/schemas/DiagnosisTypeCode"
          }
        },
        "required": [
          "diagnosisCode",
          "diagnosisTypeCode"
        ],
        "type": "object"
      },
      "HealthCarePolicyIdentification": {
        "description": "Included when the payer adjusted the payment in accordance with a published healthcare policy code list.",
        "properties": {
          "policyFormIdentifyingNumber": {
            "description": "The identifying number for the policy form.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpStatusCode": {
        "description": "A `200` response indicates that Stedi successfully generated the X12 EDI claim format required by the payer. It does not indicate whether the payer has accepted the claim - the payer will respond later with a 277CA containing this information. [Learn more about 277CAs](https://www.stedi.com/docs/healthcare/receive-claim-responses#response-types). A `400` response indicates one or more problems with the claim data in the request. Examples include missing required fields, invalid values, or incorrect data types. The response includes a message describing the problem.",
        "enum": [
          "200 OK",
          "400 BAD_REQUEST"
        ],
        "type": "string"
      },
      "InPlanNetworkIndicatorCode": {
        "description": "Code indicating whether the benefit is in-network or out-of-network. Can be `Y` - Yes, `N` - No, `U` - Unknown, or `W` - Not Applicable\n\n Code `U` indicates that it is unknown whether the benefits are in or out-of-network. Code `W` indicates that the benefit applies to both in and out-of-network providers. \n \n Note that this property **doesn't indicate** whether the provider is in or out-of-network for the patient. To determine that, you must check with the payer directly.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Y",
          "N",
          "U",
          "W"
        ],
        "type": "string"
      },
      "InPlanNetworkIndicatorName": {
        "description": "The name of the in-plan network indicator code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Yes",
          "No",
          "Unknown",
          "Not Applicable"
        ],
        "type": "string"
      },
      "IndividualRelationshipCode": {
        "description": "The dependent's relationship to the subscriber. You can set this to `01` - Spouse, `19` - Child, `34` - Other Adult.",
        "enum": [
          "01",
          "19",
          "34"
        ],
        "type": "string"
      },
      "IndustryCode": {
        "description": "The type of facility where the service was provided. You can set this to one of the [place of service codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets).",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "31",
          "32",
          "33",
          "34",
          "41",
          "42",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "65",
          "71",
          "72",
          "81",
          "99"
        ],
        "type": "string"
      },
      "InfallibleStateOrProvinceCode": {
        "description": "The US state or Canadian province code with unknown option. For example, `TN` for Tennessee or `NB` for New Brunswick.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "NL",
          "PE",
          "NS",
          "NB",
          "QC",
          "ON",
          "MB",
          "SK",
          "AB",
          "BC",
          "YT",
          "NT",
          "NU",
          "DC",
          "AS",
          "GU",
          "MP",
          "PR",
          "UM",
          "VI",
          "AK",
          "AL",
          "AR",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DE",
          "FL",
          "GA",
          "HI",
          "IA",
          "ID",
          "IL",
          "IN",
          "KS",
          "KY",
          "LA",
          "MA",
          "MD",
          "ME",
          "MI",
          "MN",
          "MO",
          "MS",
          "MT",
          "NC",
          "ND",
          "NE",
          "NH",
          "NJ",
          "NM",
          "NV",
          "NY",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VA",
          "VT",
          "WA",
          "WI",
          "WV",
          "WY"
        ],
        "type": "string"
      },
      "InformationClaimStatus": {
        "properties": {
          "adjudicatedFinalizedDate": {
            "description": "This is the date of denial or approval for the claim. This date may or may not be the same as the issue date of the check, EFT, or non-payment remittance. Some payers can provide this date before they issue the remittance.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "claimPaymentAmount": {
            "description": "The total amount of the claim payment, expressed as a decimal. This may be zero if no payment is being made. Some payers can provide the adjudicated payment amount before they issue the remittance.",
            "type": "string"
          },
          "informationStatuses": {
            "items": {
              "$ref": "#/components/schemas/ClaimLevelStatus"
            },
            "type": "array"
          },
          "remittanceDate": {
            "description": "This is the check issue or EFT funds available date. This could be a non-payment remittance date, if available.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "remittanceTraceNumber": {
            "description": "This is the check or EFT Trace Number. This could also be a non-payment remittance advice Trace Number (835 or paper), if available.",
            "type": "string"
          },
          "statusInformationEffectiveDate": {
            "description": "The effective date of the status information.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "statusMessage": {
            "description": "Additional free-form information about the claim status.",
            "type": "string"
          },
          "totalClaimChargeAmount": {
            "description": "The total amount of charges in the original claim, expressed as a decimal. This may differ from the total charges submitted due to claims processing instructions, such as claim splitting. Note that some HMO encounters supply zero as the amount of original charges.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InformationReceiverName": {
        "deprecated": true,
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "deprecated": true
          },
          "contactNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "devicePinNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facilityIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facilityNetworkIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "federalTaxpayerIdentificationNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "informationReceiverAdditionalIdentifierState": {
            "deprecated": true,
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "medicaidProviderNumber": {
            "deprecated": true,
            "description": "The provider's Medicaid provider number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicareProviderNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "nationalProviderIdentifier": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "priorIdentifierNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "providerPlanNetworkIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "socialSecurityNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "stateLicenceNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "submitterIdNumber": {
            "deprecated": true,
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "InformationStatusCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "A",
          "C",
          "L",
          "O",
          "P",
          "S",
          "T"
        ],
        "type": "string"
      },
      "InjuryCodeCategory": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "44"
        ],
        "type": "string"
      },
      "InstitutionalAddress": {
        "properties": {
          "address1": {
            "description": "The first line of the street address. This typically contains the building number and street name.",
            "maxLength": 55,
            "type": "string"
          },
          "address2": {
            "description": "The second line of the street address. This typically contains the apartment or suite number.",
            "maxLength": 55,
            "type": "string"
          },
          "city": {
            "description": "The city name.",
            "maxLength": 30,
            "type": "string"
          },
          "countryCode": {
            "description": "Use the alpha-2 country codes from Part 1 of ISO 3166.",
            "maxLength": 3,
            "minLength": 2,
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "Use the country subdivision codes from Part 2 of ISO 3166.",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "description": "The postal zone or zip code. Exclude punctuation and spaces.",
            "maxLength": 15,
            "minLength": 3,
            "type": "string"
          },
          "state": {
            "description": "The state or province code. Only required when the city is in the Unites States and Canada.",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "address1",
          "city"
        ],
        "type": "object"
      },
      "InstitutionalAdjustmentGroupCode": {
        "description": "Code identifying the general category of payment adjustment. Can be set to `CO` - Contractual Obligations, `CR` - Correction and Reversals, `OA` - Other adjustments, `PI` - Payor Initiated Reductions, or `PR` - Patient Responsibility.",
        "enum": [
          "CO",
          "CR",
          "OA",
          "PI",
          "PR"
        ],
        "type": "string"
      },
      "InstitutionalBilling": {
        "description": "Information about the billing provider.\n- You **must** include either the provider's Social Security Number (SSN) or their Employer Identification Number (EIN), but not both.\n- The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) is **required**, if one is assigned.\n- You must also supply the provider's `organizationName`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The provider's address. \n\n For United States addresses, you **must** include the full nine-digit zip code with no separators, such as `100031502`. If you don't know the full zip code, you can find it using the [USPS ZIP Code Lookup](https://tools.usps.com/zip-code-lookup.htm) tool."
          },
          "commercialNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "description": "The provider's contact information.You must include at least one communication method (phone, fax, or email) in this object."
          },
          "employerId": {
            "description": "The provider's employer ID, also known as an EIN or TIN. Must be a string of exactly nine numbers with no separators.",
            "maxLength": 50,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The organization [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/BillingProviderType",
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility."
          },
          "providerUpinNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/OperatingPhysicianIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in `secondaryIdentifierQualifierCode`.\n\nYou can only include one secondary identifier for the provider.",
            "maxLength": 50,
            "type": "string"
          },
          "stateLicenseNumber": {
            "deprecated": true,
            "type": "string"
          },
          "suffix": {
            "description": "The provider's suffix, such as Jr. or Sr.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "description": "The provider's [taxnonomy code](https://www.cms.gov/medicare/enrollment-renewal/providers-suppliers/health-care-taxonomy), a unique 10-character code that designates their classification and specialization.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "address",
          "employerId",
          "npi"
        ],
        "type": "object"
      },
      "InstitutionalClaimAdjustment": {
        "properties": {
          "adjustmentGroupCode": {
            "$ref": "#/components/schemas/InstitutionalAdjustmentGroupCode"
          },
          "claimAdjustmentDetails": {
            "description": "The adjustment reason, amount, and quantity. You can include up to six of these objects to describe a single `adjustmentGroupCode`.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalClaimAdjustmentDetails"
            },
            "maxItems": 6,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "adjustmentGroupCode"
        ],
        "type": "object"
      },
      "InstitutionalClaimAdjustmentDetails": {
        "properties": {
          "adjustmentAmount": {
            "description": "The dollar amount of the adjustment, expressed as a decimal.",
            "type": "string"
          },
          "adjustmentQuantity": {
            "description": "The units of service being adjusted, expressed as a decimal.",
            "type": "string"
          },
          "adjustmentReasonCode": {
            "description": "Code identifying the detailed reason the adjustment was made. Visit the X12 [Claim Adjustment Reason Codes](https://x12.org/codes/claim-adjustment-reason-codes) for a complete list.",
            "type": "string"
          }
        },
        "required": [
          "adjustmentAmount",
          "adjustmentReasonCode"
        ],
        "type": "object"
      },
      "InstitutionalClaimDateInformation": {
        "description": "Dates and times related to the claim. For example, when the patient was discharged from the hospital.",
        "properties": {
          "admissionDateAndHour": {
            "description": "When the patient was admitted to the hospital or facility. This property is **required** on inpatient claims. Can be expressed as a date and time (YYYYMMDDHHMM) or a single date (YYYYMMDD).",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])[0-5]\\d$|^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dischargeHour": {
            "description": "The time the patient was discharged from the hospital or facility. This property is **required** on final inpatient claims. Can be expressed as a time in format HHMM.",
            "pattern": "^([01]\\d|2[0-3])[0-5]\\d$",
            "type": "string"
          },
          "repricerReceivedDate": {
            "description": "The date the repricer received the claim. Required when a repricer is passing the claim onto the payer.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "statementBeginDate": {
            "description": "The beginning date of the statement.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "statementEndDate": {
            "description": "The ending date of the statement.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "required": [
          "statementBeginDate",
          "statementEndDate"
        ],
        "type": "object"
      },
      "InstitutionalClaimFilingIndicatorCode": {
        "enum": [
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "AM",
          "BL",
          "CH",
          "DS",
          "FI",
          "HM",
          "LM",
          "MA",
          "MB",
          "MC",
          "OF",
          "TV",
          "VA",
          "WC",
          "ZZ"
        ],
        "type": "string"
      },
      "InstitutionalClaimIdentifier": {
        "description": "A code specifying the type of transaction. Defaults to `CH` if not provided.\n  - `31`: Only for use by state Medicaid agencies performing post payment recovery.\n  - `CH`: Use when the transaction contains only fee for service claims or claims with at least one chargeable line item. Also use when it's not clear whether a transaction contains claims or capitated encounters, or if the transaction contains a mix of claims and capitated encounters.\n  - `RP`: Use for capitated encounters. Also use when the transaction is being sent to an entity for purposes other than adjudication of a claim. For example, when you're sending the claim to a state health agency that is using the claim for health data reporting purposes.",
        "enum": [
          "31",
          "CH",
          "RP"
        ],
        "type": "string"
      },
      "InstitutionalClaimInformation": {
        "description": "Information about the healthcare claim. Note that the objects and properties marked as required are required for all claims, while others are conditionally required, depending on type of claim and claim circumstances. For example, you must always provide the `claimChargeAmount`, but you only need to provide the `otherSubscriberInformation` object in coordination of benefits scenarios. When you include a conditionally required object, you must provide all of its required properties.",
        "properties": {
          "admittingDiagnosis": {
            "$ref": "#/components/schemas/AdmittingDiagnosis",
            "description": "The diagnosis for which the patient sought medical care. This may be different from the principal diagnosis."
          },
          "benefitsAssignmentCertificationIndicator": {
            "$ref": "#/components/schemas/InstitutionalClaimInformationBenefitsAssignmentCertificationIndicator",
            "description": "A code indicating whether the patient or an authorized person has authorized the plan to remit payment directly to the provider. Use `W` when the patient refuses to assign benefits. Can be set to `N` - No (Payment should go to the patient), `Y` - Yes (Payment should go directly to the provider), or `W` - Not Applicable."
          },
          "billingNote": {
            "description": "To communicate special instructions regarding claim billing. Required when the provider judges the information is needed to substantiate the medical treatment and cannot be provided elsewhere in the request.",
            "maxLength": 80,
            "type": "string"
          },
          "claimChargeAmount": {
            "description": "The total dollar amount charged for the services on this claim, expressed as a decimal. For example, `100.50`. This is the total amount before any adjustments or payments. The amount must balance to the sum of the service line charges.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "claimCodeInformation": {
            "$ref": "#/components/schemas/ClaimCodeInformation"
          },
          "claimContractInformation": {
            "$ref": "#/components/schemas/ClaimContractInformation"
          },
          "claimDateInformation": {
            "$ref": "#/components/schemas/InstitutionalClaimDateInformation"
          },
          "claimFilingCode": {
            "$ref": "#/components/schemas/ClaimFilingCode"
          },
          "claimFrequencyCode": {
            "description": "Code specifying the frequency of the claim. Not all payers allow all codes. Can be set to `1` - Original claim submission, `2` - Interim – First Claim, `3` - Interim – Continuing Claim, `4` - Interim – Last Claim, `7` - Replacement, `8` - Void, and `9` - Final Claim for a Home Health PPS Episode.",
            "maxLength": 1,
            "type": "string"
          },
          "claimNotes": {
            "$ref": "#/components/schemas/ClaimNotes"
          },
          "claimPricingInformation": {
            "$ref": "#/components/schemas/ClaimPricingInformation",
            "description": "Specifies pricing or repricing information about a claim. Required when this information is deemed necessary by the repricer. For capitated encounters, pricing or repricing information is usually not applicable and is provided to qualify other information within the claim."
          },
          "claimSupplementalInformation": {
            "$ref": "#/components/schemas/InstitutionalClaimSupplementalInformation"
          },
          "conditionCodes": {
            "description": "Indicates the condition of the patient for EPSDT referral situations. Can be set to `AV` - Available-Not Used, `NU` - Not Used, `S2` - Under Treatment, `ST` - New Services Requested. Uset `AV` when the patient refused a referral. Use `S2` when the patient is currently under treatment for the referred diagnostic or corrective health problem. Use `ST` when the patient is referred to another provider for diagnostic or corrective treatment for at least one health problem identified during an initial or periodic screening service (not including dental referrals) OR the patient is scheduled for another appointment with the screening provider for diagnostic or corrective treatment for at least one health problem identified during an initial or periodic screening service (not including dental referrals).",
            "items": {
              "$ref": "#/components/schemas/ClaimInformationConditionCodesItem"
            },
            "maxItems": 12,
            "minItems": 1,
            "type": "array"
          },
          "conditionCodesList": {
            "description": "Required when there is a Condition Code that applies to this claim. \n\n This is an array of arrays of objects. You can provide up to two object arrays, and each array can contain up to 12 objects. Each object must have the following required property:\n    - `conditionCode`: The condition code.",
            "items": {
              "items": {
                "$ref": "#/components/schemas/InstitutionalConditionInformation"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "delayReasonCode": {
            "$ref": "#/components/schemas/InstitutionalDelayReasonCode"
          },
          "diagnosisRelatedGroupInformation": {
            "$ref": "#/components/schemas/DiagnosisRelatedGroupInformation",
            "description": "Diagnosis related group (DRG) code. Required when an inpatient hospital is under DRG contract with a payer and the contract requires the provider to identify the DRG to the payer."
          },
          "epsdtReferral": {
            "$ref": "#/components/schemas/EpsdtReferral"
          },
          "externalCauseOfInjuries": {
            "description": "Diagnosis codes to describe the patient's condition. Required when an external Cause of Injury is needed to describe an injury, poisoning, or adverse effect. \n\nNote that to fully describe an injury using ICD-10-CM, it will be necessary to report a series of 3 external cause of injury codes. Refer to the [ICD-10-CM Official Guidelines for Coding and Reporting](https://stacks.cdc.gov/view/cdc/158747).\n\nYou can provide up to 12 objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ExternalCauseOfInjury"
            },
            "maxItems": 12,
            "minItems": 1,
            "type": "array"
          },
          "fileInformation": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "occurrenceInformationList": {
            "description": "Required when there is a Occurrence Code that applies to this claim. This is an array of arrays of objects. You can provide up to two object arrays, and each array can contain up to 12 objects.\n\n Each object must contain the following properties:\n    - `occurrenceSpanCode`: The occurrence span code.\n    - `occurrenceSpanCodeDate`: A date or date range for the occurrence.",
            "items": {
              "items": {
                "$ref": "#/components/schemas/OccurrenceInformation"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "occurrenceSpanInformations": {
            "description": "Required when there is an Occurrence Span Code that applies to this claim. This is an array or arrays of objects. You can provide up to two object arrays and each array can contain up to 12 objects.\n\n Each object must contain the following properties:\n    - `occurrenceSpanCode`: The occurrence span code.\n    - `occurrenceSpanCodeStartDate`: The start date for the occurrence span.\n    - `occurrenceSpanCodeEndDate`: The end date for the occurrence span.",
            "items": {
              "items": {
                "$ref": "#/components/schemas/OccurrenceSpanInformation"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "otherDiagnosisInformationList": {
            "description": "Additional diagnosis codes relevant to the claim. Required when other condition(s) coexist or develop(s) subsequently during the patient's treatment. You can provide up to two codes in this array. \n\n**Do not** submit the decimal for ICD codes; the decimal is implied. \n\nAlso, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.\n\nThis is an array of arrays of objects. You can provide up to two object arrays, and each object array can contain up to 12 objects.\n\n Each object must contain the following required properties:\n    - `qualifierCode`: Identifies an industry code list. This can be set to `ABF`: International Classification of Diseases Clinical Modification (ICD-10-CM) Diagnosis or `BF`: International Classification of Diseases Clinical Modification (ICD-9-CM) Diagnosis. Note that ICD-9-CM codes are deprecated and shouldn't be used in new claim submissions.\n    - `otherDiagnosisCode`: The code from the code set specified in `qualifierCode`.\n\nEach object can contain the following additional property:\n    - `presentOnAdmissionIndicator`: A code indicating whether the condition was present on admission. You can set this to `N`: No, `Y`: Yes, `U`: Unknown, or `W`: Not Applicable.",
            "items": {
              "items": {
                "$ref": "#/components/schemas/OtherDiagnosisInformation"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "otherProcedureInformationList": {
            "description": "Required on inpatient claims when additional procedures must be reported. \n\nThis is an array of arrays of objects. You can provide up to two object arrays, and each array can contain up to 12 objects.\n\n Each object must contain the following required properties:\n    - `qualifierCode`: Identifies an industry code list. This can be set to `BBQ`: International Classification of Diseases Clinical Modification (ICD-10-PCS) Other Procedure Codes or `BQ`: International Classification of Diseases Clinical Modification (ICD-9-CM) Other Procedure Codes. Note that ICD-9-CM codes are deprecated and shouldn't be used in new claim submissions.\n    - `otherProcedureCode`: The code from the code set specified in `qualifierCode`.\n    - `otherProcedureDate`: A date expressed in YYYYMMDD format.",
            "items": {
              "items": {
                "$ref": "#/components/schemas/OtherProcedureInformation"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "otherSubscriberInformation": {
            "$ref": "#/components/schemas/InstitutionalOtherSubscriberInformation"
          },
          "patientAmountPaid": {
            "deprecated": true,
            "type": "string"
          },
          "patientControlNumber": {
            "description": "An identifier you assign to the claim. We **strongly recommend** submitting a unique value for this property so that you can use it to correlate this claim with responses from the payer, such as the 835 ERA.\n\nWe recommend using only alphanumeric characters and generating unique values that are the shortest possible length. Stedi accepts any valid value, but some payers replace non-alphanumeric characters and truncate shorter than the official 20-character limit. When this happens, the payer returns a different identifier in responses than the one you originally sent, making it more difficult to correlate the claim and perform real-time claim status checks.",
            "maxLength": 20,
            "type": "string"
          },
          "patientEstimatedAmountDue": {
            "description": "The total estimated amount the patient must pay for the services listed in this claim. Expressed as a decimal, such as `20.50`. This includes any co-payments, co-insurance, or other costs.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "patientReasonForVisits": {
            "description": "The diagnosis for which the patient visited an outpatient provider. Required when the claim involves outpatient visits. This may be different from the principal diagnosis. This is an array of objects and you can provide up to three objects.",
            "items": {
              "$ref": "#/components/schemas/PatientReasonForVisit"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "patientWeight": {
            "deprecated": true,
            "type": "string"
          },
          "placeOfServiceCode": {
            "description": "Code identifying the type of facility where the services were or may be performed. Visit [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list.",
            "maxLength": 2,
            "type": "string"
          },
          "planParticipationCode": {
            "$ref": "#/components/schemas/PlanParticipationCode"
          },
          "principalDiagnosis": {
            "$ref": "#/components/schemas/PrincipalDiagnosis",
            "description": "This is the diagnosis for the condition determined to be primarily responsible for admission of the patient into the health facility for care."
          },
          "principalProcedureInformation": {
            "$ref": "#/components/schemas/PrincipalProcedureInformation",
            "description": "The procedure code for the primary procedure performed on the patient. Required on inpatient claims when a procedure was performed."
          },
          "propertyCasualtyClaimNumber": {
            "description": "The agency claim number for this transaction. Used when services included in this claim are part of a property and casualty claim. This property is typically not used by Stedi customers.",
            "type": "string"
          },
          "releaseInformationCode": {
            "$ref": "#/components/schemas/ReleaseInformationCode"
          },
          "serviceFacilityLocation": {
            "$ref": "#/components/schemas/InstitutionalServiceFacilityLocation"
          },
          "serviceLines": {
            "description": "Information about one or more services rendered to the patient.\n      - Each service line must be a unique service event as defined by the payer's billing policies. This means that you can use the same procedure code on multiple service lines as long as they are distinct events.\n      - Some procedure codes are date-specific. In these cases, you may need to create a separate service line with that code for each applicable date of service, even if the episode of care extended over multiple days.\n      - Service lines can share the same dates of service if the patient received multiple services on the same day.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalServiceLine"
            },
            "minItems": 1,
            "type": "array"
          },
          "signatureIndicator": {
            "deprecated": true,
            "type": "string"
          },
          "treatmentCodeInformationList": {
            "description": "Required when Home Health Agencies need to report Plan of Treatment information under various payer contracts. This is an array of arrays of strings. You can provide up to two string arrays, and each array can contain up to 12 strings. Each string represents one treatment code.",
            "items": {
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "valueInformationList": {
            "description": "Required when there is a Value Code that applies to this claim. This is an array of arrays of objects. You can provide up to two object arrays, and each array can contain up to 12 objects.\n\n Each object must contain the following required properties:\n    - `valueCode`: The value code.\n    - `valueCodeAmount`: The monetary amount associated with the value code, expressed as a decimal.",
            "items": {
              "items": {
                "$ref": "#/components/schemas/ValueInformation"
              },
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "benefitsAssignmentCertificationIndicator",
          "claimChargeAmount",
          "claimCodeInformation",
          "claimDateInformation",
          "claimFilingCode",
          "claimFrequencyCode",
          "patientControlNumber",
          "placeOfServiceCode",
          "planParticipationCode",
          "principalDiagnosis",
          "releaseInformationCode",
          "serviceLines"
        ],
        "type": "object"
      },
      "InstitutionalClaimInformationBenefitsAssignmentCertificationIndicator": {
        "enum": [
          "N",
          "W",
          "Y"
        ],
        "type": "string"
      },
      "InstitutionalClaimReference": {
        "description": "Information about the claim.",
        "properties": {
          "claimType": {
            "description": "The type of claim, always `INST`.",
            "type": "string"
          },
          "correlationId": {
            "description": "An identifier Stedi assigns to the claim.",
            "type": "string"
          },
          "customerClaimNumber": {
            "description": "A tracking number that Stedi assigns to the claim.",
            "type": "string"
          },
          "formatVersion": {
            "description": "The X12 EDI version Stedi used to generate the claim for the payer. This is always `5010`.",
            "type": "string"
          },
          "patientControlNumber": {
            "description": "The `patientControlNumber` from the original request, if supplied. This is a unique identifier that you assign to the claim so you can track the claim and correlate it with responses from the payer.",
            "type": "string"
          },
          "rhClaimNumber": {
            "description": "A tracking number Stedi assigns to the claim. This is the same as the `correlationId`.",
            "type": "string"
          },
          "submitterId": {
            "description": "Stedi's ID for the entity that submitted the claim.",
            "type": "string"
          },
          "timeOfResponse": {
            "description": "A timestamp for Stedi's response to the claim submission.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalClaimSupplementalInformation": {
        "description": "Additional information or documentation required for the claim. This is where you can include information about [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments), if applicable.",
        "properties": {
          "adjustedRepricedClaimRefNumber": {
            "description": "The adjusted repriced claim reference number. Required when the repricer believes this information is necessary. Providers should not complete this property.",
            "maxLength": 50,
            "type": "string"
          },
          "autoAccidentState": {
            "description": "Required when the services reported on this claim are related to an auto accident and the accident occurred in a country or location that has a state, province, or sub-country code.",
            "maxLength": 50,
            "type": "string"
          },
          "claimControlNumber": {
            "description": "An identifier the payer previously assigned to the claim. Required when the `claimFrequencyCode` indicates this claim is a replacement or void to a previously adjudicated claim.",
            "maxLength": 50,
            "type": "string"
          },
          "claimNumber": {
            "deprecated": true,
            "description": "The identifier assigned by clearinghouse, van, etc. when they need to assign their own unique claim number.\n\nStedi overwrites this value when it sends the claim to the payer, so you shouldn't include this property in your request. We strongly recommend using the `claimInformation.patientControlNumber` property as your claim tracking ID.",
            "type": "string"
          },
          "demoProjectIdentifier": {
            "description": "Required when it is necessary to identify claims that are atypical in ways such as content, purpose, and/or payment. For example, claims made as the result of a demonstration or a clinical trial.",
            "maxLength": 50,
            "type": "string"
          },
          "investigationalDeviceExemptionNumber": {
            "description": "Required when claim involves a Food and Drug Administration (FDA) assigned investigational device exemption (IDE) number. When more than one IDE applies, you must split into separate claims.",
            "maxLength": 50,
            "type": "string"
          },
          "medicalRecordNumber": {
            "description": "Required when the provider needs to identify the actual medical record of the patient for this episode of care.",
            "maxLength": 50,
            "type": "string"
          },
          "peerReviewAuthorizationNumber": {
            "description": "Required when an external Peer Review Organization assigns an Approval Number to services deemed medically necessary by that organization.",
            "maxLength": 50,
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "Required when an authorization number is assigned by the payer or UMO and the services on this claim were preauthorized. The UMO (Utilization Management Organization) is generally the entity empowered to decide the outcome of a health services review or the owner of the information. This value applies to the entire claim unless overridden within a specific service line.",
            "maxLength": 50,
            "type": "string"
          },
          "referralNumber": {
            "description": "Required when a referral number is assigned by the payer or Utilization Management Organization (UMO) and a referral is involved. This value applies to the entire claim unless overridden within a specific service line.",
            "maxLength": 50,
            "type": "string"
          },
          "reportInformation": {
            "$ref": "#/components/schemas/InstitutionalReportInformation",
            "description": "Required when you plan to submit an [attachment](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the claim electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify additional information that is being held at the provider's office and is available upon request.\n\nUse this object when there is a single attachment for the claim. If there are multiple attachments, use the `reportInformations` array instead."
          },
          "reportInformations": {
            "description": "An array of report information for the claim. Use this when you need to submit multiple report information records. You can submit up to 10 objects in this array.\n\nRequired when you plan to submit [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the claim electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify that they have additional information at their office that is available upon request.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReportInformation"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "repricedClaimNumber": {
            "description": "Required when the repricer believes this information is necessary. Providers should not complete this property.",
            "maxLength": 50,
            "type": "string"
          },
          "serviceAuthorizationExceptionCode": {
            "$ref": "#/components/schemas/InstitutionalServiceAuthorizationExceptionCode"
          }
        },
        "type": "object"
      },
      "InstitutionalClaimsExceptionCode": {
        "description": "Code specifying the exception reason for consideration of out-of-network health care services. Can be set to `1` - Non-Network Professional Provider in Network Hospital, `2` - Emergency Care, `3` - Services or Specialist not in Network, `4` - Out-of-Service Area, `5` - State Mandates, or `6` - Other.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "type": "string"
      },
      "InstitutionalClaimsRawX12SubmissionRequestContent": {
        "properties": {
          "x12": {
            "type": "string"
          }
        },
        "required": [
          "x12"
        ],
        "type": "object"
      },
      "InstitutionalClaimsRawX12SubmissionResponseContent": {
        "properties": {
          "claimReference": {
            "$ref": "#/components/schemas/ClaimReference"
          },
          "controlNumber": {
            "description": "An identifier for the transaction.",
            "type": "string"
          },
          "editResponses": {
            "description": "Currently not used.",
            "items": {
              "$ref": "#/components/schemas/EditResponse"
            },
            "type": "array"
          },
          "editStatus": {
            "description": "Currently not used.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors. Currently not used.",
            "items": {
              "$ref": "#/components/schemas/ClaimsError"
            },
            "type": "array"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/ClaimsPayer"
          },
          "status": {
            "description": "The status of the claim submission.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "warnings": {
            "description": "A list of warnings.",
            "items": {
              "$ref": "#/components/schemas/ClaimsWarning"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstitutionalClaimsSubmissionRequestContent": {
        "properties": {
          "attending": {
            "$ref": "#/components/schemas/Attending"
          },
          "billing": {
            "$ref": "#/components/schemas/InstitutionalBilling"
          },
          "billingPayToAddressName": {
            "$ref": "#/components/schemas/PayToAddressName"
          },
          "billingPayToPlanName": {
            "$ref": "#/components/schemas/PayToPlanName"
          },
          "claimIdentifier": {
            "$ref": "#/components/schemas/InstitutionalClaimIdentifier"
          },
          "claimInformation": {
            "$ref": "#/components/schemas/InstitutionalClaimInformation"
          },
          "controlNumber": {
            "description": "Not currently used.",
            "maxLength": 9,
            "minLength": 9,
            "pattern": "^\\d+$",
            "type": "string"
          },
          "dependent": {
            "$ref": "#/components/schemas/InstitutionalDependent",
            "description": "Dependent who received the medical care associated with the claim. When the dependent has their own member ID for the health plan, you should include the dependent's information in the `subscriber` object instead. To check whether a dependent has a member ID, submit an [Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) to the payer. The payer returns the dependent's member ID in the `dependents.memberId` property in the response, if present."
          },
          "operatingPhysician": {
            "$ref": "#/components/schemas/OperatingPhysician",
            "description": "Information about the individual with primary responsibility for performing the surgical procedure(s) listed in the claim. Required when a surgical procedure code is listed on the claim. Use this object for operating physicians that apply to the entire claim.\n\nThis should be an individual, not an organization, and you should supply at least the physician's `lastName` and an identifier, which is typically the `npi`."
          },
          "otherOperatingPhysician": {
            "$ref": "#/components/schemas/OperatingPhysician",
            "description": "Information about any other operating physician involved in the surgical procedures listed in the claim. Required when another operating physician is involved in the surgical procedures listed in the claim. Use this object for physicians that apply to the entire claim.\n\nThis should be an individual, not an organization, and you should supply at least the physician's `lastName` and an identifier, which is typically the `npi`."
          },
          "payerAddress": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "Address information for the entity responsible for payment of the claim, listed in the `receiver` object."
          },
          "providers": {
            "description": "Another way to send information for each provider relevant to the claim. This object overwrites the information you send in the `billing`, `referring`, `rendering`, and `attending` objects. Note that your request **must** include information about the billing provider either here or within the `billing` object.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalProvidersObject"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "receiver": {
            "$ref": "#/components/schemas/InstitutionalReceiver"
          },
          "referring": {
            "$ref": "#/components/schemas/InstitutionalReferring"
          },
          "rendering": {
            "$ref": "#/components/schemas/InstitutionalRendering"
          },
          "submitter": {
            "$ref": "#/components/schemas/InstitutionalSubmitter"
          },
          "subscriber": {
            "$ref": "#/components/schemas/InstitutionalSubscriber"
          },
          "tradingPartnerName": {
            "description": "This is the payer's business name, like Cigna or Aetna.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "This is the Payer ID. Visit the [Payer Network](https://www.stedi.com/healthcare/network) for a complete list. You can send requests using the Primary Payer ID, the Stedi Payer ID, or any alias listed in the payer record.",
            "type": "string"
          },
          "usageIndicator": {
            "description": "Whether you want to send a test or production claim. This property also allows you to filter claims in the Stedi portal by production or test data. By default, this property is set to `P` for production data. Use `T` to designate a claim as test data.",
            "type": "string"
          }
        },
        "required": [
          "claimInformation",
          "receiver",
          "submitter",
          "subscriber",
          "tradingPartnerServiceId"
        ],
        "type": "object"
      },
      "InstitutionalClaimsSubmissionResponseContent": {
        "properties": {
          "claimReference": {
            "$ref": "#/components/schemas/InstitutionalClaimReference"
          },
          "controlNumber": {
            "description": "An identifier for the transaction.",
            "type": "string"
          },
          "editResponses": {
            "description": "Currently not used.",
            "items": {
              "$ref": "#/components/schemas/EditResponse"
            },
            "type": "array"
          },
          "editStatus": {
            "description": "Currently not used.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors. Currently not used.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalError"
            },
            "type": "array"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "meta": {
            "$ref": "#/components/schemas/InstitutionalResponseMeta"
          },
          "payer": {
            "$ref": "#/components/schemas/InstitutionalPayer"
          },
          "status": {
            "description": "The status of the claim submission.",
            "type": "string"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original claim. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "warnings": {
            "description": "A list of warnings.",
            "items": {
              "$ref": "#/components/schemas/ClaimsWarning"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstitutionalConditionInformation": {
        "properties": {
          "conditionCode": {
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "conditionCode"
        ],
        "type": "object"
      },
      "InstitutionalContactInformation": {
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "faxNumber": {
            "description": "The fax number.",
            "type": "string"
          },
          "name": {
            "description": "The full name of the person or office.",
            "maxLength": 60,
            "type": "string"
          },
          "phoneNumber": {
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code, BBB is the telephone number prefix, and CCCC is the telephone number. The phone number should only include the digits 0 to 9. Don't include separators, such as dashes, and don't include long distance access numbers, such as 1. For example, you would format the phone number 123-456-7890 as 1234567890.",
            "maxLength": 256,
            "type": "string"
          },
          "validContact": {
            "deprecated": true,
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "InstitutionalDelayReasonCode": {
        "description": "Code indicating the reason for the delay in claim submission. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#delay-reason-codes) for a complete list.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "15"
        ],
        "type": "string"
      },
      "InstitutionalDependent": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The patient's address. Every claim must include this information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n      - The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n      - If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependent` object in the response.\n      - If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach."
          },
          "dateOfBirth": {
            "description": "The patient's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The patient's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code identifying the gender. Can be set to `F` - Female, `M` - Male, or `U` - Unknown.\n\nSome payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records. If the gender isn't known or the patient declines to answer, use `U` or perform an eligibility check to determine the gender according to the payer's records."
          },
          "lastName": {
            "description": "The patient's last name. **Don't** include the patient's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "maxLength": 60,
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "relationshipToSubscriberCode": {
            "$ref": "#/components/schemas/InstitutionalRelationshipToSubscriberCode",
            "description": "Identifies the relationship of the patient to the subscriber. Can be set to `01` - Spouse, `19` - Child, `20` - Employee, `21` - Unknown, `39` - Organ Donor, `40` - Cadaver Donor, `53` - Life Partner, or `G8` - Other Relationship."
          },
          "ssn": {
            "description": "The patient's Social Security Number. Only used for Property and Casualty claims.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "suffix": {
            "description": "The patient's name suffix, such as Jr. or III. Only include the patient's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "maxLength": 10,
            "type": "string"
          }
        },
        "required": [
          "dateOfBirth",
          "firstName",
          "gender",
          "lastName",
          "relationshipToSubscriberCode"
        ],
        "type": "object"
      },
      "InstitutionalDrugIdentification": {
        "properties": {
          "linkSequenceNumber": {
            "description": "The sequence number assigned to the drug or biologic. Required when the provided medication involves the compounding of two or more drugs being reported and there is no prescription number. The link sequence number is a provider-assigned number unique to this claim. Its purpose is to enable the receiver to piece together the components of the compound. Note that you can set either this property _or_ `pharmacyPrescriptionNumber`, but not both.",
            "maxLength": 50,
            "type": "string"
          },
          "measurementUnitCode": {
            "$ref": "#/components/schemas/InstitutionalMeasurementUnitCode"
          },
          "nationalDrugCode": {
            "description": "The National Drug Code (NDC) number for the drug or biologic. This is a unique number that identifies the drug or biologic, including the labeler code, product code, and package code. The NDC number must be formatted as 5-4-2, with hyphens separating the three parts. For example, 12345-6789-01.",
            "maxLength": 48,
            "type": "string"
          },
          "nationalDrugUnitCount": {
            "description": "The number of units of the drug or biologic, formtted as a decimal.",
            "pattern": "^\\d{1,15}$",
            "type": "string"
          },
          "pharmacyPrescriptionNumber": {
            "description": "The prescription number assigned by the pharmacy. Required when dispensing of the drug has been done with an assigned prescription number. In cases where a compound drug is being billed, the components of the compound will all have the same prescription number. Payers receiving the claim can relate all the components by matching the prescription number. Note that you can set either this property _or_ `linkSequenceNumber`, but not both.",
            "maxLength": 50,
            "type": "string"
          }
        },
        "required": [
          "measurementUnitCode",
          "nationalDrugCode",
          "nationalDrugUnitCount"
        ],
        "type": "object"
      },
      "InstitutionalError": {
        "properties": {
          "code": {
            "description": "The error code.",
            "type": "string"
          },
          "description": {
            "description": "The description of the error code.",
            "type": "string"
          },
          "field": {
            "description": "The field related to the error.",
            "type": "string"
          },
          "followupAction": {
            "description": "Recommended followup actions to correct the error.",
            "type": "string"
          },
          "location": {
            "description": "Where the error is located in the original request.",
            "type": "string"
          },
          "value": {
            "description": "The value for the data causing the error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalIndividualRelationshipCode": {
        "enum": [
          "01",
          "18",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8"
        ],
        "type": "string"
      },
      "InstitutionalLineAdjudicationInformation": {
        "properties": {
          "adjudicationOrPaymentDate": {
            "description": "The date the claim was paid.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "bundledLineNumber": {
            "description": "The LX assigned number of the service line into which this service line is bundled. It's only used to bundle service lines.",
            "pattern": "^\\d{1,6}$",
            "type": "string"
          },
          "lineAdjustment": {
            "description": "Adjustment reason codes and amounts as needed for the service line. You can include up to five of these objects within `claimInformation.serviceLines.lineAdjudicationInformation.claimAdjustmentInformation`.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalClaimAdjustment"
            },
            "type": "array"
          },
          "otherPayerPrimaryIdentifier": {
            "description": "The payer ID for the payer responsible for reimbursement.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "paidServiceUnitCount": {
            "description": "The number of paid units from the remittance advice. When paid units are not present on the remittance advice, use the original billed units. The maximum length for this property is 8 digits excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is three.",
            "pattern": "^\\d{1,8}(\\.\\d{1,3})?$",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "maxLength": 48,
            "type": "string"
          },
          "procedureCodeDescription": {
            "description": "A description of the procedure identified in `procedureCode`.",
            "maxLength": 80,
            "type": "string"
          },
          "procedureModifier": {
            "description": "A modifier that conveys special circumstances related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/LineAdjudicationInformationProductOrServiceIDQualifier"
          },
          "remainingPatientLiability": {
            "description": "The remaining amount (as determined by the provider) to be paid after the other payer identified in the `otherPayerPrimaryIdentifier` property has adjudicated the claim. Expressed as a decimal. Only used in claims submitted by providers - not in payer-to-payer coordination of benefits (COB). Don't include this if you already provided `claimInformation.otherSubscriberInformation.remainingPatientLiability` for the claim.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "serviceLinePaidAmount": {
            "description": "The amount paid for this service line, expressed as a decimal. Zero (0) is an acceptable value.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "serviceLineRevenueCode": {
            "description": "The revenue code for the service line.",
            "maxLength": 48,
            "type": "string"
          }
        },
        "required": [
          "adjudicationOrPaymentDate",
          "otherPayerPrimaryIdentifier",
          "paidServiceUnitCount",
          "serviceLinePaidAmount",
          "serviceLineRevenueCode"
        ],
        "type": "object"
      },
      "InstitutionalMeasurementUnit": {
        "description": "The unit of measurement for the service. Can be set to `DA` - Days or `UN` - Unit.",
        "enum": [
          "DA",
          "UN"
        ],
        "type": "string"
      },
      "InstitutionalMeasurementUnitCode": {
        "description": "Code identifying the unit of measure for the drug or biologic. Can be set to `F2` - International Unit, `GR` - Gram, `ME` - Milligram, `ML` - Milliliter, or `UN` - Unit.",
        "enum": [
          "F2",
          "GR",
          "ME",
          "ML",
          "UN"
        ],
        "type": "string"
      },
      "InstitutionalOtherInsuredIdentifierTypeCode": {
        "description": "Code identifying the type of identifier used for the other insured. Can be set to `II` - Standard Unique Health Identifier for each Individual in the United States or `MI` - Member Identification Number. Note that `II` is deprecated and should not be used in new claims.",
        "enum": [
          "II",
          "MI"
        ],
        "type": "string"
      },
      "InstitutionalOtherInsuredQualifier": {
        "description": "Code identifying the type of entity. Can be set to `1` - Person or `2` - Non-Person Entity.",
        "enum": [
          "1",
          "2"
        ],
        "type": "string"
      },
      "InstitutionalOtherPayerBillingProvider": {
        "description": "Information regarding the other payer's billing provider.",
        "properties": {
          "otherPayerBillingProviderIdentifier": {
            "description": "The provider's identifier. The `qualifier` can be set to `G2` - Provider Commercial Number or `LU` - Location Number. Note that UPIN numbers are deprecated and should not be used in new claims.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerBillingProviderIdentifier"
        ],
        "type": "object"
      },
      "InstitutionalOtherPayerIdentifierTypeCode": {
        "description": "Code specifying the type of identifier used for the other payer. Can be set to `PI` - Payor Identification or `XV` - Centers for Medicare and Medicaid Services PlanID. Use `XV` when reporting Health Plan ID (HPID) or Other Entity Identifier (OEID).",
        "enum": [
          "PI",
          "XV"
        ],
        "type": "string"
      },
      "InstitutionalOtherPayerName": {
        "properties": {
          "otherInsuredAdditionalIdentifier": {
            "deprecated": true,
            "type": "string"
          },
          "otherPayerAddress": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The address of the other payer. You must include at least the `address1` and `city` properties in this object."
          },
          "otherPayerAdjudicationOrPaymentDate": {
            "type": "string"
          },
          "otherPayerClaimAdjustmentIndicator": {
            "description": "Required when the claim is being sent in the payer-to-payer COB model, AND the destination payer is secondary to the payer identified in this object, AND the payer identified in this object re-adjudicated the claim. Can be set to `Y` - Yes.",
            "type": "boolean"
          },
          "otherPayerClaimControlNumber": {
            "description": "The other payer's claim control number for this claim.",
            "type": "string"
          },
          "otherPayerIdentifier": {
            "description": "The identifier specified in `otherPayerIdentifierTypeCode`.",
            "type": "string"
          },
          "otherPayerIdentifierTypeCode": {
            "$ref": "#/components/schemas/InstitutionalOtherPayerIdentifierTypeCode"
          },
          "otherPayerOrganizationName": {
            "description": "The business name of the other payer.",
            "type": "string"
          },
          "otherPayerPriorAuthorizationNumber": {
            "description": "The other payer's prior authorization number. Required when this payer has assigned a prior authorization number to this claim.",
            "type": "string"
          },
          "otherPayerPriorAuthorizationOrReferralNumber": {
            "description": "The other payer's referral number. Required when this payer has assigned a referral number to this claim.",
            "type": "string"
          },
          "otherPayerSecondaryIdentifier": {
            "description": "Additional identification number for the other payer. The `qualifier` property can be set to `2U` - Payer Identification Number, `EI` - Employer's Identification Number, `FY` - Claim Office Number, or `NF` - National Association of Insurance Commissioners (NAIC) Code.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerIdentifier",
          "otherPayerIdentifierTypeCode",
          "otherPayerOrganizationName"
        ],
        "type": "object"
      },
      "InstitutionalOtherPayerReferringProvider": {
        "description": "Information regarding the other payer's referring provider. This is the provider who sent the patient to another provider for services.",
        "properties": {
          "otherPayerReferringProviderIdentifier": {
            "description": "The provider's identifier. The `qualifier` can be set to `OB` - State License Number, `1G` - Provider UPIN Number, or `G2` - Provider Commercial Number. Note that UPIN numbers are deprecated and should not be used in new claims.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerReferringProviderIdentifier"
        ],
        "type": "object"
      },
      "InstitutionalOtherPayerRenderingProvider": {
        "description": "Information regarding the other payer's rendering provider. The rendering provider is the provider who performed the service or non-surgical procedure.",
        "properties": {
          "otherPayerRenderingProviderIdentifier": {
            "description": "The provider's identifier. The `qualifier` can be set to `OB` - State License Number, `1G` - Provider UPIN Number, `G2` - Provider Commercial Number, or `LU` - Location Number. Note that UPIN numbers are deprecated and should not be used in new claims.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerRenderingProviderIdentifier"
        ],
        "type": "object"
      },
      "InstitutionalOtherPayerServiceFacilityLocation": {
        "description": "Information regarding the other payer's service facility location. This is where the service was performed.",
        "properties": {
          "otherPayerServiceFacilityLocationIdentifier": {
            "description": "The facility's identifier. The `qualifier` can be set to `OB` - State License Number, `G2` - Provider Commercial Number, or `LU` - Location Number.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerServiceFacilityLocationIdentifier"
        ],
        "type": "object"
      },
      "InstitutionalOtherSubscriberInformation": {
        "description": "Required when other payers are known to potentially be involved in paying on this claim. This object contains information about other health plans under which the patient has coverage. It's used for coordination of benefits scenarios.",
        "properties": {
          "benefitsAssignmentCertificationIndicator": {
            "$ref": "#/components/schemas/InstitutionalOtherSubscriberInformationBenefitsAssignmentCertificationIndicator",
            "description": "Code indicating whether whether or not the insured has authorized the plan to remit payment directly to the provider. Can be set to `N` - No (Payment should go to the patient), `Y` - Yes (Payment should go directly to the provider), or `W` - Not Applicable. Use `W` when the patient refuses to assign benefits."
          },
          "claimFilingIndicatorCode": {
            "$ref": "#/components/schemas/InstitutionalClaimFilingIndicatorCode",
            "description": "A code identifying the type of claim. For example `DS` - Disability. Use `OF` when submitting Medicare Part D claims. Use `ZZ` when you don't know the type of insurance. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#claim-filing-indicator-codes) for a complete list."
          },
          "claimLevelAdjustments": {
            "description": "Supply adjustment reason codes and amounts as needed. Required when the claim has been adjudicated by the payer identified in this loop, and the claim has claim level adjustment information. Submitters must use this object to report prior payers' claim level adjustments that cause the amount paid to differ from the amount originally charged. Codes and associated amounts must come from either paper remittance advice or 835s (Electronic Remittance Advice) received on the claim. When the information originates from a paper remittance advice that does not use the standard Claim Adjustment Reason Codes, the paper values must be converted to standard Claim Adjustment Reason Codes. You can include up to five `claimLevelAdjustments` objects in this array.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalClaimAdjustment"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "groupNumber": {
            "description": "The group number for the subscriber's health plan.\n\nProvide this property OR the `otherInsuredGroupName`, not both. If this property is set, Stedi ignores the `otherInsuredGroupName` property.",
            "type": "string"
          },
          "individualRelationshipCode": {
            "$ref": "#/components/schemas/InstitutionalIndividualRelationshipCode",
            "description": "Code identifying the relationship to the person insured. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#individual-relationship-codes) for a complete list."
          },
          "medicareInpatientAdjudication": {
            "$ref": "#/components/schemas/MedicareInpatientAdjudication",
            "description": "Claim-level data related to the adjudication of Medicare inpatient claims. Required when inpatient adjudication information is reported in the remittance advice _or_ when you need to report remark codes."
          },
          "medicareOutpatientAdjudication": {
            "$ref": "#/components/schemas/MedicareOutpatientAdjudication"
          },
          "nonCoveredChargeAmount": {
            "description": "Required when the destination payer's cost avoidance policy allows providers to bypass claim submission to the otherwise prior payer identified in `otherPayerName`. The amount must equal the total claim charge amount you reported in `claimInformation.claimChargeAmount`.",
            "type": "string"
          },
          "otherInsuredGroupName": {
            "description": "The name of the subscriber's health plan.\n\nProvide either this property OR the `groupNumber`, not both. If `groupNumber` is set, Stedi ignores this value and uses the value in `groupNumber`.",
            "type": "string"
          },
          "otherPayerAttendingProvider": {
            "$ref": "#/components/schemas/OtherPayerAttendingProvider"
          },
          "otherPayerBillingProvider": {
            "$ref": "#/components/schemas/InstitutionalOtherPayerBillingProvider"
          },
          "otherPayerName": {
            "$ref": "#/components/schemas/InstitutionalOtherPayerName",
            "description": "Details about the other payer."
          },
          "otherPayerOperatingPhysician": {
            "$ref": "#/components/schemas/OtherPayerOperatingPhysician"
          },
          "otherPayerOtherOperatingPhysician": {
            "$ref": "#/components/schemas/OtherPayerOtherOperatingPhysician"
          },
          "otherPayerReferringProvider": {
            "$ref": "#/components/schemas/InstitutionalOtherPayerReferringProvider"
          },
          "otherPayerRenderingProvider": {
            "$ref": "#/components/schemas/InstitutionalOtherPayerRenderingProvider"
          },
          "otherPayerServiceFacilityLocation": {
            "$ref": "#/components/schemas/InstitutionalOtherPayerServiceFacilityLocation"
          },
          "otherSubscriberName": {
            "$ref": "#/components/schemas/InstitutionalOtherSubscriberName",
            "description": "The person or entity who is the primary policyholder for the other payer's health plan."
          },
          "payerPaidAmount": {
            "description": "The total amount in dollars the payer has paid on this claim. It is acceptable to set this to `0` (Zero). This is required when you include the `payToPlan` object, and you should set it to the amount the Medicaid agency actually paid.",
            "type": "string"
          },
          "paymentResponsibilityLevelCode": {
            "$ref": "#/components/schemas/InstitutionalOtherSubscriberInformationPaymentResponsibilityLevelCode",
            "description": "Code identifying the insurance carrier's level of responsibility for a payment of a claim. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#payment-responsibility-sequence-number-codes) for a complete list. This will almost always be `P` - Primary. However, you may need to use other codes if the patient has multiple insurance policies. For example, if a patient is covered by both Medicare and an employer-sponsored commercial plan, you could bill Medicare first as `P` and then bill the commercial payer second as `S`."
          },
          "policyNumber": {
            "description": "The policy number for the subscriber's health plan.",
            "type": "string"
          },
          "releaseOfInformationCode": {
            "$ref": "#/components/schemas/ReleaseOfInformationCode"
          },
          "remainingPatientLiability": {
            "description": "This is the remaining amount (as determined by the provider) to be paid after the other payer identified in the `otherPayerName` object has adjudicated the claim. Required when the other payer adjudicated the claim and provided claim level information only _or_ when the other payer adjudicated the claim, and the provider received a paper remittance advice, and the provider does not have the ability to report line item information. Don't include this property if you're specifying remaining patient liability at the service line level.",
            "type": "string"
          }
        },
        "required": [
          "benefitsAssignmentCertificationIndicator",
          "claimFilingIndicatorCode",
          "individualRelationshipCode",
          "otherPayerName",
          "otherSubscriberName",
          "paymentResponsibilityLevelCode",
          "releaseOfInformationCode"
        ],
        "type": "object"
      },
      "InstitutionalOtherSubscriberInformationBenefitsAssignmentCertificationIndicator": {
        "enum": [
          "N",
          "Y",
          "W"
        ],
        "type": "string"
      },
      "InstitutionalOtherSubscriberInformationPaymentResponsibilityLevelCode": {
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "P",
          "S",
          "T",
          "U"
        ],
        "type": "string"
      },
      "InstitutionalOtherSubscriberName": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The subscriber's address. You must include at least the `address1` and `city` properties in this object."
          },
          "firstName": {
            "deprecated": true,
            "type": "string"
          },
          "otherInsuredAdditionalIdentifier": {
            "description": "The subscriber's social security number (SSN). This must be a string of exactly nine numbers with no separators.",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "otherInsuredFirstName": {
            "description": "The subscriber's first name.",
            "type": "string"
          },
          "otherInsuredIdentifier": {
            "description": "The identifier specified in `otherInsuredIdentifierTypeCode`.",
            "type": "string"
          },
          "otherInsuredIdentifierTypeCode": {
            "$ref": "#/components/schemas/InstitutionalOtherInsuredIdentifierTypeCode"
          },
          "otherInsuredLastName": {
            "description": "The last name (when the subscriber is an individual) or the name of the organization (when the subscriber is an organization). **Don't** include the subscriber's name suffix, such as Jr. or III. Use the designated `otherInsuredSuffix` property instead.",
            "type": "string"
          },
          "otherInsuredMiddleName": {
            "description": "The subscriber's middle name or initial.",
            "type": "string"
          },
          "otherInsuredQualifier": {
            "$ref": "#/components/schemas/InstitutionalOtherInsuredQualifier"
          },
          "otherInsuredSuffix": {
            "description": "The subscriber's name suffix, such as Jr or III. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          }
        },
        "required": [
          "otherInsuredIdentifier",
          "otherInsuredIdentifierTypeCode",
          "otherInsuredLastName",
          "otherInsuredQualifier"
        ],
        "type": "object"
      },
      "InstitutionalPayer": {
        "description": "Information about the payer for the submitted claim.",
        "properties": {
          "payerID": {
            "description": "The payer's ID. This is the same as the `tradingPartnerServiceId`.",
            "type": "string"
          },
          "payerName": {
            "description": "The payer's business name, such as Aetna or Cigna.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalProcedureIdentifier": {
        "description": "Code identifying the type of `procedureCode`. If you set this property, you must also set `procedureCode`.\n\nCan be set to `ER` - Jurisdiction Specific Procedure and Supply Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `HP` -  Health Insurance Prospective Payment System (HIPPS) Skilled Nursing Facility Rate Code, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, or `WK` - Advanced Billing Concepts (ABC) Codes. Note that ABC codes are deprecated and shouldn't be used in new claims. \n\nVisit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#product-or-service-id-qualifier-codes) for more information and usage instructions.",
        "enum": [
          "ER",
          "HC",
          "HP",
          "IV",
          "WK"
        ],
        "type": "string"
      },
      "InstitutionalProviderType": {
        "enum": [
          "BillingProvider",
          "AttendingProvider",
          "ReferringProvider",
          "RenderingProvider"
        ],
        "type": "string"
      },
      "InstitutionalProvidersObject": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The provider's business address. Only applies to the billing provider."
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "description": "The provider's contact information. Only applies to the billing provider. You must include at least one communication method (phone, fax, or email) in this object."
          },
          "employerId": {
            "description": "The provider's employer ID, also known as an EIN or TIN. Must be a string of exactly nine numbers with no separators. Only applies to the billing provider.",
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) of the provider. Note that this is **required** for billing providers that have an NPI assigned.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name, when the provider is not an individual.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/InstitutionalProviderType",
            "description": "The type of provider. Set to the type that matches the provider's role in the claim. For example, if the provider is the referring provider, set this to `ReferringProvider`."
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/OperatingPhysicianIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier referenced by `secondaryIdentificationQualifierCode`. For example, if `secondaryIdentificationQualifierCode` is set to `0B`, this property should be the provider's state license number.\n\nYou can only include one secondary identifier for the provider.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "description": "The provider's [taxnonomy code](https://www.cms.gov/medicare/enrollment-renewal/providers-suppliers/health-care-taxonomy), a unique 10-character code that designates their classification and specialization. Only applies to the attending provider.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "providerType"
        ],
        "type": "object"
      },
      "InstitutionalReceiver": {
        "description": "The entity responsible for the payment of the claim, such as an insurance company or government agency.",
        "properties": {
          "organizationName": {
            "description": "The business name of the payer receiving the claim, such as Aetna or Cigna.",
            "maxLength": 60,
            "type": "string"
          },
          "taxId": {
            "description": "The receiver's Electronic Transmitter Identification Number (ETIN), as assigned by the payer. This may be the same as the payer's TIN, but it can also be another unique identifier. We **strongly recommend** including this property in your request.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "organizationName"
        ],
        "type": "object"
      },
      "InstitutionalReferenceIdentification": {
        "properties": {
          "identifier": {
            "description": "The identifier specified in `qualifier`.",
            "type": "string"
          },
          "qualifier": {
            "description": "The code qualifying the type of `identifier`.",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "qualifier"
        ],
        "type": "object"
      },
      "InstitutionalReferring": {
        "description": "Information about the provider who referred the patient for care.\n- Include this object only when the referring provider is different than the provider listed in the `attending` object.\n- Use this object for providers that apply to the entire claim.\n- This should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "deprecated": true,
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ReferringProviderType",
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility."
          },
          "providerUpinNumber": {
            "deprecated": true,
            "type": "string"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/ReferringSecondaryIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in `secondaryIdentifierQualifierCode`.\n\nYou can only include one secondary identifier for the provider.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "deprecated": true,
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "lastName"
        ],
        "type": "object"
      },
      "InstitutionalRelationshipToSubscriberCode": {
        "description": "Identifies the relationship of the patient to the subscriber. Can be set to `01` - Spouse, `19` - Child, `20` - Employee, `21` - Unknown, `39` - Organ Donor, `40` - Cadaver Donor, `53` - Life Partner, or `G8` - Other Relationship.",
        "enum": [
          "01",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8"
        ],
        "type": "string"
      },
      "InstitutionalRendering": {
        "description": "Information about the provider who delivered the medical services or non-surgical procedures listed in the claim. This must be an individual, not an organization, and you must supply at least the provider's `lastName` and an identifier, which is typically the `npi`. The provider's `firstName` is also required, if applicable.\n\nInclude this object when all of the following are true:\n- The rendering provider is different than the provider listed in the `attending` object.\n- The provider applies to the entire claim or to at least one service line. For example, if a claim had two service lines with two different rendering providers, you would include the provider for the first service line here and leave the `claimInformation.serviceLines.renderingProvider` object for that service line blank. Then, you would specify the second provider in the appropriate service line's `claimInformation.serviceLines.renderingProvider` object.\n- State or federal regulatory requirements call for a combined claim. A combined claim includes both facility and professional components, such as a Medicaid clinic bill or a critical access hospital claim.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "deprecated": true,
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "type": "string"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/RenderingSecondaryIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in the `secondaryIdentificationQualifierCode`.\n\nYou can only include one secondary identifier for the provider.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "deprecated": true,
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "required": [
          "lastName"
        ],
        "type": "object"
      },
      "InstitutionalReportInformation": {
        "properties": {
          "attachmentControlNumber": {
            "description": "The control number assigned to the attachment. The payer uses this identifier to match the attachment to the claim. We recommend using a ULID or UUID of up to 50 characters.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "attachmentReportTypeCode": {
            "$ref": "#/components/schemas/ReportInformationAttachmentReportTypeCode"
          },
          "attachmentTransmissionCode": {
            "$ref": "#/components/schemas/InstitutionalReportInformationAttachmentTransmissionCode",
            "description": "Code identifying the method by which the provider's report is attached. Can be set to `AA` - Available on Request at Provider Site, `BM` - By Mail, `EL` - Electronically Only, `EM` - E-Mail, `FT` - File Transfer, or `FX` - By Fax.\n\nSet this to `EL` when you plan to submit attachments electronically through Stedi APIs."
          }
        },
        "required": [
          "attachmentControlNumber",
          "attachmentReportTypeCode",
          "attachmentTransmissionCode"
        ],
        "type": "object"
      },
      "InstitutionalReportInformationAttachmentTransmissionCode": {
        "description": "Code identifying the method by which the provider's report is attached. Can be set to `AA` - Available on Request at Provider Site, `BM` - By Mail, `EL` - Electronically Only, `EM` - E-Mail, `FT` - File Transfer, or `FX` - By Fax.",
        "enum": [
          "AA",
          "BM",
          "EL",
          "EM",
          "FT",
          "FX"
        ],
        "type": "string"
      },
      "InstitutionalResponseMeta": {
        "description": "Metadata from Stedi about the request.",
        "properties": {
          "applicationMode": {
            "description": "Indicates where this request can be found for support.",
            "type": "string"
          },
          "billerId": {
            "description": "The biller ID assigned to this request.",
            "type": "string"
          },
          "senderId": {
            "description": "The sender ID assigned to this request.",
            "type": "string"
          },
          "submitterId": {
            "description": "The submitter ID assigned to this request.",
            "type": "string"
          },
          "traceId": {
            "description": "The file execution ID, a unique identifier assigned to the processed file within the Stedi platform.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalService": {
        "properties": {
          "description": {
            "description": "The description of the procedure identified in `procedureCode`.",
            "type": "string"
          },
          "lineItemChargeAmount": {
            "description": "The amount charged for the service line, expressed as a decimal. This should include the provider's base charge and any applicable tax amounts reported within the service line.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "measurementUnit": {
            "$ref": "#/components/schemas/InstitutionalMeasurementUnit"
          },
          "nonCoveredChargeAmount": {
            "description": "The non-covered service amount, expressed as a decimal. This property isn't intended for sending claims to secondary insurance after receiving a remittance from the original payer. It's used when a provider wants to report that they performed an uncovered service for a patient, but they aren't asking for payment. For example, a cosmetic procedure that isn't covered by the patient's health plan.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code. If you set this property, you must also set the `procedureIdentifier`.",
            "type": "string"
          },
          "procedureIdentifier": {
            "$ref": "#/components/schemas/InstitutionalProcedureIdentifier"
          },
          "procedureModifiers": {
            "description": "A modifier that conveys special circumstances related to the performance of the service.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "serviceLineRevenueCode": {
            "description": "The identifying number for the product or service. Visit the [National Uniform Billing Committee (NUBC) Codes](https://www.hhs.gov/guidance/document/new-national-uniform-billing-committee-nubc-codes-and-other-chapter-25-revisions-revision) documentation for a complete list.",
            "maxLength": 48,
            "type": "string"
          },
          "serviceUnitCount": {
            "description": "The number of units of service provided. The maximum length for this property is 8 digits, excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is 3.\n\nThe units depend on the procedure code being billed and the nature of the service. For example, they may correspond to days (1 unit = 1 inpatient day), individual treatments or encounters (3 units = 3 dialysis sessions), or medication doses (2 units = 2 doses or vials).",
            "maxLength": 15,
            "type": "string"
          }
        },
        "required": [
          "lineItemChargeAmount",
          "measurementUnit",
          "serviceLineRevenueCode",
          "serviceUnitCount"
        ],
        "type": "object"
      },
      "InstitutionalServiceAuthorizationExceptionCode": {
        "description": "Code indicating the type of service authorization exception. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#service-authorization-exception-codes) for a complete list.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7"
        ],
        "type": "string"
      },
      "InstitutionalServiceFacilityLocation": {
        "description": "The service facility location. Required when the location of healthcare services is different from the billing provider's address.\n- When an organization's healthcare provider's [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier) is provided to identify the service location, the organization healthcare provider must be external to the entity identified as the billing provider (for example, a reference lab).\n- The service location can't be a component or subpart of the billing provider entity. Only include this object when the service location is **different** from the billing provider's address. If you include this object when the address is the same, Stedi omits all of the service facility location information from the claim submission, including the name and any identifiers.\n- Sometimes the billing provider is an actual physician group that is located at the same address as a hospital, but is in fact a separate entity. In this case, you can differentiate the service facility location by including the specific suite or building number of the physician group. This ensures that the service facility location is different from the billing provider's address and is reported accurately.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The location where services were rendered. \n\n If this was in an an area where there are no street addresses, enter a description of where the service was rendered. For example, 'crossroad of State Road 34 and 45' or 'Exit near Mile marker 265 on Interstate 80'. \n\n For United States addresses, you **must** include the full nine-digit zip code with no separators, such as `100031502`. If you don't know the full zip code, you can find it using the [USPS ZIP Code Lookup](https://tools.usps.com/zip-code-lookup.htm) tool."
          },
          "identificationCode": {
            "description": "The organization [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the service facility location. Required when the service location to be identified has an NPI and is not a component or subpart of the billing provider.",
            "type": "string"
          },
          "organizationName": {
            "description": "The business name of the laboratory or facility.",
            "type": "string"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/ServiceFacilityLocationSecondaryIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in `secondaryIdentifierQualifierCode`.\n\nYou can only include one secondary identifier for the service facility.",
            "maxLength": 50,
            "type": "string"
          }
        },
        "required": [
          "address",
          "organizationName"
        ],
        "type": "object"
      },
      "InstitutionalServiceLine": {
        "properties": {
          "adjustedRepricedLineItemReferenceNumber": {
            "description": "Required when a repricing (pricing) organization needs to have an identifying number on an adjusted service line in their submission to their payer organization. Providers shouldn't complete this property.",
            "maxLength": 50,
            "type": "string"
          },
          "assignedNumber": {
            "deprecated": true,
            "description": "Stedi assigns this value automatically. It's a unique number identifying the service line within the claim.",
            "maxLength": 6,
            "pattern": "^\\d+$",
            "type": "string"
          },
          "description": {
            "description": "A free-form description to clarify information about the service line. You can use this to further describe the service/product/supply reported in the service line or for non-specific procedure codes. Non-specific procedure codes may include descriptors such as 'Not Otherwise Classified (NOC)', 'Unlisted', 'Unspecified', 'Other', 'Prescription Drug: Generic', 'Prescription Drug, Brand Name', or 'Miscellaneous'.",
            "maxLength": 80,
            "type": "string"
          },
          "drugIdentification": {
            "$ref": "#/components/schemas/InstitutionalDrugIdentification",
            "description": "Report drugs and biologics related to the service line. Required when government regulation mandates that prescribed drugs and biologics are reported with NDC numbers _or_ when when the provider or submitter chooses to report NDC numbers to enhance the claim reporting or adjudication processes."
          },
          "facilityTaxAmount": {
            "description": "The amount of the facility tax or surcharge, formatted as a decimal. Required when a facility tax applies to the service being reported. The `claimInformation.serviceLines.institutionalService.lineItemChargeAmount` must include the amount you report here.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "institutionalService": {
            "$ref": "#/components/schemas/InstitutionalService",
            "description": "Details about the service line, including the procedure code and the line item charge amount."
          },
          "lineAdjudicationInformation": {
            "description": "Includes service line adjudication information for coordination of benefits between the initial payers of a health care claim and all subsequent payers.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalLineAdjudicationInformation"
            },
            "maxItems": 15,
            "minItems": 1,
            "type": "array"
          },
          "lineAdjustmentInformation": {
            "$ref": "#/components/schemas/LineAdjustmentInformation",
            "deprecated": true
          },
          "lineItemControlNumber": {
            "description": "A unique identifier for this service line within the claim. It appears in the 835 (ERA) response as `lineItemControlNumber`, allowing you to correlate ERAs to the specific service lines from the original claim. We **strongly recommend** setting this property for every service line within the claim. We also recommend using a [ULID](https://github.com/ulid/spec) instead of a UUID because payers are only required to store up to 30 characters for this value.",
            "maxLength": 50,
            "type": "string"
          },
          "lineNoteText": {
            "description": "Another way to provide additional information for comment or special instruction - same as `thirdPartyOrganizationNotes`. Required when the TPO/repricer needs to forward additional information to the payer.",
            "maxLength": 80,
            "type": "string"
          },
          "linePricingInformation": {
            "$ref": "#/components/schemas/LinePricingInformation",
            "deprecated": true
          },
          "lineRepricingInformation": {
            "$ref": "#/components/schemas/ClaimPricingInformation",
            "description": "Information about the pricing or repricing of the service line. This information should only be completed by repricers."
          },
          "lineSupplementInformation": {
            "$ref": "#/components/schemas/InstitutionalClaimSupplementalInformation",
            "deprecated": true
          },
          "operatingPhysician": {
            "$ref": "#/components/schemas/OperatingPhysician",
            "description": "Information about the individual with primary responsibility for performing the surgical procedure(s) listed in the service line. Required when a surgical procedure code is listed.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`."
          },
          "otherOperatingPhysician": {
            "$ref": "#/components/schemas/OperatingPhysician",
            "description": "Information about the individual who performed a secondary surgical procedure or assisted the `operatingPhysician`. Required when another operating physician is involved in the surgical procedures listed in the service line.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`."
          },
          "referringProvider": {
            "$ref": "#/components/schemas/InstitutionalServiceLineReferringProvider"
          },
          "renderingProvider": {
            "$ref": "#/components/schemas/InstitutionalServiceLineRenderingProvider"
          },
          "repricedLineItemReferenceNumber": {
            "description": "Required when a repricing (pricing) organization needs to have an identifying number on the service line in their submission to their payer organization.",
            "maxLength": 50,
            "type": "string"
          },
          "serviceDate": {
            "description": "Either a single date of service or the beginning of a range of service dates. If a range is provided, the end date should be provided in `serviceDateEnd`. \n\nThis property is required on outpatient service lines where a drug is not being billed and the Statement Covers Period is greater than one day. \n\nIt's also required when a drug is being billed and the payer's adjudication is known to be impacted by the drug duration or the date the prescription was written. In cases where a drug is being billed on a service line, this property may be used to indicate the date the prescription was written (or otherwise communicated by the prescriber if not written). \n\nThis property may also be used to indicate the beginning of the duration for which the drug supply will be used by the patient. The difference in dates, including both the begin and end dates, are the days supply of the drug. Example: 20000101-20000107 (1/1/00 to 1/7/00) is used for a 7 day supply where the first day of the drug used by the patient is 1/1/00. In the event a drug is administered on less than a daily basis (for example, every other day) the date range would include the entire period during which the drug was supplied, including the last day the drug was used. Example: 20000101-20000108 (1/1/00 to 1/8/00) is used for an 8 days supply where the prescription is written for Q48 (every 48 hours), four doses of the drug are dispensed and the first dose is used on 1/1/00.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceDateEnd": {
            "description": "The end of a range of service dates. If you include this property, you must also include `serviceDate` to indicate the beginning of the range.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceLineDateInformation": {
            "$ref": "#/components/schemas/InstitutionalServiceLineDateInformation",
            "deprecated": true
          },
          "serviceLineReferenceInformation": {
            "$ref": "#/components/schemas/InstitutionalServiceLineReferenceInformation"
          },
          "serviceLineSupplementalInformation": {
            "$ref": "#/components/schemas/InstitutionalServiceLineSupplementalInformation",
            "description": "Supporting documentation for the service line. Required when you plan to submit an [attachment](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the service line electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify additional information that is being held at the provider's office and is available upon request.\n\nUse this object when there is a single attachment. If there are multiple attachments, use the `serviceLineSupplementalInformations` array instead."
          },
          "serviceLineSupplementalInformations": {
            "description": "An array of supplemental information for the service line. This is the array version of the `serviceLineSupplementalInformation` property.\n\n This array is required when you plan to submit multiple [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the service line electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify additional information that is being held at the provider's office and is available upon request.\n\nYou can submit up to 10 objects in this array.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalServiceLineSupplementalInformation"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "serviceTaxAmount": {
            "description": "The amount of the service tax or surcharge, formatted as a decimal. Required when a service tax or surcharge applies to the service being reported. The `claimInformation.serviceLines.institutionalService.lineItemChargeAmount` must include the amount you report here.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "thirdPartyOrganizationNotes": {
            "description": "To provide additional information for comment or special instruction. Required when the TPO/repricer needs to forward additional information to the payer.",
            "maxLength": 80,
            "type": "string"
          }
        },
        "required": [
          "institutionalService"
        ],
        "type": "object"
      },
      "InstitutionalServiceLineDateInformation": {
        "deprecated": true,
        "properties": {
          "beginServiceDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endServiceDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "validDateInformation": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstitutionalServiceLineReferenceInformation": {
        "description": "Additional identifiers for the service line. We **strongly recommend** setting the `providerControlNumber` property for each service line within the claim.",
        "oneOf": [
          {
            "properties": {
              "providerControlNumber": {
                "description": "A unique identifier for this service line within the claim. It appears in the 835 (ERA) response as `lineItemControlNumber`, allowing you to correlate ERAs to the specific service lines from the original claim. We **strongly recommend** setting this property for every service line within the claim. We also recommend using a [ULID](https://github.com/ulid/spec) instead of a UUID because payers are only required to store up to 30 characters for this value.",
                "type": "string"
              }
            },
            "required": [
              "providerControlNumber"
            ],
            "title": "providerControlNumber",
            "type": "object"
          },
          {
            "properties": {
              "repricedLineItemRefNumber": {
                "description": "Required when a repricing (pricing) organization needs to have an identifying number on the service line in their submission to their payer organization. Providers shouldn't complete this property.",
                "type": "string"
              }
            },
            "required": [
              "repricedLineItemRefNumber"
            ],
            "title": "repricedLineItemRefNumber",
            "type": "object"
          },
          {
            "properties": {
              "adjustedRepricedLineItemRefNumber": {
                "description": "Required when a repricing (pricing) organization needs to have an identifying number on an adjusted service line in their submission to their payer organization. Providers shouldn't complete this property.",
                "type": "string"
              }
            },
            "required": [
              "adjustedRepricedLineItemRefNumber"
            ],
            "title": "adjustedRepricedLineItemRefNumber",
            "type": "object"
          }
        ]
      },
      "InstitutionalServiceLineReferringProvider": {
        "description": "Information about the provider who referred the patient for care.\n- Include this object only when the referring provider is different than the provider listed in the `attending` object.\n- This should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ReferringProviderType",
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility."
          },
          "providerUpinNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "referenceIdentification": {
            "description": "Additional identifiers for the provider. You can set `qualifier` to `2U` - Payer Identification Number.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/ServiceLineReferringProviderIdentificationQualifierCode",
            "description": "The type of identifier used in `secondaryIdentifier`. Can be set to `0B` - State License Number, `1G` - Provider UPIN Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and should not be used."
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in `secondaryIdentifierQualifierCode`.\n\nYou can only include one secondary identifier for the provider.",
            "maxLength": 50,
            "type": "string"
          },
          "stateLicenseNumber": {
            "deprecated": true,
            "type": "string"
          },
          "suffix": {
            "description": "The provider's suffix, such as Jr. or Sr.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalServiceLineRenderingProvider": {
        "description": "Information about the provider who delivered the medical services or non-surgical procedures in this service line. This must be an individual, not an organization, and you must include the provider's `lastName` and an identifier, which is typically the `npi`. The provider's `firstName` is also required, if applicable.\n\nInclude this object when the following are both true:\n    - The rendering provider for this service line is different than the provider listed in the `attending` and `rendering` objects for the entire claim.\n    - State or federal regulatory requirements call for a combined claim. A combined claim includes both facility and professional components, such as a Medicaid clinic bill or a critical access hospital claim.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/RenderingProviderType",
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility."
          },
          "providerUpinNumber": {
            "deprecated": true,
            "maxLength": 50,
            "type": "string"
          },
          "referenceIdentification": {
            "description": "Additional identifiers for the provider. You can set `qualifier` to `2U` - Payer Identification Number.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "secondaryIdentificationQualifierCode": {
            "$ref": "#/components/schemas/OperatingPhysicianIdentificationQualifierCode"
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in `secondaryIdentifierQualifierCode`.\n\nYou can only include one secondary identifier for the provider.",
            "maxLength": 50,
            "type": "string"
          },
          "stateLicenseNumber": {
            "deprecated": true,
            "type": "string"
          },
          "suffix": {
            "description": "The provider's suffix, such as Jr. or Sr.",
            "maxLength": 10,
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstitutionalServiceLineSupplementalInformation": {
        "properties": {
          "attachmentControlNumber": {
            "description": "The control number assigned to the attachment. Required when the `attachmentTransmissionCode` = `BM`, `EL`, `EM`, `FX`, or `FT`. \n\nThe payer uses this identifier to match the attachment to the claim. We recommend using a ULID or UUID of up to 50 characters.",
            "type": "string"
          },
          "attachmentReportTypeCode": {
            "$ref": "#/components/schemas/ServiceLineSupplementalInformationAttachmentReportTypeCode"
          },
          "attachmentTransmissionCode": {
            "$ref": "#/components/schemas/ServiceLineSupplementalInformationAttachmentTransmissionCode",
            "description": "Code identifying the method by which the provider's report is attached. Can be set to `AA` - Available on Request at Provider Site, `BM` - By Mail, `EL` - Electronically Only, `EM` - E-Mail, `FT` - File Transfer, or `FX` - By Fax.\n\nSet this to `EL` when you plan to submit attachments electronically through Stedi APIs."
          }
        },
        "required": [
          "attachmentReportTypeCode",
          "attachmentTransmissionCode"
        ],
        "type": "object"
      },
      "InstitutionalSubmitter": {
        "description": "The entity submitting the healthcare claim. This is an organization, such as a hospital or other treatment center.",
        "properties": {
          "contactInformation": {
            "$ref": "#/components/schemas/InstitutionalSubmitterContactInformation",
            "description": "Contact information for the institution submitting the claim. This should be the person or department that deals with data submission and claim processing issues. You must include at least one communication method (phone, fax, or email) in this object."
          },
          "organizationName": {
            "description": "The business name of the institution submitting the claim.",
            "maxLength": 60,
            "type": "string"
          },
          "taxId": {
            "description": "The submitter's Electronic Transmitter Identification Number (ETIN), **as assigned by the payer**. For some payers, this may be the same as the submitter's NPI, EIN/TIN, but it can also be another unique identifier. Payers can refer to this identifier as the Provider Number, Submitter ID, Submitter Identifier, Submitter Primary Number, Sender Code, Certified Contracted Provider ID, and other names.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "contactInformation",
          "organizationName",
          "taxId"
        ],
        "type": "object"
      },
      "InstitutionalSubmitterContactInformation": {
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "faxNumber": {
            "description": "The fax number.",
            "type": "string"
          },
          "name": {
            "description": "The full name of the person or office.",
            "maxLength": 60,
            "type": "string"
          },
          "phoneNumber": {
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code, BBB is the telephone number prefix, and CCCC is the telephone number. The phone number should only include the digits 0 to 9. Don't include separators, such as dashes, and don't include long distance access numbers, such as 1. For example, you would format the phone number 123-456-7890 as 1234567890.",
            "maxLength": 256,
            "type": "string"
          },
          "validContact": {
            "deprecated": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstitutionalSubscriber": {
        "description": "The person or entity who is the primary policyholder for the health plan _or_ a dependent with their own member ID.\n- When a dependent has a unique, payer-assigned member ID, treat them as the subscriber for the claim submission - include their information here and omit the `dependent` object from the request.\n- You must set the `dateOfBirth` and `gender` properties when the subscriber is the patient. Stedi determines that the subscriber is the patient when the `dependent` object is not included in the request.\n- If either `dateOfBirth` or `gender` is set, you must include both properties. You can either include both properties or neither within a single request.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The subscriber's address. Every claim must include address information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n      - The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n      - If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependents` object in the response.\n      - If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach."
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth, formatted as `YYYYMMDD`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The subscriber's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code identifying the gender. Can be set to `F` - Female, `M` - Male, or `U` - Unknown.\n\nSome payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records. If the gender isn't known or the patient declines to answer, use `U` or perform an eligibility check to determine the gender according to the payer's records."
          },
          "groupNumber": {
            "description": "The subscriber's health plan group number.",
            "maxLength": 50,
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name. **Don't** include the subscriber's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "maxLength": 60,
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "paymentResponsibilityLevelCode": {
            "$ref": "#/components/schemas/InstitutionalSubscriberPaymentResponsibilityLevelCode"
          },
          "policyNumber": {
            "deprecated": true,
            "description": "Deprecated.",
            "maxLength": 50,
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number. This must be a string of exactly nine numbers with no separators. For example, `123456789`.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "standardHealthId": {
            "deprecated": true,
            "description": "Deprecated. Use the `memberId` property instead.",
            "type": "string"
          },
          "suffix": {
            "description": "The subscriber's name suffix, such as Jr. or III. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "maxLength": 10,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "paymentResponsibilityLevelCode"
        ],
        "type": "object"
      },
      "InstitutionalSubscriberPaymentResponsibilityLevelCode": {
        "description": "The payer's level of responsibility for paying this claim. Can be set to `A` - Payer Responsibility Four, `B` - Payer Responsibility Five, `C` - Payer Responsibility Six, `D` - Payer Responsibility Seven, `E` - Payer Responsibility Eight, `F` - Payer Responsibility Nine, `G` - Payer Responsibility Ten, `H` - Payer Responsibility Eleven, `P` - Primary, `S` - Secondary, `T` Tertiary, or `U` - Unknown (only use in payer-to-payer COB claims).",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "P",
          "S",
          "T",
          "U"
        ],
        "type": "string"
      },
      "InsuranceDiscoveryCheckRequestContent": {
        "properties": {
          "dependent": {
            "$ref": "#/components/schemas/InsuranceDiscoveryDependent"
          },
          "encounter": {
            "$ref": "#/components/schemas/InsuranceDiscoveryEncounter"
          },
          "provider": {
            "$ref": "#/components/schemas/InsuranceDiscoveryProvider"
          },
          "subscriber": {
            "$ref": "#/components/schemas/InsuranceDiscoverySubscriber"
          }
        },
        "required": [
          "provider",
          "subscriber"
        ],
        "type": "object"
      },
      "InsuranceDiscoveryCheckResponseContent": {
        "properties": {
          "coveragesFound": {
            "description": "The number of potential coverage matches for the patient. This will be `0` if Stedi didn't find any matching coverage.",
            "type": "number"
          },
          "discoveryId": {
            "description": "A unique ID for this insurance discovery check. You can use it to retrieve the results asynchronously through the [Insurance Discovery Check Results](https://www.stedi.com/docs/api-reference/healthcare/get-insurance-discovery-results) endpoint.",
            "type": "string"
          },
          "errors": {
            "description": "When a payer rejects your eligibility check, the response contains one or more [`AAA` errors](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) that specify the reasons for the rejection and any recommended follow-up actions.\n\nAny errors that occur at the `payer`, `provider`, `subscriber`, or `dependents` levels are also included in this array, allowing you to review all errors in a central location. If there are no `AAA` errors, this array will be empty.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "items": {
            "description": "An array of potential coverage matches for the patient. This will only be populated if the insurance discovery check `status` is `COMPLETE`. Each item in the array contains information about a potential match, including the provider, subscriber, payer, and plan information.",
            "items": {
              "$ref": "#/components/schemas/InsuranceDiscoveryResponseFields"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/InsuranceDiscoveryMetadata"
          },
          "status": {
            "$ref": "#/components/schemas/DiscoveryStatus",
            "description": "The status of the discovery check. This is either `PENDING` or `COMPLETE`.\n    - If the status is `COMPLETE`, the `items` array will contain any potential coverage matches Stedi found for the patient.\n    - If the status is `PENDING`, the check is still in progress. You can immediately begin polling the [Insurance Discovery Check Results](https://www.stedi.com/docs/api-reference/healthcare/get-insurance-discovery-results) endpoint to retrieve the results asynchronously."
          }
        },
        "type": "object"
      },
      "InsuranceDiscoveryDependent": {
        "description": "Demographic information for the patient when they are a dependent on a health plan.\n- We **strongly recommend** providing as much information as possible to improve the probability of finding matching coverage. We especially recommend providing the dependent's Social Security Number and their address - particularly their zip code.\n- You should provide information for both the subscriber and the dependent in the request when possible.\n- If you only have the dependent's information, you should identify them in the `subscriber` object instead and leave this object empty. Note that some payers require information about both the dependent and the subscriber, so providing only the dependent's information limits Stedi's ability to return coverage matches for those payers.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The dependent's address. We strongly recommend providing this information if possible to improve the probability of finding matching coverage.\n\nWe especially recommend providing the patient’s ZIP code, as this helps narrow down the list of probable payers. Zip code search isn’t an exact match, so even the first 3-4 digits of the patient’s current zip code can help improve the results. If the patient’s current address isn’t available, you can try a full or partial zip code from one of the patient’s previous addresses or even one in close proximity."
          },
          "dateOfBirth": {
            "description": "The dependent's date of birth (DOB), formatted as YYYYMMDD.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The dependent's first name.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "The dependent's gender. This can be set to either `M` - Male or `F` - Female."
          },
          "lastName": {
            "description": "The dependent's last name.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "middleName": {
            "description": "The dependent's middle name or initial.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "ssn": {
            "description": "The dependent's Social Security Number (SSN). We strongly recommend providing this information if possible to improve the probability of finding matching coverage.",
            "pattern": "^(?:\\d{9}|\\d{3}-\\d{2}-\\d{4}|\\d{4})$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          }
        },
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "InsuranceDiscoveryEncounter": {
        "description": "The date range for the service being requested. If you don't specify a service date (either a single day or a range of dates), Stedi defaults to the current date.\n\n You can specify either a single `dateOfService` or a `beginningDateOfService` and `endDateOfService`.",
        "properties": {
          "beginningDateOfService": {
            "description": "The beginning date, formatted as YYYYMMDD.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateOfService": {
            "description": "The date of service, formatted as YYYYMMDD. You can use this value to specify a single occasion. If you don't specify a service date (either a single day or a range of dates), Stedi defaults to the current date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endDateOfService": {
            "description": "The end date, formatted as YYYYMMDD. If you don't specify an end date, Stedi defaults to the same date as `beginningDateOfService`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InsuranceDiscoveryMetadata": {
        "description": "Metadata about the response. Stedi uses this data for tracking and troubleshooting.",
        "properties": {
          "applicationMode": {
            "$ref": "#/components/schemas/ApplicationModes",
            "description": "The type of data in the request. This is always `production`.\n\nPayers may sometimes return other non-compliant values."
          },
          "traceId": {
            "description": "The unique ID Stedi assigns to this request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InsuranceDiscoveryProvider": {
        "description": "Information about the provider requesting the insurance discovery check.",
        "properties": {
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "maxLength": 15,
            "minLength": 10,
            "pattern": "^[12].*$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          }
        },
        "required": [
          "npi"
        ],
        "type": "object"
      },
      "InsuranceDiscoveryResponseFields": {
        "properties": {
          "benefitsInformation": {
            "description": "Information about the patient's healthcare benefits, such as coverage level (individual vs. family), coverage type (deductibles, copays, etc.), out of pocket maximums, and more. This is the same information you would get from a standard eligibility check.\n \n Payers typically return at least the following properties: `code`, `coverageLevelCode`, `serviceTypeCodes`, and either `benefitAmount` or `benefitPercent`. However, the exact properties returned in this object are up to the payer's discretion.\n \n Visit [Determine patient benefits](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits) in our eligibility check documentation for more information about benefit types, details about how to interpret the response, and additional examples.",
            "items": {
              "$ref": "#/components/schemas/DiscoveryBenefitsInformation"
            },
            "type": "array"
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Information indicating how likely it is that this coverage is a match for the patient submitted in the insurance discovery request. \n\n Even if the confidence level is high, you **must** always check the subscriber information to confirm that the coverage is a match for the patient."
          },
          "dependent": {
            "$ref": "#/components/schemas/DiscoveryResponseDependent",
            "description": "Information about the dependent for this coverage. You should **always** review this information to ensure that the coverage Stedi found is a match for the patient."
          },
          "payer": {
            "$ref": "#/components/schemas/DiscoveryPayer",
            "description": "Information about the payer for this coverage. Note that payer names and IDs aren't normalized, so you'll need to handle matching these results to Stedi's Payer Network or your own internal payer list."
          },
          "planDateInformation": {
            "$ref": "#/components/schemas/DiscoveryPlanDateInformation",
            "description": "Contains the dates associated with coverage for this health plan. This information can help you determine the patient's eligibility for benefits.\n    - All dates are formatted as YYYYMMDD (for single dates) or as YYYYMMDD-YYYYMMDD (for date ranges).\n    - Properties contain a single date unless otherwise noted.\n    - Most payers return either `plan` or `planBegin` and `planEnd`, but the exact dates returned depend on the payer's discretion and the specific health plan.\n    - If the date of service is after the earliest ending `plan`, `eligibility`, `planEnd`, `eligibilityEnd`, `policyEffective`, or `policyExpiration` value, the patient likely doesn't have active coverage."
          },
          "planInformation": {
            "$ref": "#/components/schemas/PlanInformation",
            "description": "Additional identification for the patient's health plan."
          },
          "provider": {
            "$ref": "#/components/schemas/DiscoveryResponseProvider",
            "description": "Information about the provider who requested the insurance discovery check."
          },
          "subscriber": {
            "$ref": "#/components/schemas/DiscoveryResponseSubscriber",
            "description": "Information about the subscriber for this coverage. You should **always** review this information to ensure that the coverage Stedi found is a match for the patient."
          }
        },
        "type": "object"
      },
      "InsuranceDiscoverySubscriber": {
        "description": "Demographic information for the patient when they are the health plan subscriber. We strongly recommend providing as much information as possible to improve the probability of finding matching coverage.\n\nWe especially recommend providing the subscriber's Social Security Number and their address - particularly their zip code.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The subscriber's current or previous address. We strongly recommend providing this information if possible to improve the probability of finding matching coverage.\n\nWe especially recommend providing the patient’s ZIP code, as this helps narrow down the list of probable payers. Zip code search isn’t an exact match, so even the first 3-4 digits of the patient’s current zip code can help improve the results. If the patient’s current address isn’t available, you can try a full or partial zip code from one of the patient’s previous addresses or even one in close proximity."
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth (DOB), formatted as YYYYMMDD.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The subscriber's first name.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "The subscriber's gender. This can be set to either `M` - Male or `F` - Female."
          },
          "lastName": {
            "description": "The subscriber's last name.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number (SSN). We strongly recommend providing this information if possible to improve the probability of finding matching coverage. The patient's full SSN is preferred, but even the last 4 digits of the SSN can help narrow down matching coverage.",
            "pattern": "^(?:\\d{9}|\\d{3}-\\d{2}-\\d{4}|\\d{4})$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          }
        },
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "InsuranceTypeCode": {
        "description": "Code identifying the type of insurance policy.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "12",
          "13",
          "14",
          "15",
          "16",
          "41",
          "42",
          "43",
          "47",
          "AP",
          "C1",
          "CO",
          "CP",
          "D",
          "DB",
          "EP",
          "FF",
          "GP",
          "HM",
          "HN",
          "HS",
          "IN",
          "IP",
          "LC",
          "LD",
          "LI",
          "LT",
          "MA",
          "MB",
          "MC",
          "MH",
          "MI",
          "MP",
          "OT",
          "PE",
          "PL",
          "PP",
          "PR",
          "PS",
          "QM",
          "RP",
          "SP",
          "TF",
          "WC",
          "WU"
        ],
        "type": "string"
      },
      "InsuranceTypeName": {
        "description": "The full name of the insurance type code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Medicare Secondary Working Aged Beneficiary or Spouse with Employer Group Health Plan",
          "Medicare Secondary End-Stage Renal Disease Beneficiary in the Mandated Coordination Period with an Employer's Group Health Plan",
          "Medicare Secondary, No-fault Insurance including Auto is Primary",
          "Medicare Secondary Worker's Compensation",
          "Medicare Secondary Public Health Service (PHS)or Other Federal Agency",
          "Medicare Secondary Black Lung",
          "Medicare Secondary Veteran's Administration",
          "Medicare Secondary Disabled Beneficiary Under Age 65 with Large Group Health Plan (LGHP)",
          "Medicare Secondary, Other Liability Insurance is Primary",
          "Auto Insurance Policy",
          "Commercial",
          "Consolidated Omnibus Budget Reconciliation Act (COBRA)",
          "Medicare Conditionally Primary",
          "Disability",
          "Disability Benefits",
          "Exclusive Provider Organization",
          "Family or Friends",
          "Group Policy",
          "Health Maintenance Organization (HMO)",
          "Health Maintenance Organization (HMO) - Medicare Risk",
          "Special Low Income Medicare Beneficiary",
          "Indemnity",
          "Individual Policy",
          "Long Term Care",
          "Long Term Policy",
          "Life Insurance",
          "Litigation",
          "Medicare Part A",
          "Medicare Part B",
          "Medicaid",
          "Medigap Part A",
          "Medigap Part B",
          "Medicare Primary",
          "Other",
          "Property Insurance - Personal",
          "Personal",
          "Personal Payment (Cash - No Insurance)",
          "Preferred Provider Organization (PPO)",
          "Point of Service (POS)",
          "Qualified Medicare Beneficiary",
          "Property Insurance - Real",
          "Supplemental Policy",
          "Tax Equity Fiscal Responsibility Act (TEFRA)",
          "Workers Compensation",
          "Wrap Up Policy"
        ],
        "type": "string"
      },
      "InternalFailureExceptionResponseContent": {
        "description": "The server response when an unexpected error occurred while processing request.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "LineAdjudicationInformation": {
        "description": "Includes service line adjudication information for coordination of benefits between the initial payers of a health care claim and all subsequent payers.",
        "properties": {
          "adjudicationOrPaymentDate": {
            "description": "The date the other payer adjudicated or paid the claim.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "bundledOrUnbundledLineNumber": {
            "description": "The LX assigned number of the service line into which this service line is bundled. It's only used to bundle service lines.",
            "type": "string"
          },
          "claimAdjustmentInformation": {
            "description": "Required when the payer made line level adjustments which caused the amount paid to differ from the amount originally charged. You can include up to five objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustment"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "otherPayerPrimaryIdentifier": {
            "description": "The payer ID for the payer responsible for reimbursement.",
            "type": "string"
          },
          "paidServiceUnitCount": {
            "description": "The number of paid units from the remittance advice. expressed as a decimal. When paid units are not present on the remittance advice, use the original billed units. The maximum length for this property is 8 digits excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is three.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "type": "string"
          },
          "procedureCodeDescription": {
            "description": "The meaning of the procedure code.",
            "type": "string"
          },
          "procedureModifier": {
            "description": "Modifiers that convey special circumstances related to the performance of the service. You can include up to four modifiers in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "remainingPatientLiability": {
            "description": "The amount of the service line that the patient is still responsible for, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "serviceIdQualifier": {
            "$ref": "#/components/schemas/LineAdjudicationInformationServiceIdQualifier"
          },
          "serviceLinePaidAmount": {
            "description": "The amount paid for this service line, expressed as a decimal. Zero (0) is an acceptable value.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          }
        },
        "required": [
          "adjudicationOrPaymentDate",
          "otherPayerPrimaryIdentifier",
          "paidServiceUnitCount",
          "procedureCode",
          "serviceIdQualifier",
          "serviceLinePaidAmount"
        ],
        "type": "object"
      },
      "LineAdjudicationInformationProductOrServiceIDQualifier": {
        "description": "Code identifying the type of `procedureCode`. Can be set to `ER` - Jurisdiction Specific Procedure and Supply Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `HP` -  Health Insurance Prospective Payment System (HIPPS) Skilled Nursing Facility Rate Code, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, or `WK` - Advanced Billing Concepts (ABC) Codes. Note that ABC codes are deprecated and shouldn't be used in new claims. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#product-or-service-id-qualifier-codes) for a complete list and usage guidelines.",
        "enum": [
          "ER",
          "HC",
          "HP",
          "IV",
          "WK"
        ],
        "type": "string"
      },
      "LineAdjudicationInformationServiceIdQualifier": {
        "description": "Code identifying the type of `procedureCode`. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#composite-medical-procedure-product-or-service-id-qualifier-codes) for a complete list.",
        "enum": [
          "ER",
          "HC",
          "HP",
          "IV",
          "WK"
        ],
        "type": "string"
      },
      "LineAdjustmentInformation": {
        "deprecated": true,
        "properties": {
          "bundledOrUnbundledLineNumber": {
            "pattern": "^\\d{1,6}$",
            "type": "string"
          },
          "claimAdjustment": {
            "$ref": "#/components/schemas/InstitutionalClaimAdjustment"
          },
          "claimPaidDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "otherPayerPrimaryIdentifier": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "paidServiceUnitCount": {
            "pattern": "^\\d{1,8}(\\.\\d{1,3})?$",
            "type": "string"
          },
          "procedureCode": {
            "maxLength": 48,
            "type": "string"
          },
          "procedureCodeDescription": {
            "maxLength": 80,
            "type": "string"
          },
          "procedureModifiers": {
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "remainingPatientLiability": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "serviceIdQualifier": {
            "$ref": "#/components/schemas/LineAdjudicationInformationProductOrServiceIDQualifier"
          },
          "serviceLinePaidAmount": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          }
        },
        "required": [
          "claimPaidDate",
          "otherPayerPrimaryIdentifier",
          "paidServiceUnitCount",
          "procedureCode",
          "remainingPatientLiability",
          "serviceIdQualifier",
          "serviceLinePaidAmount"
        ],
        "type": "object"
      },
      "LinePricingInformation": {
        "deprecated": true,
        "properties": {
          "apgAmount": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "apgCode": {
            "type": "string"
          },
          "exceptionCode": {
            "$ref": "#/components/schemas/InstitutionalClaimsExceptionCode"
          },
          "flatRateAmount": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "measurementUnitCode": {
            "$ref": "#/components/schemas/InstitutionalMeasurementUnit"
          },
          "policyComplianceCode": {
            "$ref": "#/components/schemas/PolicyComplianceCode"
          },
          "pricingMethodologyCode": {
            "$ref": "#/components/schemas/PricingMethodologyCode"
          },
          "rejectReasonCode": {
            "$ref": "#/components/schemas/RejectReasonCode"
          },
          "repricedAllowedAmount": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "repricedApprovedHCPCSCode": {
            "maxLength": 48,
            "type": "string"
          },
          "repricedApprovedServiceUnitCount": {
            "pattern": "^\\d{1,8}(\\.\\d{1,3})?$",
            "type": "string"
          },
          "repricedOrganizationIdentifier": {
            "type": "string"
          },
          "repricedSavingAmount": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "serviceIdQualifier": {
            "$ref": "#/components/schemas/InstitutionalProcedureIdentifier"
          }
        },
        "required": [
          "pricingMethodologyCode",
          "repricedAllowedAmount"
        ],
        "type": "object"
      },
      "ListPayerRecordsCsvOutputPayload": {
        "description": "All supported payer records in CSV format. The first row contains the header with field names, and subsequent rows contain the payer data.\n\nTo render this data as a CSV file, you must save it to a file with a `.csv` extension.",
        "type": "string"
      },
      "ListPayerRecordsResponseContent": {
        "properties": {
          "items": {
            "description": "Payers that Stedi supports for each transaction type. Results are returned in alphabetical order of the Stedi ID.",
            "items": {
              "$ref": "#/components/schemas/PayerRecord"
            },
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "MaintenanceReasonCode": {
        "description": "Code identifying the reason for the changes to subscriber identifying information, such as name, date of birth, or address. This is always `25`\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "25"
        ],
        "type": "string"
      },
      "MaintenanceTypeCode": {
        "description": "The maintenance type code. Used to acknowledge a change in the identifying elements for the subscriber from those submitted in the original eligibility check request. It can also be included when the payer used the birth sequence number from the original request to locate the subscriber in their system. This is always `001`\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "001"
        ],
        "type": "string"
      },
      "Matches": {
        "description": "Shows which properties in the payer record match the search query. This information helps you understand why Stedi returned this payer and which parts of the payer record matched the search terms. It's also especially useful for debugging search queries and building user interfaces that display matching text.\n- Matching text is wrapped in `<b>` HTML tags for highlighting.\n- This object only contains properties with matching text. For example, if none of the payer's aliases matched the search query, this object will not include the `aliases` property.",
        "properties": {
          "aliases": {
            "description": "The parts of the payer's aliases that match the search query. Each alias that contains matching text is included as a separate entry, with matching portions wrapped in `<b>` tags. For example, searching for `XYZ` might return: [`<b>XYZ</b>123`, `ABC<b>XYZ</b>`].",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The part of the payer's display name that matched the search query. For example, searching for `Blue` might return: `Blue Cross <b>Blue</b> Shield`.",
            "type": "string"
          },
          "names": {
            "description": "The parts of the payer's other names that match the search query. Each name that contains matching text is included as a separate entry, with matching portions wrapped in `<b>` tags. For example, searching for `Health` might return: [`Community <b>Health</b> Plan`, `<b>Health</b> Partners`].",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "primaryPayerId": {
            "description": "The part of the primary payer ID that matched the search query. For example, if you search for '12345', the results for a payer with primary payer ID `12345ABC` would return: `<b>12345</b>ABC`.",
            "type": "string"
          },
          "stediId": {
            "description": "The part of the payer's Stedi payer ID that matched the search query. Stedi payer IDs only support exact substring matching (no prefix or fuzzy matching). For example, if you search for `KRP`, the results for a payer with Stedi payer ID 'KRPCH' would be: `<b>KRP</b>CH`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MaximumResponseSizeExceeded": {
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementQualifier": {
        "description": "Code identifying the specific measurement. Can be set to `HT` - Height, `R1` - Hemoglobin, `R2` - Hematocrit, `R3` - Epoetin Starting Dosage, or `R4` - Creatinine.",
        "enum": [
          "HT",
          "R1",
          "R2",
          "R3",
          "R4"
        ],
        "type": "string"
      },
      "MeasurementReferenceIdentificationCode": {
        "description": "Code identifying the type of measurement. Can be set to `OG` - Original or `TR` - Test Results.",
        "enum": [
          "OG",
          "TR"
        ],
        "type": "string"
      },
      "MeasurementUnit": {
        "description": "Code identifying the unit of measurement. Can be set to `MJ` - Minutes or `UN` - Unit. Minutes is required for anesthesia services. Note that anesthesia time is counted from the moment that the practitioner, having completed the preoperative evaluation, starts an intravenous line, places monitors, administers pre-anesthesia sedation, or otherwise physically begins to prepare the patient for anesthesia. Time continues throughout the case and while the practitioner accompanies the patient to the post-anesthesia recovery unit (PACU). Time stops when the practitioner releases the patient to the care of PACU personnel.",
        "enum": [
          "MJ",
          "UN"
        ],
        "type": "string"
      },
      "MeasurementUnitCode": {
        "description": "Code identifying the unit of measurement. Can be set to `F2` - International Unit, `GR` - Gram, `ME` - Milligram, `ML` - Milliliter, or `UN` - Unit.",
        "enum": [
          "F2",
          "GR",
          "ME",
          "ML",
          "UN"
        ],
        "type": "string"
      },
      "Measurements": {
        "properties": {
          "measurementQualifier": {
            "$ref": "#/components/schemas/MeasurementQualifier"
          },
          "measurementReferenceIdentificationCode": {
            "$ref": "#/components/schemas/MeasurementReferenceIdentificationCode"
          },
          "testResults": {
            "description": "The value of the measurement.",
            "type": "string"
          }
        },
        "required": [
          "measurementQualifier",
          "measurementReferenceIdentificationCode",
          "testResults"
        ],
        "type": "object"
      },
      "MedicalProcedure": {
        "properties": {
          "diagnosisCodePointer": {
            "description": "The diagnosis code pointer.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string"
          },
          "procedureModifiers": {
            "description": "Procedure modifiers that provide additional information related to the service.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/MedicalProcedureProductOrServiceIDQualifier"
          }
        },
        "required": [
          "procedureCode",
          "productOrServiceIDQualifier"
        ],
        "type": "object"
      },
      "MedicalProcedureProductOrServiceIDQualifier": {
        "description": "Code identifying the type/source of the `procedureCode`. You can set this to `AD` - American Dental Association Codes, `CJ` - Current Procedural Terminology (CPT) Codes, `HC` - Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes, `ID` - International Classification of Diseases, 9th Revision, Clinical Modification (ICD-9-CM) - Procedure, `IV` - Home Infusion EDI Coalition (HIEC) Product/Service Code, `N4` - National Drug Code in 5-4-2 Format, or `ZZ` - Mutually Defined.",
        "enum": [
          "AD",
          "CJ",
          "HC",
          "ID",
          "IV",
          "N4",
          "ZZ"
        ],
        "type": "string"
      },
      "MedicareInpatientAdjudication": {
        "properties": {
          "capitalExceptionAmount": {
            "description": "The capital exception amount, expressed as a decimal.",
            "type": "string"
          },
          "capitalHSPDRGAmount": {
            "description": "The Prospective Payment System (PPS) capital, hospital specific portion, Diagnosis Related Group (DRG) amount. Expressed as a decimal.",
            "type": "string"
          },
          "claimDRGAmount": {
            "description": "The Diagnosis Related Group (DRG) amount, expressed as a decimal.",
            "type": "string"
          },
          "claimDisproportionateShareAmount": {
            "description": "The disproportionate share amount, expressed as a decimal.",
            "type": "string"
          },
          "claimIndirectTeachingAmount": {
            "description": "The indirect teaching amount, expressed as a decimal.",
            "type": "string"
          },
          "claimMspPassThroughAmount": {
            "description": "The Medicare Secondary Payer (MSP) pass-through amount, expressed as a decimal.",
            "type": "string"
          },
          "claimPaymentRemarkCode": {
            "description": "The claim payment remark code. Refer to the X12 [Remittance Advice Remark Codes](https://x12.org/codes/remittance-advice-remark-codes) for a complete list. You can include up to four codes in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "claimPpsCapitalAmount": {
            "description": "The Prospective Payment System (PPS) capital amount, expressed as a decimal.",
            "type": "string"
          },
          "claimPpsCapitalOutlierAmmount": {
            "description": "The Prospective Payment System (PPS) capital outlier amount, expressed as a decimal.",
            "type": "string"
          },
          "costReportDayCount": {
            "description": "The number of cost report days, expressed as a decimal.",
            "type": "string"
          },
          "coveredDaysOrVisitsCount": {
            "description": "The number of covered days, expressed as a decimal.",
            "type": "string"
          },
          "lifetimePsychiatricDaysCount": {
            "description": "The number of lifetime psychiatric days, expressed as a decimal.",
            "type": "string"
          },
          "nonPayableProfessionalComponentBilledAmount": {
            "description": "The professional component amount billed but not payable, expressed as a decimal.",
            "type": "string"
          },
          "oldCapitalAmount": {
            "description": "The old capital amount, expressed as a decimal.",
            "type": "string"
          },
          "ppsCapitalDshDrgAmount": {
            "description": "The prospective Payment System (PPS) capital, disproportionate share, hospital Diagnosis Related Group (DRG) amount. Expressed as a decimal.",
            "type": "string"
          },
          "ppsCapitalHspDrgAmount": {
            "description": "The Prospective Payment System (PPS) capital, disproportionate share, hospital Diagnosis Related Group (DRG) amount. Expressed as a decimal.",
            "type": "string"
          },
          "ppsCapitalImeAmount": {
            "description": "The Prospective Payment System (PPS) capital Indirect Medical Education (IME) claim amount, expressed as a decimal.",
            "type": "string"
          },
          "ppsOperatingFederalSpecificDrgAmount": {
            "description": "The federal specific Diagnosis Related Group (DRG) amount, expressed as a decimal.",
            "type": "string"
          },
          "ppsOperatingHospitalSpecificDrgAmount": {
            "description": "The hospital specific Diagnosis Related Group (DRG) amount, expressed as a decimal.",
            "type": "string"
          }
        },
        "required": [
          "coveredDaysOrVisitsCount"
        ],
        "type": "object"
      },
      "MedicareOutpatientAdjudication": {
        "description": "Claim-level data related to the adjudication of Medicare claims not related to an inpatient setting. Required when outpatient adjudication information is reported in the remittance advice _or_ when you need to report remark codes.",
        "properties": {
          "claimPaymentRemarkCode": {
            "description": "The remark code. Visit the X12 [Remittance Advice Remark Codes](https://x12.org/codes/remittance-advice-remark-codes) for a complete list. You can include up to five codes in this array.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "endStageRenalDiseasePaymentAmount": {
            "description": "The End-Stage Renal Disease (ESRD) payment amount, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "hcpcsPayableAmount": {
            "description": "The claim Health Care Financing Administration Common Procedural Coding System (HCPCS) payable amount, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "nonPayableProfessionalComponentBilledAmount": {
            "description": "The professional component amount billed but not payable, expressed as a decimal.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "reimbursementRate": {
            "description": "The reimbursement percentage, expressed as a decimal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Member": {
        "properties": {
          "dateOfBirth": {
            "description": "The dependent's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The dependent's first name as specified on their insurance policy.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/MemberGender"
          },
          "groupNumber": {
            "description": "The group number associated with the subscriber and dependent's insurance policy.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The dependent's last name as specified on their insurance policy.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "MemberGender": {
        "description": "A code indicating the dependent's gender. If the claim set the dependent's gender to `U` for unknown, you should omit this property from the claim status request.",
        "enum": [
          "M",
          "F"
        ],
        "type": "string"
      },
      "Meta": {
        "description": "Metadata that helps Stedi track and debug the response.",
        "properties": {
          "applicationMode": {
            "description": "Whether this is a test or production ERA.",
            "type": "string"
          },
          "senderId": {
            "description": "An identifier for the most recent sender of the ERA. This is usually not the original sender, so this value is unlikely to be a payer ID. When Stedi processes and delivers ERAs through the clearinghouse, this value is always `STEDI`.",
            "type": "string"
          },
          "traceId": {
            "description": "Not currently used.",
            "type": "string"
          },
          "transactionId": {
            "description": "The Stedi transaction identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MilitaryServiceRankCode": {
        "description": "Payers may sometimes return other non-compliant values.",
        "enum": [
          "A1",
          "A2",
          "A3",
          "B1",
          "B2",
          "C1",
          "C2",
          "C3",
          "C4",
          "C5",
          "C6",
          "C7",
          "C8",
          "C9",
          "E1",
          "F1",
          "F2",
          "F3",
          "F4",
          "G1",
          "G4",
          "L1",
          "L2",
          "L3",
          "L4",
          "L5",
          "L6",
          "M1",
          "M2",
          "M3",
          "M4",
          "M5",
          "M6",
          "P1",
          "P2",
          "P3",
          "P4",
          "P5",
          "R1",
          "R2",
          "S1",
          "S2",
          "S3",
          "S4",
          "S5",
          "S6",
          "S7",
          "S8",
          "S9",
          "SA",
          "SB",
          "SC",
          "T1",
          "V1",
          "W1"
        ],
        "type": "string"
      },
      "MissingParameter": {
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NoTransactionsFound": {
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotSupportedBreakdown": {
        "properties": {
          "total": {
            "description": "Total number of matching payers that don't support this transaction type.",
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "total"
        ],
        "type": "object"
      },
      "OccurrenceInformation": {
        "properties": {
          "occurrenceSpanCode": {
            "maxLength": 30,
            "type": "string"
          },
          "occurrenceSpanCodeDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "required": [
          "occurrenceSpanCode",
          "occurrenceSpanCodeDate"
        ],
        "type": "object"
      },
      "OccurrenceSpanInformation": {
        "properties": {
          "occurrenceSpanCode": {
            "maxLength": 30,
            "type": "string"
          },
          "occurrenceSpanCodeEndDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "occurrenceSpanCodeStartDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "required": [
          "occurrenceSpanCode",
          "occurrenceSpanCodeEndDate",
          "occurrenceSpanCodeStartDate"
        ],
        "type": "object"
      },
      "OperatingPhysician": {
        "properties": {
          "firstName": {
            "description": "The physician's first name.",
            "maxLength": 35,
            "type": "string"
          },
          "identificationQualifierCode": {
            "$ref": "#/components/schemas/OperatingPhysicianIdentificationQualifierCode"
          },
          "lastName": {
            "description": "The physician's last name.",
            "maxLength": 60,
            "type": "string"
          },
          "middleName": {
            "description": "The physician's middle name or initial.",
            "maxLength": 25,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the physician.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The physician's business name.",
            "maxLength": 60,
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "The identifier specified in `identificationQualifierCode`.\n\nYou can only include one secondary identifier for the provider.",
            "type": "string"
          },
          "suffix": {
            "description": "The physician's name suffix, such as Jr. or III.",
            "maxLength": 10,
            "type": "string"
          }
        },
        "required": [
          "lastName"
        ],
        "type": "object"
      },
      "OperatingPhysicianIdentificationQualifierCode": {
        "description": "The type of identifier used in `secondaryIdentifier`. Can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `G2` - Provider Commercial Number, or `LU` - Location Number. Note that UPIN is deprecated and should not be used.",
        "enum": [
          "0B",
          "1G",
          "G2",
          "LU"
        ],
        "type": "string"
      },
      "Ordering": {
        "deprecated": true,
        "description": "Deprecated; please use `claimInformation.serviceLines.orderingProvider` instead.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress"
          },
          "claimOfficeNumber": {
            "type": "string"
          },
          "commercialNumber": {
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation"
          },
          "employerId": {
            "type": "string"
          },
          "employerIdentificationNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "locationNumber": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "naic": {
            "type": "string"
          },
          "npi": {
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "payerIdentificationNumber": {
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "type": "string"
          },
          "ssn": {
            "description": "Social Security Number without spaces or punctuation (9 digits)",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "taxonomyCode": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrthodonticTotalMonthsOfTreatment": {
        "properties": {
          "monthsCount": {
            "description": "The estimated number of treatment months, expressed as a decimal.",
            "format": "double",
            "type": "number"
          },
          "monthsRemaining": {
            "description": "The number of months remaining in the treatment, expressed as a decimal.",
            "format": "double",
            "type": "number"
          },
          "treatmentIndicator": {
            "description": "The only allowed value is `Y`, which indicates that services reported in this claim are for orthodontic purposes. Only include this property if you haven't set the `monthsCount` or `monthsRemaining` properties.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OtherDiagnosisInformation": {
        "properties": {
          "otherDiagnosisCode": {
            "description": "A diagnosis code for the patient. It must be a valid code from the appropriate coding system. **Do not** submit the decimal for ICD codes; the decimal is implied. Also, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.",
            "maxLength": 30,
            "type": "string"
          },
          "presentOnAdmissionIndicator": {
            "$ref": "#/components/schemas/OtherDiagnosisInformationPresentOnAdmissionIndicator",
            "description": "Indicates whether the other diagnosis was present on admission. Can be set to `N` - No (onset did NOT occur prior to admission to the hospital), `Y` - Yes (onset occurred prior to admission to the hospital), `U` - Unknown, or `W` - Not Applicable."
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/OtherDiagnosisInformationQualifierCode"
          }
        },
        "required": [
          "otherDiagnosisCode",
          "qualifierCode"
        ],
        "type": "object"
      },
      "OtherDiagnosisInformationPresentOnAdmissionIndicator": {
        "enum": [
          "N",
          "Y",
          "U",
          "W"
        ],
        "type": "string"
      },
      "OtherDiagnosisInformationQualifierCode": {
        "description": "Code identifying the type of diagnosis code used. Can be set to `ABF` - International Classification of Diseases Clinical Modification (ICD-10-CM) or `BF` - International Classification of Diseases Clinical Modification (ICD-9-CM). Note that ICD-9 is deprecated and cannot be used in new claims.",
        "enum": [
          "ABF",
          "BF"
        ],
        "type": "string"
      },
      "OtherInsuredIdentifierTypeCode": {
        "description": "Code identifying the type of identifier. Can be set to `II` - Standard Unique Health Identifier for each individual in the United States or `MI` - Member Identification Number. The code `MI` should be the subscriber's identification number as assigned by the payer, such as their subscriber ID. You should also use `MI` in claims submitted to the Indian Health Service/Contract Health Services (IHS/CHS) Fiscal Intermediary for the purpose of reporting the Tribe Residency Code (Tribe County State). For IHS/CHS claims, you should also put the SSN in the `otherInsuredAdditionalIdentifier` property.)",
        "enum": [
          "II",
          "MI"
        ],
        "type": "string"
      },
      "OtherInsuredQualifier": {
        "description": "Code identifying the type of entity. Can be set to `1` - Person or `2` - Non-Person Entity.",
        "enum": [
          "1",
          "2"
        ],
        "type": "string"
      },
      "OtherPayerAssistantSurgeon": {
        "description": "Information about the assistant surgeon.",
        "properties": {
          "entityTypeQualifier": {
            "$ref": "#/components/schemas/OtherPayerEntityTypeQualifier",
            "description": "Code identifying the type of entity. Can be set to `1` - Person or `2` - Non-Person Entity. In practice, you should always set this to `1` - Person."
          },
          "otherPayerAssistantSurgeonIdentifier": {
            "description": "An identifier for the assistant surgeon. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `G2` - Commercial Number, or `LU` - Location Number. Note that UPIN is deprecated and shouldn't be used in new claims. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "entityTypeQualifier",
          "otherPayerAssistantSurgeonIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerAttendingProvider": {
        "description": "Information regarding the other payer's attending provider. The attending provider is the provider who is primarily responsible for the care of the patient.",
        "properties": {
          "otherPayerAttendingProviderIdentifier": {
            "description": "The provider's identifier. The `qualifier` can be set to `OB` - State License Number, `1G` - Provider UPIN Number, `G2` - Provider Commercial Number, or `LU` - Location Number. Note that UPIN numbers are deprecated and should not be used in new claims.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerAttendingProviderIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerBillingProvider": {
        "description": "Information about the billing provider.",
        "properties": {
          "entityTypeQualifier": {
            "$ref": "#/components/schemas/OtherPayerBillingProviderEntityTypeQualifier"
          },
          "otherPayerBillingProviderIdentifier": {
            "description": "An identifier for the billing provider. The qualifier can be set to `LU` - Location Number, or `G2` - Provider Commercial Number. You can include up to two objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "entityTypeQualifier",
          "otherPayerBillingProviderIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerBillingProviderEntityTypeQualifier": {
        "description": "Code identifying the type of entity. Can be set to `1` - Person or `2` - Non-Person Entity.",
        "enum": [
          "1",
          "2"
        ],
        "type": "string"
      },
      "OtherPayerEntityTypeQualifier": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string"
      },
      "OtherPayerIdentifierTypeCode": {
        "description": "Code designating the type of identifier. Can be set to `PI` - Payor Identification or `XV` - Centers for Medicare/Medicaid Services PlanID. Use code value `XV` when reporting Health Plan ID (HPID) or Other Entity Identifier (OEID).",
        "enum": [
          "PI",
          "XV"
        ],
        "type": "string"
      },
      "OtherPayerName": {
        "description": "Details about the other payer.",
        "properties": {
          "otherPayerAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The payer's address."
          },
          "otherPayerAdjudicationOrPaymentDate": {
            "description": "The date the other payer adjudicated the claim. Required when this payer has previously adjudicated the claim and you aren’t including a value for `LineAdjudicationInformation.adjudicationOrPaymentDate`.",
            "type": "string"
          },
          "otherPayerClaimAdjustmentIndicator": {
            "description": "The only valid value is `true`. Required when Required when the claim is being sent in the payer-to-payer COB model AND the destination payer is secondary to this payer AND this payer has re-adjudicated the claim.",
            "type": "boolean"
          },
          "otherPayerClaimControlNumber": {
            "description": "The claim control number assigned by this payer.",
            "type": "string"
          },
          "otherPayerIdentifier": {
            "description": "The identifier specified in `otherPayerIdentifierCode`. When sending Line Adjudication Information for this payer, the identifier sent in `lineAdjudicationInformation.otherPayerPrimaryIdentifier` must match this value.",
            "type": "string"
          },
          "otherPayerIdentifierTypeCode": {
            "$ref": "#/components/schemas/OtherPayerIdentifierTypeCode"
          },
          "otherPayerOrganizationName": {
            "description": "The payer's organization name.",
            "type": "string"
          },
          "otherPayerPriorAuthorizationNumber": {
            "description": "The authorization number assigned by this payer.",
            "type": "string"
          },
          "otherPayerPriorAuthorizationOrReferralNumber": {
            "description": "The referral number assigned by this payer.",
            "type": "string"
          },
          "otherPayerSecondaryIdentifier": {
            "description": "An additional identification number to identify the other payer. The `qualifier` can be set to `2U` - Payer Identification Number, `EI` - Employer Identification Number, `FY` - Claim Office Number, or `NF` - National Association of Insurance Commissioners (NAIC) Code.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerSecondaryIdentifierItem"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerIdentifier",
          "otherPayerIdentifierTypeCode",
          "otherPayerOrganizationName"
        ],
        "type": "object"
      },
      "OtherPayerOperatingPhysician": {
        "description": "Information regarding the other payer's operating physician. The operating physician is the provider who performed the procedure.",
        "properties": {
          "otherPayerOperatingPhysicianIdentifier": {
            "description": "The `qualifier` can be set to `OB` - State License Number, `1G` - Provider UPIN Number, `G2` - Provider Commercial Number, or `LU` - Location Number. Note that UPIN numbers are deprecated and should not be used in new claims.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerOperatingPhysicianIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerOtherOperatingPhysician": {
        "description": "Information regarding the other payer's other operating physician. The other operating physician is the provider who performed a secondary surgical procedure or assisted the `otherPayerOperatingPhysician`.",
        "properties": {
          "otherPayerOtherOperatingPhysicianIdentifier": {
            "description": "The physician's identifier. The `qualifier` can be set to `OB` - State License Number, `1G` - Provider UPIN Number, `G2` - Provider Commercial Number, or `LU` - Location Number. Note that UPIN numbers are deprecated and should not be used in new claims.",
            "items": {
              "$ref": "#/components/schemas/InstitutionalReferenceIdentification"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerOtherOperatingPhysicianIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerReferringProvider": {
        "description": "Information about the provider who directed the patient to the rendering provider for care. For example, a primary care physician may refer patients to a specialist.",
        "properties": {
          "otherPayerReferringProviderIdentifier": {
            "description": "An identifier for the referring provider. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `LU` - Location Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerReferringProviderIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerRenderingProvider": {
        "description": "Information about the rendering provider.",
        "properties": {
          "entityTypeQualifier": {
            "$ref": "#/components/schemas/OtherPayerRenderingProviderEntityTypeQualifier"
          },
          "otherPayerRenderingProviderSecondaryIdentifier": {
            "description": "An identifier for the provider. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `LU` - Location Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "entityTypeQualifier"
        ],
        "type": "object"
      },
      "OtherPayerRenderingProviderEntityTypeQualifier": {
        "description": "Code identifying the type of entity. Can be set to `1` - Person or `2` - Non-Person Entity.",
        "enum": [
          "1",
          "2"
        ],
        "type": "string"
      },
      "OtherPayerSecondaryIdentifierItem": {
        "properties": {
          "identifier": {
            "description": "The reference number.",
            "type": "string"
          },
          "otherIdentifier": {
            "deprecated": true,
            "type": "string"
          },
          "qualifier": {
            "description": "The code identifying the type of reference number.",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "qualifier"
        ],
        "type": "object"
      },
      "OtherPayerServiceFacilityLocation": {
        "properties": {
          "otherPayerServiceFacilityLocationSecondaryIdentifier": {
            "description": "A secondary identifier for the service facility location. The qualifier can be set to `0B` - State License Number, `LU` - Location Number, or `G2` - Provider Commercial Number. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerServiceFacilityLocationSecondaryIdentifier"
        ],
        "type": "object"
      },
      "OtherPayerSupervisingProvider": {
        "description": "Information about the supervising provider.",
        "properties": {
          "otherPayerSupervisingProviderIdentifier": {
            "description": "An identifier for the supervising provider. The qualifier can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `LU - Location Number or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "otherPayerSupervisingProviderIdentifier"
        ],
        "type": "object"
      },
      "OtherProcedureInformation": {
        "properties": {
          "otherProcedureCode": {
            "maxLength": 30,
            "type": "string"
          },
          "otherProcedureDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/OtherProcedureInformationQualifierCode"
          }
        },
        "required": [
          "otherProcedureCode",
          "qualifierCode"
        ],
        "type": "object"
      },
      "OtherProcedureInformationQualifierCode": {
        "enum": [
          "BBQ",
          "BQ"
        ],
        "type": "string"
      },
      "OtherSubscriber": {
        "description": "Information about the other subscriber, when a corrected priority payer has been identified.",
        "properties": {
          "firstName": {
            "description": "The subscriber's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name.",
            "type": "string"
          },
          "memberId": {
            "description": "The subscriber's member ID for their health plan.",
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "type": "string"
          },
          "organizationName": {
            "description": "The subscriber's business name, if the subscriber is not an individual.",
            "type": "string"
          },
          "standardUniqueHealthIdentifierForEachIndividualInTheUnitedStates": {
            "description": "Deprecated",
            "type": "string"
          },
          "suffix": {
            "description": "The subscriber's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxId": {
            "description": "The subscriber's Federal Taxpayer's Identification Number. Only used when the subscriber is a business entity and not an individual.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OtherSubscriberInformation": {
        "properties": {
          "benefitsAssignmentCertificationIndicator": {
            "$ref": "#/components/schemas/OtherSubscriberInformationBenefitsAssignmentCertificationIndicator"
          },
          "claimFilingIndicatorCode": {
            "$ref": "#/components/schemas/ClaimFilingIndicatorCode"
          },
          "claimLevelAdjustments": {
            "description": "Use this object to report prior payers' claim level adjustments that cause the amount paid to differ from the amount originally charged. Codes and associated amounts must come from either paper remittance advice or 835s (Electronic Remittance Advice) received on the claim. When the information originates from a paper remittance advice that does not use the standard Claim Adjustment Reason Codes, you must convert them to standard Claim Adjustment Reason Codes.",
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustment"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "individualRelationshipCode": {
            "$ref": "#/components/schemas/ClaimsIndividualRelationshipCode"
          },
          "insuranceGroupOrPolicyNumber": {
            "description": "The group or policy number.",
            "type": "string"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/OtherSubscriberInformationInsuranceTypeCode"
          },
          "medicareOutpatientAdjudication": {
            "$ref": "#/components/schemas/MedicareOutpatientAdjudication"
          },
          "nonCoveredChargeAmount": {
            "description": "Required when the destination payer's cost avoidance policy allows providers to bypass claim submission to the otherwise prior payer identified in `otherSubscriberInformation.otherPayerName`. The amount must equal the total claim charge amount you reported in `claimInformation.claimChargeAmount`.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "otherInsuredGroupName": {
            "description": "The name of the health plan.",
            "type": "string"
          },
          "otherPayerBillingProvider": {
            "description": "Information about the billing provider.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerBillingProvider"
            },
            "type": "array"
          },
          "otherPayerName": {
            "$ref": "#/components/schemas/OtherPayerName"
          },
          "otherPayerReferringProvider": {
            "description": "Information about the provider who directed the patient to the rendering provider for care. For example, a primary care physician may refer patients to a specialist.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerReferringProvider"
            },
            "type": "array"
          },
          "otherPayerRenderingProvider": {
            "description": "Information about the rendering provider.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerRenderingProvider"
            },
            "type": "array"
          },
          "otherPayerServiceFacilityLocation": {
            "description": "Information about the service facility location.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerServiceFacilityLocation"
            },
            "type": "array"
          },
          "otherPayerSupervisingProvider": {
            "description": "Information about the supervising provider.",
            "items": {
              "$ref": "#/components/schemas/OtherPayerSupervisingProvider"
            },
            "type": "array"
          },
          "otherSubscriberName": {
            "$ref": "#/components/schemas/OtherSubscriberName"
          },
          "patientSignatureGeneratedForPatient": {
            "description": "Code indicating how the patient or subscriber authorization signatures were obtained and how they are being retained by the provider. Can be set to `true` - Signature generated by provider because the patient was not physically present for services. This means the signature was generated by an entity other than the patient according to State or Federal law. This property is **required** for claims submitted to Medicare.",
            "type": "boolean"
          },
          "payerPaidAmount": {
            "description": "The total amount in dollars the payer has paid on this claim. It is acceptable to set this to `0` (Zero). This is required when you include the `payToPlan` object, and you should set it to the amount the Medicaid agency actually paid.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "paymentResponsibilityLevelCode": {
            "$ref": "#/components/schemas/OtherSubscriberInformationPaymentResponsibilityLevelCode"
          },
          "releaseOfInformationCode": {
            "$ref": "#/components/schemas/ReleaseOfInformationCode"
          },
          "remainingPatientLiability": {
            "description": "This is the remaining amount (as determined by the provider) to be paid after the other payer identified in the `otherPayerName` object has adjudicated the claim.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          }
        },
        "required": [
          "benefitsAssignmentCertificationIndicator",
          "claimFilingIndicatorCode",
          "individualRelationshipCode",
          "otherPayerName",
          "otherSubscriberName",
          "paymentResponsibilityLevelCode",
          "releaseOfInformationCode"
        ],
        "type": "object"
      },
      "OtherSubscriberInformationBenefitsAssignmentCertificationIndicator": {
        "description": "Code indicating whether whether or not the insured has authorized the plan to remit payment directly to the provider. Can be set to `N` - No (Payment should go to the patient), `Y` - Yes (Payment should go directly to the provider), or `W` - Not Applicable.",
        "enum": [
          "N",
          "W",
          "Y"
        ],
        "type": "string"
      },
      "OtherSubscriberInformationInsuranceTypeCode": {
        "description": "Code identifying the type of insurance policy within a specific insurance program. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#insurance-type-codes) for a complete list.",
        "enum": [
          "12",
          "13",
          "14",
          "15",
          "16",
          "41",
          "42",
          "43",
          "47"
        ],
        "type": "string"
      },
      "OtherSubscriberInformationPaymentResponsibilityLevelCode": {
        "description": "Code identifying the insurance carrier's level of responsibility for a payment of a claim. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#payment-responsibility-sequence-number-codes) for a complete list. You may need to use other codes if the patient has multiple insurance policies. For example, if a patient is covered by both Medicare and an employer-sponsored commercial plan, you could bill the commercial payer first as `P` and then bill the Medicare payer second as `S`.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "P",
          "S",
          "T",
          "U"
        ],
        "type": "string"
      },
      "OtherSubscriberName": {
        "description": "The person or entity who is the primary policyholder for the other payer's health plan.",
        "properties": {
          "otherInsuredAdditionalIdentifier": {
            "description": "The primary policyholder's Social Security Number. The Social Security Number must be a string of exactly nine numbers with no separators. For example `123456789`.",
            "type": "string"
          },
          "otherInsuredAddress": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The other subscriber's address."
          },
          "otherInsuredFirstName": {
            "description": "The primary policyholder's first name, if they are an individual.",
            "type": "string"
          },
          "otherInsuredIdentifier": {
            "description": "The identifier you specified in `otherInsuredIdentifierTypeCode`.",
            "type": "string"
          },
          "otherInsuredIdentifierTypeCode": {
            "$ref": "#/components/schemas/OtherInsuredIdentifierTypeCode"
          },
          "otherInsuredLastName": {
            "description": "The primary policyholder's last name or organizational name. Don't include the primary policyholder's name suffix, such as Jr. or III. Use the designated `otherInsuredNameSuffix` property instead.",
            "type": "string"
          },
          "otherInsuredMiddleName": {
            "description": "The primary policyholder's middle name or initial, if they are an individual.",
            "type": "string"
          },
          "otherInsuredNameSuffix": {
            "description": "The primary policyholder's name suffix, such as Jr. or III. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          },
          "otherInsuredQualifier": {
            "$ref": "#/components/schemas/OtherInsuredQualifier"
          }
        },
        "required": [
          "otherInsuredIdentifier",
          "otherInsuredIdentifierTypeCode",
          "otherInsuredLastName",
          "otherInsuredQualifier"
        ],
        "type": "object"
      },
      "PDFData": {
        "properties": {
          "data": {
            "contentEncoding": "byte",
            "description": "A base64 encoded string of the CMS-1500 Claim Form PDF. To render the PDF, you must decode the base64 string and save it to a file with a `.pdf` extension.",
            "type": "string"
          },
          "transactionId": {
            "description": "A unique identifier for the processed claim associated with the specified `businessId`. \n\nThis ID is included in the transaction processed event for each claim, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve this ID through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within Stedi.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PDFError": {
        "properties": {
          "error": {
            "description": "A message indicating the type of error that occurred.",
            "type": "string"
          },
          "transactionId": {
            "description": "A unique identifier for the claim with one or more PDF errors.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatientClaimStatusDetails": {
        "description": "Patient information and the status of claims related to the patient. You can use the `claims.claimStatus.referencedTransactionTraceNumber` in this object to correlate the 277CA with the original claim.",
        "properties": {
          "claims": {
            "description": "Status information for the claim or service line.",
            "items": {
              "$ref": "#/components/schemas/ReportsClaims"
            },
            "type": "array"
          },
          "dependent": {
            "$ref": "#/components/schemas/PatientClaimStatusDetailsDependent"
          },
          "subscriber": {
            "$ref": "#/components/schemas/PatientClaimStatusDetailsSubscriber"
          }
        },
        "type": "object"
      },
      "PatientClaimStatusDetailsDependent": {
        "description": "Information about a dependent who received services related to the claim.",
        "properties": {
          "firstName": {
            "description": "The first name of the dependent. Can be up to 35 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the dependent. Can be up to 60 characters.",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name or initial of the dependent. Can be up to 25 characters.",
            "type": "string"
          },
          "suffix": {
            "description": "The suffix of the dependent, such as Jr or III. Can be up to 10 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatientClaimStatusDetailsSubscriber": {
        "description": "Information about the primary policy holder for the health plan.",
        "properties": {
          "employerIdentificationNumber": {
            "description": "The subscriber's employer identification number. This may be used in conjunction with a worker's compensation claim.",
            "type": "string"
          },
          "firstName": {
            "description": "The first name of the subscriber. Can be up to 35 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the subscriber. Can be up to 60 characters.",
            "type": "string"
          },
          "memberId": {
            "description": "The subscriber's member ID for their health plan.",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name or initial of the subscriber. Can be up to 25 characters.",
            "type": "string"
          },
          "organizationName": {
            "description": "The subscriber's business name. Applicable when an employer submitted a worker's compensation claim, or other situations when an employer is the subscriber.",
            "type": "string"
          },
          "standardUniqueHealthIdentifierForEachIndividualInTheUnitedStates": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "suffix": {
            "description": "The suffix of the subscriber, such as Jr or III. Can be up to 10 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatientConditionDescription1": {
        "description": "A description of the patient's condition.",
        "enum": [
          "A",
          "C",
          "D",
          "E",
          "F",
          "G",
          "M"
        ],
        "type": "string"
      },
      "PatientConditionInformationVision": {
        "description": "Required on vision claims involving replacement lenses or frames when this information is known to impact reimbursement. .",
        "properties": {
          "certificationConditionIndicator": {
            "$ref": "#/components/schemas/PatientConditionInformationVisionCertificationConditionIndicator"
          },
          "codeCategory": {
            "$ref": "#/components/schemas/CodeCategory"
          },
          "conditionCodes": {
            "description": "Code indicating the reason for the vision services. Visit [Claim code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#vision-condition-codes) for a complete list.",
            "items": {
              "$ref": "#/components/schemas/PatientConditionInformationVisionConditionCodesItem"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "certificationConditionIndicator",
          "codeCategory",
          "conditionCodes"
        ],
        "type": "object"
      },
      "PatientConditionInformationVisionCertificationConditionIndicator": {
        "description": "Code indicating whether there is a certification. Can be set to `N` - No or `Y` - Yes.",
        "enum": [
          "N",
          "Y"
        ],
        "type": "string"
      },
      "PatientConditionInformationVisionConditionCodesItem": {
        "description": "Code indicating the reason for the vision services. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#vision-condition-codes) for a complete list.",
        "enum": [
          "L1",
          "L2",
          "L3",
          "L4",
          "L5"
        ],
        "type": "string"
      },
      "PatientReasonForVisit": {
        "properties": {
          "patientReasonForVisitCode": {
            "description": "The patient's reason for visit code. It must be a valid code from the appropriate coding system. **Do not** submit the decimal for ICD codes; the decimal is implied. Also, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.",
            "maxLength": 30,
            "type": "string"
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/PatientReasonForVisitQualifierCode"
          }
        },
        "required": [
          "patientReasonForVisitCode",
          "qualifierCode"
        ],
        "type": "object"
      },
      "PatientReasonForVisitQualifierCode": {
        "description": "Code identifying the type of reason for visit code used. Can be set to `APR` - International Classification of Diseases Clinical Modification Patient's Reason for Visit or `PR` - International Classification of Diseases Clinical Modification Patient's Reason for Visit. Note that ICD-9 is deprecated and cannot be used in new claims.",
        "enum": [
          "APR",
          "PR"
        ],
        "type": "string"
      },
      "PayToAddressName": {
        "description": "Use when the address for payment is different than that of the billing provider for this claim.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "The address information."
          },
          "entityTypeQualifier": {
            "$ref": "#/components/schemas/PayToAddressNameEntityTypeQualifier"
          }
        },
        "required": [
          "address",
          "entityTypeQualifier"
        ],
        "type": "object"
      },
      "PayToAddressNameEntityTypeQualifier": {
        "description": "Code identifying the type of entity. Can be set to `2` - Non-Person Entity.",
        "enum": [
          "2"
        ],
        "type": "string"
      },
      "PayToPlan": {
        "description": "Use for subrogation payment requests. If you include this information, you must also set the `claimInformation.otherSubscriberInformation.payerPaidAmount` to the amount the payer (for example, Medicaid) actually paid.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address of the pay-to-plan organization."
          },
          "organizationName": {
            "description": "The last name of the individual, or the business name of the pay-to-plan organization.",
            "type": "string"
          },
          "primaryIdentifier": {
            "description": "The identifier you specified in `primaryIdentifierTypeCode`.",
            "type": "string"
          },
          "primaryIdentifierTypeCode": {
            "$ref": "#/components/schemas/PrimaryIdentifierTypeCode"
          },
          "secondaryIdentifier": {
            "description": "The secondary identifier you specified in `secondaryIdentifierTypeCode`.",
            "type": "string"
          },
          "secondaryIdentifierTypeCode": {
            "$ref": "#/components/schemas/SecondaryIdentifierTypeCode"
          },
          "taxIdentificationNumber": {
            "description": "The Employer Identification Number (EIN). This must be a string of exactly nine numbers with no separators.",
            "maxLength": 9,
            "minLength": 9,
            "type": "string"
          }
        },
        "required": [
          "address",
          "organizationName",
          "primaryIdentifier",
          "primaryIdentifierTypeCode",
          "taxIdentificationNumber"
        ],
        "type": "object"
      },
      "PayToPlanName": {
        "description": "Use for subrogation payment requests. If you include this information, you must also set the `claimInformation.otherSubscriberInformation.payerPaidAmount` to the amount the payer (for example, Medicaid) actually paid.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/InstitutionalAddress",
            "description": "Specify the location of the named party."
          },
          "claimOfficeNumber": {
            "description": "The Claim Office Number.",
            "maxLength": 50,
            "type": "string"
          },
          "identificationCode": {
            "description": "The identification code specified by the `identificationCodeQualifier`.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "identificationCodeQualifier": {
            "$ref": "#/components/schemas/PayToPlanNameIdentificationCodeQualifier"
          },
          "naic": {
            "description": "The National Association of Insurance Commisioners (NAIC) code. This is the five-digit identifier assigned to each insurance company.",
            "pattern": "^\\d{5}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The business name of the organization to which the payment should be made.",
            "maxLength": 60,
            "type": "string"
          },
          "payerIdentificationNumber": {
            "description": "The payer identification number. Only include this information when the `identificationCodeQualifier` is set to `XV` - Centers for Medicare and Medicaid Services PlanID.",
            "maxLength": 50,
            "type": "string"
          },
          "taxId": {
            "description": "The payer tax identification number (TIN). This is a unique number assigned to the payer by the IRS.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "identificationCodeQualifier",
          "organizationName",
          "taxId"
        ],
        "type": "object"
      },
      "PayToPlanNameIdentificationCodeQualifier": {
        "description": "The type of identification code used to identify the organization. Can be set to `PI` - Payer Identification or `XV` - Centers for Medicare and Medicaid Services PlanID. Use `XV` when reporting the Health Plan ID (HPID) or Other Entity Identifier (OEID).",
        "enum": [
          "PI",
          "XV"
        ],
        "type": "string"
      },
      "Payee": {
        "description": "Information about the provider receiving the payment.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/PayeeAddress",
            "description": "The payee's address information."
          },
          "centersForMedicareAndMedicaidServicesPlanId": {
            "deprecated": true,
            "description": "Formerly used to report the payee's Centers for Medicare and Medicaid Services (CMS) Plan ID. This used to report the Health Plan ID (HPID) or Other Entity Identifier (OEID). The Centers for Medicare and Medicaid Services (CMS) no longer uses HPID, so this property will not be populated.",
            "type": "string"
          },
          "federalTaxPayersIdentificationNumber": {
            "description": "The payee's Federal Taxpayer's Identification Number (when the payee is a business) or the payee's social security number (when the payee is an individual provider).",
            "type": "string"
          },
          "name": {
            "description": "The payee's name. This can be the name of an individual or an organization.",
            "type": "string"
          },
          "nationalCouncilForPrescriptionDrugProgramsPharmacyNumber": {
            "description": "The payee's National Council for Prescription Drugs Pharmacy Number.",
            "type": "string"
          },
          "npi": {
            "description": "The payee's National Provider Identifier (NPI).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "payeeIdentification": {
            "description": "Other information necessary to identify the payee.",
            "type": "string"
          },
          "remittanceDeliveryMethod": {
            "$ref": "#/components/schemas/PayeeRemittanceDeliveryMethod",
            "description": "Method for delivering remittance advice to the payee."
          },
          "stateLicenseNumber": {
            "description": "The payee's State License Number.",
            "type": "string"
          },
          "taxId": {
            "description": "The payee's Federal Tax Identification Number (TIN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayeeAddress": {
        "description": "Address information for the payee.",
        "properties": {
          "address1": {
            "description": "The first line of the address.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address.",
            "type": "string"
          },
          "city": {
            "description": "The city where the address is located.",
            "type": "string"
          },
          "countryCode": {
            "description": "The standard code for the country from Part 1 of ISO 3166.",
            "type": "string"
          },
          "countrySubCode": {
            "description": "The standard code for the country subdivision from Part 2 of ISO 3166.",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code for the address, excluding punctuation and blanks.",
            "type": "string"
          },
          "state": {
            "description": "The standard code for the state or province. For example `PA` for Pennsylvania.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayeeRemittanceDeliveryMethod": {
        "description": "The method by which the remittance advice is delivered. This is used when the remittance is separate from the payment.",
        "properties": {
          "email": {
            "description": "The email address.",
            "type": "string"
          },
          "ftp": {
            "description": "Information for file transfer deliveries, such as SFTP, FTP, or FTPS.",
            "type": "string"
          },
          "name": {
            "description": "The name of the third party processor, if required, that would be the first recipient of the remittance.",
            "type": "string"
          },
          "onLine": {
            "description": "The web address of the online portal for secure hosted or other electronic delivery. The URL is typically provided without the scheme and separator. For example, `stedi.com`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Payer": {
        "description": "Information about the payer providing the benefits information. The response will always include the payer's business name and an identifier, such as the payer's tax ID. Most payers also include contact information.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckPayerError"
            },
            "type": "array"
          },
          "centersForMedicareAndMedicaidPlanId": {
            "description": "The payer's Centers for Medicare and Medicaid Services PlanID.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformation",
            "description": "The payer's contact information.\n\nNote that when `contacts.communicationMode` is set to `UR`, the `communicationNumber` property may not contain a valid URL. Most payers provide a partial web address for their provider portal, or something similar, such as `www.example.com/portal`. You must add the appropriate scheme and separators, such as `https://` or `http://`, to make it a valid URL."
          },
          "employersId": {
            "deprecated": true,
            "description": "Deprecated; The payer's identification number for the entity receiving the benefits information.\nThis shape is deprecated: This property is no longer used.",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/PayerEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type qualifier for the payer. Can be set to `Person` (not commonly used) or `Non-Person Entity` (most common).\n\nPayers may sometimes return other non-compliant values."
          },
          "etin": {
            "description": "The payer's Electronic Transmitter Identification Number (ETIN).",
            "type": "string"
          },
          "federalTaxpayersIdNumber": {
            "description": "The payer's federal taxpayer's identification number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "firstName": {
            "description": "The payer's first name, when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "lastName": {
            "description": "The payer's last name. Used when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "middleName": {
            "description": "The payer's middle name or initial, when the payer is an individual (not commonly used).",
            "type": "string"
          },
          "naic": {
            "description": "The payer's National Association of Insurance Commissioners (NAIC) identification number.",
            "type": "string"
          },
          "name": {
            "description": "The payer's business name, when the payer is not a person.",
            "type": "string"
          },
          "npi": {
            "description": "The payer's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "payorIdentification": {
            "description": "The payor identification.",
            "type": "string"
          },
          "suffix": {
            "description": "The payer's name suffix, such as Jr. or III. Used when the payer is an individual (not commonly used).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayerContactInformation": {
        "description": "The payer's business contact information.",
        "properties": {
          "contactMethods": {
            "description": "Each contact will have a single property set, except for phone with extension.",
            "items": {
              "$ref": "#/components/schemas/ContactMethods"
            },
            "type": "array"
          },
          "contactName": {
            "description": "The name of the contact person or entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayerEntityIdentifier": {
        "description": "The entity identifier code for the payer.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Third-Party Administrator",
          "Employer",
          "Gateway Provider",
          "Plan Sponsor",
          "Payer"
        ],
        "type": "string"
      },
      "PayerEntityIdentifierCode": {
        "description": "Entity identifier code for payers in claim status reports",
        "enum": [
          "AY",
          "PR"
        ],
        "type": "string"
      },
      "PayerEntityIdentifierCodeValue": {
        "description": "Human-readable descriptions for payer entity identifier codes",
        "enum": [
          "Clearinghouse",
          "Payer"
        ],
        "type": "string"
      },
      "PayerRecord": {
        "properties": {
          "aliases": {
            "description": "Alternative IDs associated with a payer. If a payer changes their `primaryPayerId`, aliases allow you to continue sending transactions to the payer using the old ID uninterrupted.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "coverageTypes": {
            "description": "A list of insurance coverage types that indicates whether this payer supports transactions for medical coverage, dental coverage, or both. For example: `[\"medical\"]` or `[\"medical\", \"dental\"]`.\n\nWhen this array isn't in the response, it means Stedi hasn't classified the payer's coverage types yet, **not** that the payer doesn't support any coverage types.",
            "items": {
              "$ref": "#/components/schemas/CoverageType"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The payer's business name, such as Cigna or Aetna. This is the name most commonly used to identify the payer.",
            "type": "string"
          },
          "employerIdentificationNumbers": {
            "description": "Employer Identification Numbers (EINs) associated with this payer.",
            "items": {
              "description": "A valid Employer Identification Number (EIN) in the format XX-XXXXXXX",
              "pattern": "^[0-9]{2}-[0-9]{7}$",
              "type": "string"
            },
            "type": "array"
          },
          "enrollment": {
            "$ref": "#/components/schemas/EnrollmentInfo",
            "description": "Details about the [transaction enrollment process](https://www.stedi.com/docs/healthcare/transaction-enrollment) for this payer, if available. This object may not be returned for some payers."
          },
          "names": {
            "description": "Alternative names associated with a payer. These additional names help you search for and identify payers using the name most familiar to your organization.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "parentPayerGroupId": {
            "description": "The payer's parent payer group entity. This is metadata Stedi uses internally. It doesn't necessarily relate to the payer's enrollment process or other capabilities.",
            "type": "string"
          },
          "primaryPayerId": {
            "description": "The most commonly used ID for a payer. This value often corresponds to the name the payer uses internally and provides to patients on member ID cards.",
            "type": "string"
          },
          "stediId": {
            "description": "A unique ID that Stedi assigned to this payer and uses internally for routing requests. This ID will not change even if the `primaryPayerId` is updated.",
            "type": "string"
          },
          "transactionSupport": {
            "$ref": "#/components/schemas/TransactionSupport"
          }
        },
        "required": [
          "aliases",
          "displayName",
          "names",
          "primaryPayerId",
          "stediId",
          "transactionSupport"
        ],
        "type": "object"
      },
      "PaymentFormatCode": {
        "description": "Identifies the specific electronic payment format used for ACH transactions. These formats determine the structure and content of the electronic payment message.",
        "enum": [
          "CCP",
          "CTX"
        ],
        "type": "string"
      },
      "PaymentInfo": {
        "description": "Detailed payment information for a specific claim.",
        "properties": {
          "claimAdjustments": {
            "description": "Adjustments applied to this claim.",
            "items": {
              "$ref": "#/components/schemas/ClaimAdjustments"
            },
            "type": "array"
          },
          "claimContactInformation": {
            "description": "Contact information for claim-related communications.",
            "items": {
              "$ref": "#/components/schemas/ReportsContactInformation"
            },
            "type": "array"
          },
          "claimPaymentInfo": {
            "$ref": "#/components/schemas/PaymentInfoClaimPaymentInfo",
            "description": "Basic claim payment information including amounts and status."
          },
          "claimReceivedDate": {
            "description": "The date the claim was received by the payer.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "claimStatementPeriodEnd": {
            "description": "The claim period end date in ISO 8601 format (YYYY-MM-DD). This format is intentionally inconsistent with other date properties to maintain backwards compatibility.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "claimStatementPeriodStart": {
            "description": "The claim period start date in ISO 8601 format (YYYY-MM-DD). This format is intentionally inconsistent with other date properties to maintain backwards compatibility.\n\nIf the response doesn’t include a `claimStatementPeriodEnd`, you should assume the end date is the same as the start date.",
            "pattern": "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "claimSupplementalInformation": {
            "$ref": "#/components/schemas/PaymentInfoClaimSupplementalInformation",
            "description": "Supplemental information about the claim."
          },
          "claimSupplementalInformationQuantities": {
            "$ref": "#/components/schemas/PaymentInfoClaimSupplementalInformationQuantities",
            "description": "Supplemental quantity information about the claim."
          },
          "correctedPatientOrInsuredName": {
            "$ref": "#/components/schemas/PaymentInfoCorrectedPatientOrInsuredName",
            "description": "Corrected patient or insured name information."
          },
          "correctedPriorityPayer": {
            "$ref": "#/components/schemas/CorrectedPriorityPayer",
            "description": "Corrected priority payer information."
          },
          "coverageExpirationDate": {
            "description": "The expiration date of the patient's coverage.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "crossoverCarrier": {
            "$ref": "#/components/schemas/CrossoverCarrier",
            "description": "Crossover carrier information."
          },
          "inpatientAdjudication": {
            "$ref": "#/components/schemas/PaymentInfoInpatientAdjudication",
            "description": "Inpatient adjudication information."
          },
          "otherClaimRelatedIdentification": {
            "$ref": "#/components/schemas/PaymentInfoOtherClaimRelatedIdentification",
            "description": "Other claim-related identification numbers."
          },
          "otherSubscriber": {
            "$ref": "#/components/schemas/OtherSubscriber",
            "description": "Other subscriber information."
          },
          "outpatientAdjudication": {
            "$ref": "#/components/schemas/PaymentInfoOutpatientAdjudication",
            "description": "Outpatient adjudication information."
          },
          "patientName": {
            "$ref": "#/components/schemas/PaymentInfoPatientName",
            "description": "Patient name information."
          },
          "renderingProvider": {
            "$ref": "#/components/schemas/PaymentInfoRenderingProvider",
            "description": "Information about the provider who rendered services."
          },
          "renderingProviderIdentification": {
            "$ref": "#/components/schemas/PaymentInfoRenderingProviderIdentification",
            "description": "Rendering provider identification information."
          },
          "serviceLines": {
            "description": "Service lines included in this claim.",
            "items": {
              "$ref": "#/components/schemas/ClaimPaymentAdviceServiceLines"
            },
            "type": "array"
          },
          "subscriber": {
            "$ref": "#/components/schemas/PaymentInfoSubscriber",
            "description": "Subscriber information for the insurance policy."
          }
        },
        "type": "object"
      },
      "PaymentInfoClaimPaymentInfo": {
        "description": "Claim payment information for the payment info structure.",
        "properties": {
          "claimFilingIndicatorCode": {
            "$ref": "#/components/schemas/ClaimPaymentAdviceFilingIndicatorCode",
            "description": "A code identifying the type of claim. For example `DS` - Disability. Visit [ERA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-filing-indicator-code) for a complete list and usage notes."
          },
          "claimFrequencyCode": {
            "description": "A code identifying the frequency of the claim. It matches what the payer received in the original claim. Visit [Bill Type Frequency Codes](https://www.nubc.org/system/files/media/file/2019/06/billTypeFrequencyCodes837.pdf) for a complete list and definitions.",
            "type": "string"
          },
          "claimPaymentAmount": {
            "description": "The total amount of the claim payment, expressed as a decimal. This value can be positive, zero, or negative.",
            "type": "string"
          },
          "claimStatusCode": {
            "$ref": "#/components/schemas/ClaimStatusCode",
            "description": "The status of the claim. For example, `1` - Processed as Primary. Visit [ERA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-status-code) for a complete list and usage notes."
          },
          "diagnosisRelatedGroupDRGCode": {
            "description": "Code indicating a patient's diagnosis group based on their medical symptoms.",
            "type": "string"
          },
          "diagnosisRelatedGroupDRGWeight": {
            "description": "The adjudicated diagnosis-related group (DRG) weight.",
            "type": "string"
          },
          "dischargeFraction": {
            "description": "The adjudicated discharge fraction.",
            "type": "string"
          },
          "facilityTypeCode": {
            "description": "A code identifying where services were or may be performed. This is the [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for Professional or Dental Services.",
            "type": "string"
          },
          "patientControlNumber": {
            "description": "The patient control number provided in the original claim. You can use this value to correlate the payer's response with the original claim.",
            "type": "string"
          },
          "patientResponsibilityAmount": {
            "description": "The amount the patient is responsible for paying. This can include the deductible, non-covered services, co-pay, and co-insurance. This is not used for reversals.",
            "type": "string"
          },
          "payerClaimControlNumber": {
            "description": "The payer's internal control number for the claim.",
            "type": "string"
          },
          "totalClaimChargeAmount": {
            "description": "The total amount of submitted charges for this claim, expressed as a decimal. This can be positive, zero, or negative. For example, this may contain a negative charge for a reversal claim.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoClaimSupplementalInformation": {
        "description": "Additional information about the claim payment. All values are expressed as decimals.",
        "properties": {
          "coverageAmount": {
            "description": "The total covered charges. This is the sum of the original submitted provider charges that are considered for payment under the health plan. This excludes charges considered not covered, but includes reductions to payments of covered services, such as patient deductibles.",
            "type": "string"
          },
          "discountAmount": {
            "description": "This is the Prompt Pay Discount Amount.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory1": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 1.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory2": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 2.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory3": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 3.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory4": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 4.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory5": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 5.",
            "type": "string"
          },
          "interest": {
            "description": "The interest amount.",
            "type": "string"
          },
          "negativeLedgerBalance": {
            "description": "The negative ledger balance. Only used by Medicare Part A and Medicare Part B.",
            "type": "string"
          },
          "patientAmountPaid": {
            "description": "The amount the patient has already paid.",
            "type": "string"
          },
          "perDayLimit": {
            "description": "The per day limit.",
            "type": "string"
          },
          "tax": {
            "description": "The total taxes.",
            "type": "string"
          },
          "totalClaimBeforeTaxes": {
            "description": "The total claim amount before taxes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoClaimSupplementalInformationQuantities": {
        "description": "Additional quantity information about the claim payment. All values are expressed as decimals.",
        "properties": {
          "coInsuredActual": {
            "description": "The actual amount of co-insurance designated by the health plan.",
            "type": "string"
          },
          "coveredActual": {
            "description": "The number of days covered.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory1": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 1.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory2": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 2.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory3": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 3.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory4": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 4.",
            "type": "string"
          },
          "federalMedicareOrMedicaidPaymentMandateCategory5": {
            "description": "Federal Medicare or Medicaid Payment Mandate - Category 5.",
            "type": "string"
          },
          "lifeTimeReserveActual": {
            "description": "The actual lifetime reserve days.",
            "type": "string"
          },
          "lifeTimeReserveEstimated": {
            "description": "The estimated lifetime reserve days.",
            "type": "string"
          },
          "nonCoveredEstimated": {
            "description": "The non-covered estimated amount.",
            "type": "string"
          },
          "notReplacedBloodUnits": {
            "description": "The number of non-replaced blood units.",
            "type": "string"
          },
          "outlierDays": {
            "description": "The number of outlier days.",
            "type": "string"
          },
          "prescription": {
            "description": "The prescription.",
            "type": "string"
          },
          "visits": {
            "description": "The number of visits.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoCorrectedPatientOrInsuredName": {
        "description": "Used to provide corrected information about the insured.",
        "properties": {
          "firstName": {
            "description": "The insured's first name.",
            "type": "string"
          },
          "insuredsChangedUniqueIdentificationNumber": {
            "description": "The insured's changed unique identification number.",
            "type": "string"
          },
          "lastName": {
            "description": "The insured's last name.",
            "type": "string"
          },
          "middleName": {
            "description": "The insured's middle name or initial of the insured.",
            "type": "string"
          },
          "organizationName": {
            "description": "The business name of the insured when they are not an individual.",
            "type": "string"
          },
          "suffix": {
            "description": "The insured's name suffix, such as Jr. or III.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoInpatientAdjudication": {
        "description": "Information about the adjudication of inpatient claims.",
        "properties": {
          "claimDRGAmount": {
            "description": "The Diagnosis Related Group (DRG) amount.",
            "type": "string"
          },
          "claimDisproportionateShareAmount": {
            "description": "The Disproportionate Share amount.",
            "type": "string"
          },
          "claimIndirectTeachingAmount": {
            "description": "The indirect teaching amount.",
            "type": "string"
          },
          "claimMSPPassThroughAmount": {
            "description": "The Medicare Secondary Payer (MSP) pass-through amount.",
            "type": "string"
          },
          "claimPPSCapitalAmount": {
            "description": "The total Prospective Payment System (PPS) capital amount.",
            "type": "string"
          },
          "claimPPSCapitalOutlierAmount": {
            "description": "The Prospective Payment System (PPS) Capital Outlier amount.",
            "type": "string"
          },
          "claimPaymentRemarkCode1": {
            "description": "The [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode2": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode3": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode4": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode5": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "costReportDayCount": {
            "description": "The number of cost report days.",
            "type": "string"
          },
          "coveredDaysOrVisitsCount": {
            "description": "The number of days or visits covered by the health plan.",
            "type": "string"
          },
          "lifetimePsychiatricDaysCount": {
            "description": "The number of psychiatric days for the patient's lifetime.",
            "type": "string"
          },
          "nonPayableProfessionalComponentAmount": {
            "description": "The professional component amount billed but not payable.",
            "type": "string"
          },
          "oldCapitalAmount": {
            "description": "The old capital amount.",
            "type": "string"
          },
          "ppsCapitalDSHDRGAmount": {
            "description": "The Prospective Payment System (PPS) capital, disproportionate share, hospital Diagnosis Related Group (DRG) amount.",
            "type": "string"
          },
          "ppsCapitalExceptionAmount": {
            "description": "The capital exception amount.",
            "type": "string"
          },
          "ppsCapitalFSPDRGAmount": {
            "description": "The Prospective Payment System (PPS) capital, federal specific portion, Diagnosis Related Group (DRG) amount.",
            "type": "string"
          },
          "ppsCapitalHSPDRGAmount": {
            "description": "The Prospective Payment System (PPS) capital, hospital specific portion, Diagnosis Related Group (DRG), amount.",
            "type": "string"
          },
          "ppsCapitalIMEAmount": {
            "description": "The Prospective Payment System (PPS) capital indirect medical education claim amount.",
            "type": "string"
          },
          "ppsOperatingFederalSpecificDRGAmount": {
            "description": "The federal specific Diagnosis Related Group (DRG) amount.",
            "type": "string"
          },
          "ppsOperatingHospitalSpecificDRGAmount": {
            "description": "The hospital specific Diagnosis Related Group (DRG) Amount.",
            "type": "string"
          },
          "ppsOperatingOutlierAmount": {
            "description": "The Prospective Payment System (PPS) Operating Outlier amount, expressed as a decimal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoOtherClaimRelatedIdentification": {
        "description": "Additional reference numbers to identify the specific claim.",
        "properties": {
          "adjustedRePricedClaimReferenceNumber": {
            "description": "The adjusted repriced claim reference number.",
            "type": "string"
          },
          "authorizationNumber": {
            "description": "An authorization number assigned by the adjudication process that was not provided prior to the services.",
            "type": "string"
          },
          "classOfContractCode": {
            "description": "The class of contract code.",
            "type": "string"
          },
          "classOfContractCodes": {
            "description": "A list of class of contract codes when multiple codes are applicable.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "employeeIdentificationNumber": {
            "description": "The employee identification number.",
            "type": "string"
          },
          "groupNumber": {
            "description": "The other insured group number.",
            "type": "string"
          },
          "groupOrPolicyNumber": {
            "description": "The group or policy number for the health plan.",
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number.",
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number.",
            "type": "string"
          },
          "memberIdentificationNumber": {
            "description": "The health plan member identification number.",
            "type": "string"
          },
          "originalReferenceNumber": {
            "description": "The reference number for the original claim. This is included for correction claims.",
            "type": "string"
          },
          "predeterminationOfBenefitsIdentificationNumber": {
            "description": "The predetermination of benefits identification number.",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "The prior authorization number.",
            "type": "string"
          },
          "rePricedClaimReferenceNumber": {
            "description": "The repriced claim reference number.",
            "type": "string"
          },
          "ssn": {
            "description": "The social security number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoOutpatientAdjudication": {
        "description": "Information about the adjudication of claims not related to an inpatient setting.",
        "properties": {
          "claimESRDPaymentAmount": {
            "description": "The End Stage Renal Disease (ESRD) payment amount.",
            "type": "string"
          },
          "claimHCPCSPayableAmount": {
            "description": "The claim Health Care Financing Administration Common Procedural Coding System (HCPCS) payable amount, expressed as a decimal.",
            "type": "string"
          },
          "claimPaymentRemarkCode1": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode2": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode3": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode4": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "claimPaymentRemarkCode5": {
            "description": "A [Claim Payment Remark Code](https://x12.org/codes/remittance-advice-remark-codes).",
            "type": "string"
          },
          "nonPayableProfessionalComponentAmount": {
            "description": "The professional component amount billed but not payable.",
            "type": "string"
          },
          "reimbursementRate": {
            "description": "The reimbursement rate, expressed as a decimal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoPatientName": {
        "description": "Information about the individual who received medical services.",
        "properties": {
          "firstName": {
            "description": "The patient's first name.",
            "type": "string"
          },
          "healthInsuranceClaimNumber": {
            "description": "The patient's Health Insurance Claim (HIC) Number.",
            "type": "string"
          },
          "lastName": {
            "description": "The patient's last name.",
            "type": "string"
          },
          "medicaidRecipientIdentificationNumber": {
            "description": "The patient's Medicaid Recipient Identification Number.",
            "type": "string"
          },
          "memberId": {
            "description": "The patient's member ID number for their health plan.",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name or initial.",
            "type": "string"
          },
          "ssn": {
            "description": "The patient's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "standardUniqueHealthIdentifierForEachIndividualInTheUnitedStates": {
            "description": "Deprecated.",
            "type": "string"
          },
          "suffix": {
            "description": "The patient's name suffix, such as Jr or III.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoRenderingProvider": {
        "description": "Information about the provider who rendered the services.",
        "properties": {
          "blueCrossProviderNumber": {
            "description": "The rendering provider's Blue Cross Provider Number.",
            "type": "string"
          },
          "blueShieldProviderNumber": {
            "description": "The rendering provider's Blue Shield Provider Number.",
            "type": "string"
          },
          "firstName": {
            "description": "The rendering provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The rendering provider's last name.",
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The rendering provider's Medicare Provider Number.",
            "type": "string"
          },
          "middleName": {
            "description": "The rendering provider's middle name or initial.",
            "type": "string"
          },
          "npi": {
            "description": "The rendering provider's National Provider Identifier (NPI).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The rendering provider's business name.",
            "type": "string"
          },
          "providerCommercialNumber": {
            "description": "The rendering provider's Provider Commercial Number.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The rendering provider's State License Number.",
            "type": "string"
          },
          "suffix": {
            "description": "The rendering provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxId": {
            "description": "The rendering provider's Federal Taxpayer Identification Number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "uniquePhysicianIdentificationNumber": {
            "description": "Deprecated; replaced by NPI in 2007.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoRenderingProviderIdentification": {
        "description": "Additional identifiers for the rendering provider.",
        "properties": {
          "blueCrossProviderNumber": {
            "description": "The rendering provider's Blue Cross Provider Number.",
            "type": "string"
          },
          "blueShieldProviderNumber": {
            "description": "The rendering provider's Blue Shield Provider Number.",
            "type": "string"
          },
          "champusIdentificationNumber": {
            "description": "The rendering provider's CHAMPUS Identification Number.",
            "type": "string"
          },
          "facilityIdNumber": {
            "description": "The rendering provider's Facility ID Number.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The rendering provider's Location Number.",
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The rendering provider's Medicaid Provider Number.",
            "type": "string"
          },
          "medicareProviderNumber": {
            "description": "The rendering provider's Medicare Provider Number.",
            "type": "string"
          },
          "nationalCouncilForPrescriptionDrugProgramPharmacyNumber": {
            "description": "The rendering provider's National Council for Prescription Drug Program Pharmacy Number.",
            "type": "string"
          },
          "providerCommercialNumber": {
            "description": "The rendering provider's Provider Commercial Number.",
            "type": "string"
          },
          "providerUPINNumber": {
            "description": "Deprecated; replaced by NPI in 2007.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The rendering provider's State License Number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentInfoSubscriber": {
        "description": "Information about the primary policyholder for the health plan. This may or may not be the patient.",
        "properties": {
          "firstName": {
            "description": "The subscriber's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name.",
            "type": "string"
          },
          "memberId": {
            "description": "The subscriber's member ID for their health plan.",
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "type": "string"
          },
          "organizationName": {
            "description": "The subscriber's business name, if the subscriber is not an individual.",
            "type": "string"
          },
          "standardUniqueHealthIdentifierForEachIndividualInTheUnitedStates": {
            "description": "Deprecated",
            "type": "string"
          },
          "suffix": {
            "description": "The subscriber's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxId": {
            "description": "The subscriber's Federal Taxpayer's Identification Number. Only used when the subscriber is a business entity and not an individual.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentMethodCode": {
        "description": "Specifies the method used to deliver payment to the provider. This determines how the payment will be transmitted, such as electronically through ACH, by physical check, or wire transfer.",
        "enum": [
          "ACH",
          "BOP",
          "CHK",
          "FWT",
          "NON"
        ],
        "type": "string"
      },
      "PlaceOfServiceCode": {
        "description": "Code identifying the type of facility where the services were or may be performed.",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "31",
          "32",
          "33",
          "34",
          "41",
          "42",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "60",
          "61",
          "62",
          "65",
          "66",
          "71",
          "72",
          "81",
          "99"
        ],
        "type": "string"
      },
      "PlanDateInformation": {
        "description": "Contains the dates associated with the subscriber and dependents' (if applicable) insurance plan. This information is used to determine their eligibility for benefits.\n- Most fields contain a single date, but some can contain either a single date or a date range. Each field's documentation specifies its format.\n- Fields that can contain either a single date or date range include: `plan`, `eligibility`, `planBegin`, `admission`, and `service`.\n- The provided dates apply to every benefit within the patient's health plan unless specifically noted within a `benefitsInformation.benefitsDateInformation` object.\n- If the payer sends back date(s) that are different for the subscriber and dependents, Stedi includes only the dates for the dependent in this object and omits the subscriber's date(s). Dependents can have different coverage dates than the subscriber due to qualifying life events, such as starting a new job or passing the age limit for coverage through their parent's plan.\n- Most payers return either `plan` or `planBegin` and `planEnd`, but the exact dates returned depend on the payer's discretion and the patient's insurance plan.\n- If the date of service is after the earliest ending `plan`, `eligibility`, `planEnd`, `eligibilityEnd`, `policyEffective`, or `policyExpiration` value, the patient likely doesn't have active coverage.",
        "properties": {
          "added": {
            "description": "Added date. Payers may return this information in the case of retroactive eligibility.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "admission": {
            "description": "The admission date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefit": {
            "deprecated": true,
            "description": "The benefit date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitBegin": {
            "deprecated": true,
            "description": "The benefit begin date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "benefitEnd": {
            "deprecated": true,
            "description": "The benefit end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "certification": {
            "description": "The certification date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraBegin": {
            "description": "The date when COBRA coverage begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "cobraEnd": {
            "description": "The date when COBRA coverage ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "completion": {
            "deprecated": true,
            "description": "The completion date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "coordinationOfBenefits": {
            "deprecated": true,
            "description": "The coordination of benefits date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfDeath": {
            "description": "The date of death. Payers may return this information in the case of a deceased subscriber or dependent.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "dateOfLastUpdate": {
            "description": "The date when the plan information was last updated.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "discharge": {
            "description": "The discharge date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "effectiveDateOfChange": {
            "description": "The effective date of change.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibility": {
            "description": "Plan eligibility dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityBegin": {
            "description": "The date when the patient is first eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "eligibilityEnd": {
            "description": "The date when the patient is no longer eligible for benefits under the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "enrollment": {
            "description": "The date when the patient is enrolled in the plan.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "issue": {
            "description": "The issue date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "latestVisitOrConsultation": {
            "deprecated": true,
            "description": "The latest visit or consultation date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodEnd": {
            "deprecated": true,
            "description": "The end of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "periodStart": {
            "deprecated": true,
            "description": "The start of a period.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "plan": {
            "description": "Plan effective dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planBegin": {
            "description": "The date coverage from the plan begins.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "planEnd": {
            "description": "The date coverage from the plan ends.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyEffective": {
            "description": "The date when the policy becomes effective.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "policyExpiration": {
            "description": "The date when the policy expires.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateBegin": {
            "description": "The start of the period when the plan premium was paid in full.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "premiumPaidToDateEnd": {
            "description": "The end of period when the plan premium payments are up-to-date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "primaryCareProvider": {
            "deprecated": true,
            "description": "The primary care provider date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "service": {
            "description": "The service date or dates.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          },
          "status": {
            "description": "The status date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(-\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))?$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanInformation": {
        "description": "Additional identification for the subscriber's healthcare plan.",
        "properties": {
          "agencyClaimNumber": {
            "description": "The agency claim number, only used when the information source is a Property and Casualty payer.",
            "type": "string"
          },
          "alternativeListId": {
            "description": "The alternative list ID - identifies a list of alternative drugs with the associated formulary status for the patient.",
            "type": "string"
          },
          "caseNumber": {
            "description": "The case number",
            "type": "string"
          },
          "centersForMedicareAndMedicaidServicesNPI": {
            "description": "The [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned by the Centers for Medicare and Medicaid Services",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "classOfContractCode": {
            "description": "The class of contract code - used to identify the applicable class of contract for claims processing.",
            "type": "string"
          },
          "contractNumber": {
            "description": "The contract number of a contract between the payer and the provider that requested the eligibility check.",
            "type": "string"
          },
          "coverageListId": {
            "description": "The coverage list ID - identifies a list of drugs that have coverage limitations for the patient.",
            "type": "string"
          },
          "drugFormularyNumber": {
            "description": "The drug formulary number",
            "type": "string"
          },
          "electronicDevicePin": {
            "description": "The electronic device pin number",
            "type": "string"
          },
          "eligibilityCategory": {
            "description": "The eligibility category",
            "type": "string"
          },
          "facilityIdNumber": {
            "description": "The facility ID number",
            "type": "string"
          },
          "facilityNetworkIdentificationNumber": {
            "description": "The facility network identification number",
            "type": "string"
          },
          "familyUnitNumber": {
            "description": "The family unit number",
            "type": "string"
          },
          "federalTaxpayersIdentificationNumber": {
            "description": "The federal taxpayer's identification number",
            "type": "string"
          },
          "groupDescription": {
            "description": "The group description",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number",
            "type": "string"
          },
          "hicNumber": {
            "description": "The health insurance claim number (HICN). Note that CMS previously used the HICN to uniquely identify Medicare beneficiaries. However, they have since transitioned to a new, randomized Medicare Beneficiary Identifier (MBI) format. The HICN is no longer used for Medicare transactions but this property is now used by some payers to return MBI. If you receive a value in this property that matches the format specified in the [Medicare Beneficiary Identifier documentation](https://www.cms.gov/training-education/partner-outreach-resources/new-medicare-card/medical-beneficiary-identifiers-mbis), the number is likely an MBI and we recommend sending a follow-up eligibility check to CMS for additional benefits data. This most commonly occurs with patients who are covered by both Medicare and Medicaid.",
            "type": "string"
          },
          "idCardNumber": {
            "description": "The identity card number, used when the Identity Card Number is different than the Member Identification Number.",
            "type": "string"
          },
          "idCardSerialNumber": {
            "description": "The identification card serial number. The Identification Card Serial Number uniquely identifies the identification card when multiple cards have been or will be issued to a member, such as a replacement card.",
            "type": "string"
          },
          "insurancePolicyNumber": {
            "description": "The insurance policy number",
            "type": "string"
          },
          "issueNumber": {
            "description": "The issue number",
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The Medicaid provider number",
            "type": "string"
          },
          "medicaidRecipientIdNumber": {
            "description": "The Medicaid recipient identification number",
            "type": "string"
          },
          "medicalAssistanceCategory": {
            "description": "The medical assistance category",
            "type": "string"
          },
          "medicalRecordIdentificationNumber": {
            "description": "The medical record identification number",
            "type": "string"
          },
          "medicareProviderNumber": {
            "description": "The Medicare provider number",
            "type": "string"
          },
          "memberId": {
            "description": "The member identification number - only used when checking eligibility with a Workers' Compensation or Property and Casualty insurer.",
            "type": "string"
          },
          "patientAccountNumber": {
            "description": "The patient account number. If you included this value in the original eligibility request, the payer will return the same value here in the response.",
            "type": "string"
          },
          "personalIdentificationNumber": {
            "description": "The personal identification number (PIN)",
            "type": "string"
          },
          "planDescription": {
            "description": "The plan description",
            "type": "string"
          },
          "planNetworkIdDescription": {
            "description": "The plan, group, or plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The plan network identification number",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number",
            "type": "string"
          },
          "policyNumber": {
            "description": "The group or policy number",
            "type": "string"
          },
          "priorAuthorizationNumber": {
            "description": "The prior authorization number",
            "type": "string"
          },
          "priorIdNumber": {
            "description": "The prior identifier number",
            "type": "string"
          },
          "referralNumber": {
            "description": "The referral number",
            "type": "string"
          },
          "socialSecurityNumber": {
            "description": "The social security number",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "stateLicenseNumber": {
            "description": "The state license number",
            "type": "string"
          },
          "submitterIdentificationNumber": {
            "description": "The submitter identification number",
            "type": "string"
          },
          "userIdentification": {
            "description": "The user identification",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanParticipationCode": {
        "description": "Code indicating whether the provider accepts assignment. This refers to whether the provider accepts assignment and/or has a participation agreement with the destination payer. It does not indicate whether the patient has assigned benefits to the provider. Can be set to `A` - Assigned, `B` - Assignment Accepted on Clinical Lab Services Only, or `C` - Not Assigned. Choose `A` when the provider accepts assignment and/or has a participation agreement with the destination payer, OR the provider does not accept assignment and/or have a participation agreement, but is advising the payer to adjudicate this specific claim under the participating provider benefits allowed under certain plans.",
        "enum": [
          "A",
          "B",
          "C"
        ],
        "type": "string"
      },
      "PlanStatus": {
        "deprecated": true,
        "properties": {
          "planDetails": {
            "deprecated": true,
            "type": "string"
          },
          "serviceTypeCodes": {
            "deprecated": true,
            "description": "An array of [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) related to the benefit type.",
            "items": {
              "$ref": "#/components/schemas/ResponseEligibilityServiceTypeCode"
            },
            "type": "array"
          },
          "status": {
            "deprecated": true,
            "type": "string"
          },
          "statusCode": {
            "deprecated": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PolicyComplianceCode": {
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5"
        ],
        "type": "string"
      },
      "PredeterminationOfBenefits": {
        "properties": {
          "otherPayerPrimaryIdentifier": {
            "description": "The primary identifier of the payer who assigned the `predeterminationOfBenefits` number. This must match the identifier in the `claimInformation.otherSubscriberInformation.otherPayerName.otherPayerIdentifier` property.",
            "type": "string"
          },
          "predeterminationOfBenefits": {
            "description": "The Predetermination of Benefits Identification Number. If you're including the identifier provided by the payer identified in `claimInformation.otherSubscriberInformation.otherPayerName`, you must also include the `otherPayerPrimaryIdentifier` property.",
            "type": "string"
          }
        },
        "required": [
          "predeterminationOfBenefits"
        ],
        "type": "object"
      },
      "PregnancyIndicator": {
        "description": "Code indicating whether the patient is pregnant. Can be set to `Y` - Yes.",
        "enum": [
          "Y"
        ],
        "type": "string"
      },
      "PricingMethodologyCode": {
        "description": "Code indicating the pricing or repricing methodology. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#pricing-methodology-codes-2) for a complete list.",
        "enum": [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14"
        ],
        "type": "string"
      },
      "PrimaryIdentifierTypeCode": {
        "description": "Code identifying the type of identifier. Can be set to `PI` - Payor Identification or `XV` - Centers for Medicare/Medicaid Services PlanID. Use code value `XV` when reporting Health Plan ID (HPID) or Other Entity Identifier (OEID).",
        "enum": [
          "PI",
          "XV"
        ],
        "type": "string"
      },
      "PrincipalDiagnosis": {
        "properties": {
          "presentOnAdmissionIndicator": {
            "$ref": "#/components/schemas/PrincipalDiagnosisPresentOnAdmissionIndicator"
          },
          "principalDiagnosisCode": {
            "description": "The principal diagnosis code for the patient. It must be a valid code from the appropriate coding system. **Do not** submit the decimal for ICD codes; the decimal is implied. Also, **do not** submit IDC-10 header codes. Header codes exist to group related codes and are not valid for billing. These header codes can change with each new version of ICD-10, so we recommend reviewing your diagnosis codes every year to ensure that they aren't classified as header codes in the most recent version. To determine whether a code is a header code, you can also search the [Value Set Authority Center](https://vsac.nlm.nih.gov/context/cs). If the 'Header' property is set, the code is a header code and you shouldn't use it in claim submissions.",
            "maxLength": 30,
            "type": "string"
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/PrincipalDiagnosisQualifierCode"
          }
        },
        "required": [
          "principalDiagnosisCode",
          "qualifierCode"
        ],
        "type": "object"
      },
      "PrincipalDiagnosisPresentOnAdmissionIndicator": {
        "description": "Indicates whether the principal diagnosis was present on admission. Can be set to `N` - No (onset did NOT occur prior to admission to the hospital), `Y` - Yes (onset occurred prior to admission to the hospital), `U` - Unknown, or `W` - Not Applicable.",
        "enum": [
          "N",
          "Y",
          "U",
          "W"
        ],
        "type": "string"
      },
      "PrincipalDiagnosisQualifierCode": {
        "description": "Code identifying the type of diagnosis code used. Can be set to `ABK` - International Classification of Diseases Clinical Modification Principal Diagnosis or `BK` - International Classification of Diseases Clinical Modification (ICD-9-CM) Principal Diagnosis. Note that ICD-9 is deprecated and cannot be used in new claims.",
        "enum": [
          "ABK",
          "BK"
        ],
        "type": "string"
      },
      "PrincipalProcedureInformation": {
        "properties": {
          "principalProcedureCode": {
            "description": "The principal procedure code for the patient. It must be a valid code from the appropriate coding system. **Do not** submit the decimal for ICD codes; the decimal is implied.",
            "maxLength": 30,
            "type": "string"
          },
          "principalProcedureDate": {
            "description": "The date when the procedure was performed.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "qualifierCode": {
            "$ref": "#/components/schemas/PrincipalProcedureInformationQualifierCode"
          }
        },
        "required": [
          "principalProcedureCode",
          "qualifierCode"
        ],
        "type": "object"
      },
      "PrincipalProcedureInformationQualifierCode": {
        "description": "Code identifying the type of procedure code used. Can be set to `BBR` - International Classification of Diseases Clinical Modification (ICD-10-PCS) Principal Procedure Codes, `BR` - International Classification of Diseases Clinical Modification (ICD-9-CM) Principal Procedure Codes, or `CAH` - Advanced Billing Concepts (ABC) Codes. Note that ICD-9 and ABC codes are deprecated and cannot be used in new claims.",
        "enum": [
          "BBR",
          "BR",
          "CAH"
        ],
        "type": "string"
      },
      "PriorAuthorization": {
        "properties": {
          "otherPayerPrimaryIdentifier": {
            "description": "This must match the value in `claimInformation.otherSubscriberInformation.otherPayerName.otherPayerIdentifier`.",
            "type": "string"
          },
          "priorAuthorizationOrReferralNumber": {
            "description": "The prior authorization number.\n\n**Important**: Only use this field for service-level prior authorization numbers that differ from the claim-level authorization (`claimInformation.claimSupplementalInformation.priorAuthorizationNumber`). If this value matches the claim-level value, only the claim-level authorization will appear in the X12 EDI transaction. Set claim-level authorizations first.",
            "type": "string"
          }
        },
        "required": [
          "priorAuthorizationOrReferralNumber"
        ],
        "type": "object"
      },
      "ProcedureIdentifier": {
        "description": "Code identifying the specific industry code list used for the `procedureCode`. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#composite-medical-procedure-product-or-service-id-qualifier-codes) for a complete list.",
        "enum": [
          "ER",
          "HC",
          "IV",
          "WK"
        ],
        "type": "string"
      },
      "ProductOrServiceIDQualifier": {
        "description": "A code identifying the type/source of the descriptive number used in Product/Service ID. Visit [Check claim status](https://www.stedi.com/docs/healthcare/check-claim-status#product-or-service-id-qualifier) for a complete list.",
        "enum": [
          "AD",
          "ER",
          "HC",
          "HP",
          "IV",
          "N4",
          "NU",
          "WK"
        ],
        "type": "string"
      },
      "ProductServiceIdQualifier": {
        "description": "Identifies the coding system or classification used to describe medical products, services, or procedures. These qualifiers specify which standardized code set is being used to identify the healthcare service or product.",
        "enum": [
          "HC",
          "AD",
          "ER",
          "IV",
          "N4",
          "NU",
          "WK"
        ],
        "type": "string"
      },
      "ProfessionalService": {
        "description": "Information about the service rendered.",
        "properties": {
          "compositeDiagnosisCodePointers": {
            "$ref": "#/components/schemas/CompositeDiagnosisCodePointers"
          },
          "copayStatusCode": {
            "$ref": "#/components/schemas/CopayStatusCode"
          },
          "description": {
            "description": "A free form description to clarify the procedure code and any procedure modifiers, as needed.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "emergencyIndicator": {
            "$ref": "#/components/schemas/EmergencyIndicator"
          },
          "epsdtIndicator": {
            "$ref": "#/components/schemas/EpsdtIndicator",
            "description": "Code indicating whether there was EPSDT involvement in the service. Can be set to `Y` - Yes. EPSDT is a program that provides comprehensive and preventive health care services for children under age 21 who are enrolled in Medicaid.\n\nIf this value is set to `Y`, you must also include the `claimInformation.epsdtReferral` object in your claim submission."
          },
          "familyPlanningIndicator": {
            "$ref": "#/components/schemas/FamilyPlanningIndicator"
          },
          "lineItemChargeAmount": {
            "description": "The total charge amount for the service, including the provider's base charge and any applicable tax or postage. It is acceptable to set this to `0` (zero).",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "measurementUnit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "placeOfServiceCode": {
            "description": "A code identifying the location where services were rendered. Visit [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for a complete list.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "type": "string"
          },
          "procedureIdentifier": {
            "$ref": "#/components/schemas/ProcedureIdentifier"
          },
          "procedureModifiers": {
            "description": "A modifier code that clarifies or improves the reporting accuracy of the associated procedure code. If not required, do not send.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "serviceUnitCount": {
            "description": "The number of units of the service provided, formatted as a decimal. The units depend on the procedure code being billed and the nature of the service. For example, they may correspond to office visits (1 unit per visit), individual diagnostic tests (1 unit per test), or time (when a service is billed in 15-minute increments, 4 units could equal 1 hour).",
            "type": "string"
          }
        },
        "required": [
          "compositeDiagnosisCodePointers",
          "lineItemChargeAmount",
          "measurementUnit",
          "procedureCode",
          "procedureIdentifier",
          "serviceUnitCount"
        ],
        "type": "object"
      },
      "ProsthesisCrownOrInlayCode": {
        "description": "Code indicating the placement status for the dental work. Can be set to `I` - Initial Placement or `R` - Replacement. When set to `R`, you must include either the `priorPlacementDate` or `estimatedPriorPlacementDate` properties within the `claimInformation.serviceLines.serviceLineDateInformation` object.",
        "enum": [
          "I",
          "R"
        ],
        "type": "string"
      },
      "Provider": {
        "description": "Information about the entity requesting the eligibility check. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider.\n - You must provide the `organizationName` (if the entity is an organization), or `firstName` and `lastName` (if the provider is an individual).\n - You must also provide an identifier - this is typically the provider's [National Provider Identifier](https://www.stedi.com/docs/healthcare/national-provider-identifier) (`npi`). If the provider doesn't have an NPI, you can supply an alternative, such as their `taxId` or `ssn`.\n - Don't include additional properties, such as `taxId` or `address`, unless they are specifically required or suggested by the payer.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "description": "The address of the provider requesting the information. Only include when specifically instructed by a payer, such as when the provider has multiple locations and you need to identify the specific location making the request. You must include at least the `address1` and `city` properties in this object."
          },
          "contactNumber": {
            "deprecated": true,
            "description": "The provider's contract number. Only include when required by a payer.\nThis shape is deprecated: Use `contractNumber` instead.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contractNumber": {
            "description": "The provider's contract number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "devicePinNumber": {
            "description": "The provider's electronic device pin number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "employersId": {
            "deprecated": true,
            "description": "Deprecated; The submitter's Employer's Identification Number (EIN). Only use when an employer is checking the eligibility and benefits of their employees.\nThis shape is deprecated: This property is no longer used.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "facilityIdNumber": {
            "description": "The ID number for the provider's facility. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facilityNetworkIdNumber": {
            "description": "The provider's facility network identification number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name. This property is required if the provider is an individual.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "informationReceiverAdditionalIdentifierState": {
            "description": "The two-character state ID of the state that assigned the `stateLicenseNumber`. Only include when required by a payer.",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. This property is required if the provider is an individual.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "medicaidProviderNumber": {
            "description": "The provider's Medicaid provider number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "medicareProviderNumber": {
            "description": "The provider's Medicare provider number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier). This identifier is required for all healthcare providers who are eligible to receive an NPI. Some non-traditional providers such as transportation services, durable medical equipment (DME) suppliers, or alternative medicine practitioners are not eligible to receive an NPI. If the provider doesn't have an NPI, requests with alternate IDs are virtually never supported. In the rare circumstance that a payer has instructed you to use an alternate ID, the payer will typically require you to supply either their `taxId` or `ssn` instead.",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "organizationName": {
            "description": "The provider's business name. This property is required if the provider is not an individual.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "payorId": {
            "description": "Only used for payer-to-payer transactions, which are not currently supported. Do not use.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The provider's pharmacy processor number. Only include when specifically instructed by a payer - for example, when the provider doesn't have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). This use case is very rarely supported, and is typically when the provider is a non-medical provider, such as a social worker, home health aide, or transportation service.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "priorIdentifierNumber": {
            "description": "The provider's prior identifier number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/RequestProviderCode",
            "description": "Communicate the provider's role in the type of benefits specified in the request. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list. Only include when required by a payer."
          },
          "providerPlanNetworkIdNumber": {
            "description": "The provider's plan network identification number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ProviderType"
          },
          "referenceIdentification": {
            "description": "The provider's [Taxonomy Code](https://x12.org/codes/provider-taxonomy-codes). Only used when the provider's taxonomy code is relevant to the eligibility/benefit inquiry. For example, an institutional provider such as a hospital may need to use a taxonomy code to specify a specific unit or department.",
            "type": "string"
          },
          "serviceProviderNumber": {
            "description": "The provider's service provider number. Only include when specifically instructed by a payer - for example, when the provider doesn't have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). This use case is very rarely supported, and is typically when the provider is a non-medical provider, such as a social worker, home health aide, or transportation service.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "servicesPlanID": {
            "deprecated": true,
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "ssn": {
            "description": "The provider's Social Security Number (SSN).\n    - Only include when specifically instructed by a payer - for example, if the provider doesn't have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). This use case is very rarely supported, and is typically when the provider is a non-medical provider, such as a social worker, home health aide, or transportation service.\n    - If the payer has instructed you to send an EIN but the provider operates using their SSN, use provider.taxId instead of this field.\n    - Don't use this for Federally-administered programs, such as Medicare.",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "stateLicenceNumber": {
            "description": "The provider's state license number. If you include this information, you must also include the `informationReceiverAdditionalIdentifierState`. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "submitterIdNumber": {
            "description": "The provider's submitter identification number. Only include when required by a payer.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "taxId": {
            "description": "The provider's Federal Taxpayer Identification Number. This is typically the provider's EIN (Employer Identification Number), but the provider's SSN may be used if the provider does not have an EIN. Only include if required by the payer.",
            "pattern": "^\\d{9}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderAdjustments": {
        "description": "Provider-level adjustments unrelated to specific claims.",
        "properties": {
          "adjustments": {
            "description": "List of adjustments applied to the provider.",
            "items": {
              "$ref": "#/components/schemas/Adjustments"
            },
            "type": "array"
          },
          "fiscalPeriodDate": {
            "description": "The last day of the provider's fiscal year.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerIdentifier": {
            "description": "This is the provider's NPI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderClaimStatus": {
        "properties": {
          "providerStatuses": {
            "description": "The status of the entire claim.",
            "items": {
              "$ref": "#/components/schemas/ProviderStatus"
            },
            "type": "array"
          },
          "statusInformationEffectiveDate": {
            "description": "The date the claim status information is effective.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderEntityIdentifierCode": {
        "description": "Entity identifier code for providers in claim status reports",
        "enum": [
          "36",
          "40",
          "41",
          "AY",
          "PR"
        ],
        "type": "string"
      },
      "ProviderEntityIdentifierCodeValue": {
        "description": "Human-readable descriptions for provider entity identifier codes",
        "enum": [
          "Employer",
          "Receiver",
          "Submitter",
          "Clearinghouse",
          "Payer"
        ],
        "type": "string"
      },
      "ProviderInformation": {
        "properties": {
          "providerCode": {
            "$ref": "#/components/schemas/ResponseProviderCode",
            "description": "A code that communicates the provider's role in the type of benefits information in the response. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "referenceIdentification": {
            "description": "The provider's taxonomy code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderStatus": {
        "properties": {
          "entityIdentifierCode": {
            "$ref": "#/components/schemas/ProviderEntityIdentifierCode",
            "description": "Code indicating the entity that the status is related to."
          },
          "entityIdentifierCodeValue": {
            "$ref": "#/components/schemas/ProviderEntityIdentifierCodeValue",
            "description": "The description of the `entityIdentifierCode`."
          },
          "healthCareClaimStatusCategoryCode": {
            "$ref": "#/components/schemas/HealthCareClaimStatusCategoryCode"
          },
          "healthCareClaimStatusCategoryCodeValue": {
            "description": "Description of the `healthCareClaimStatusCategoryCode` property. Visit [277CA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-status-category-code) for a complete list.",
            "type": "string"
          },
          "statusCode": {
            "$ref": "#/components/schemas/HealthCareClaimStatusCode",
            "description": "Code indicating the status."
          },
          "statusCodeValue": {
            "description": "The description of the `statusCode`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderSummaryInformation": {
        "description": "Summary information about the provider, including the provider's identifier, where the services were performed, and total claim charge amounts.",
        "properties": {
          "facilityTypeCode": {
            "description": "A code identifying the type of facility where services were performed. This is the [Place of Service Codes](https://www.cms.gov/medicare/coding-billing/place-of-service-codes/code-sets) for Professional or Dental Services.",
            "type": "string"
          },
          "fiscalPeriodDate": {
            "description": "The last day of the provider's fiscal year.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerIdentifier": {
            "description": "The provider number.",
            "type": "string"
          },
          "totalClaimChargeAmount": {
            "description": "The total of the charges reported for all claims, expressed as a decimal.",
            "type": "string"
          },
          "totalClaimCount": {
            "description": "The total number of claims.",
            "type": "string"
          },
          "totalHCPCSPayableAmount": {
            "description": "The total of the charges reported for all HCPCS codes that are payable, expressed as a decimal.",
            "type": "string"
          },
          "totalHCPCSReportedChargeAmount": {
            "description": "The total of the charges reported for all Health Care Financing Administration Common Procedural Coding System (HCPCS) codes, expressed as a decimal.",
            "type": "string"
          },
          "totalMSPPatientLiabilityMetAmount": {
            "description": "The total Medicare Secondary Payer (MSP) patient liability met, expressed as a decimal.",
            "type": "string"
          },
          "totalMSPPayerAmount": {
            "description": "The total Medicare Secondary Payer (MSP) primary payer amount, expressed as a decimal.",
            "type": "string"
          },
          "totalNonLabChargeAmount": {
            "description": "The total of non-laboratory charges, expressed as a decimal.",
            "type": "string"
          },
          "totalPIPAdjustmentAmount": {
            "description": "The total periodic interim payment (PIP) adjustment amount, expressed as a decimal.",
            "type": "string"
          },
          "totalPIPClaimCount": {
            "description": "The total periodic interim payment (PIP) number of claims, expressed as a decimal.",
            "type": "string"
          },
          "totalPatientReimbursementAmount": {
            "description": "The total patient reimbursement amount, expressed as a decimal.",
            "type": "string"
          },
          "totalProfessionalComponentAmount": {
            "description": "The total of the professional component charges, expressed as a decimal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderSupplementalSummaryInformation": {
        "description": "Additional summary information about the provider and the charges in the claim. All values are expressed as decimals.",
        "properties": {
          "averageDRGLengthOfStay": {
            "description": "The average length of stay for diagnosis related group (DRG) claims.",
            "type": "string"
          },
          "averageDRGWeight": {
            "description": "The average diagnosis-related group (DRG) weight.",
            "type": "string"
          },
          "totalCapitalAmount": {
            "description": "The total capital amount. This includes: capital federal-specfic amount, hospital federal-specfic amount, hold harmless amount, Indirect Medical Education amount, Disproportionate Share Hospital amount, and the exception amount. It does not include any capital outlier amount.",
            "type": "string"
          },
          "totalCostOutlierAmount": {
            "description": "The total cost outlier amount.",
            "type": "string"
          },
          "totalCostReportDayCount": {
            "description": "The total number of cost report days.",
            "type": "string"
          },
          "totalCoveredDayCount": {
            "description": "The total number of covered days.",
            "type": "string"
          },
          "totalDRGAmount": {
            "description": "The total of the charges reported for all diagnosis-related group (DRG) codes.",
            "type": "string"
          },
          "totalDayOutlierAmount": {
            "description": "The total day outlier amount.",
            "type": "string"
          },
          "totalDischargeCount": {
            "description": "The total number of discharges.",
            "type": "string"
          },
          "totalDisproportionateShareAmount": {
            "description": "The total disproportionate share amount.",
            "type": "string"
          },
          "totalFederalSpecificAmount": {
            "description": "The total federal specific amount.",
            "type": "string"
          },
          "totalHospitalSpecificAmount": {
            "description": "The total hospital specific amount.",
            "type": "string"
          },
          "totalIndirectMedicalEducationAmount": {
            "description": "The total indirect medical education amount.",
            "type": "string"
          },
          "totalMSPPassThroughAmount": {
            "description": "The total Medicare Secondary Payer (MSP) pass-through amount, calculated for a non-Medicare payer.",
            "type": "string"
          },
          "totalNonCoveredDayCount": {
            "description": "The total number of non-covered days.",
            "type": "string"
          },
          "totalOutlierDayCount": {
            "description": "The total number of outlier days.",
            "type": "string"
          },
          "totalPPSCapitalFSPDRGAmount": {
            "description": "The total prospective payment system (PPS) capital, federal-specific portion, diagnosis-related group (DRG) amount.",
            "type": "string"
          },
          "totalPPSCapitalHSPDRGAmount": {
            "description": "The total prospective payment system (PPS) capital, hospital-specific portion, diagnosis-related group (DRG) amount.",
            "type": "string"
          },
          "totalPPSDSHDRGAmount": {
            "description": "The total prospective payment system (PPS) disproportionate share, hospital diagnosis-related group (DRG) amount.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProviderType": {
        "description": "Identify the type of provider.",
        "enum": [
          "payer",
          "third-party administrator",
          "employer",
          "hospital",
          "facility",
          "gateway provider",
          "plan sponsor",
          "provider"
        ],
        "type": "string"
      },
      "PurchasedServiceInformation": {
        "description": "Specify information about services that were purchased. Required on non-vision service lines when adjudication is known to be impacted by the charge amount for services purchased from another source OR when adjudication is known to be impacted by the acquisition cost of lenses.",
        "properties": {
          "purchasedServiceChargeAmount": {
            "description": "The cost of the purchased service.",
            "type": "string"
          },
          "purchasedServiceProviderIdentifier": {
            "description": "This must be the same identifier you provided within `claimInformation.serviceLines.purchasedServiceProvider`.",
            "type": "string"
          }
        },
        "required": [
          "purchasedServiceChargeAmount",
          "purchasedServiceProviderIdentifier"
        ],
        "type": "object"
      },
      "QuantityQualifierCode": {
        "description": "Code indicating the type of quantity for the benefit.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "8H",
          "99",
          "CA",
          "CE",
          "D3",
          "DB",
          "DY",
          "HS",
          "LA",
          "LE",
          "M2",
          "MN",
          "P6",
          "QA",
          "S7",
          "S8",
          "VS",
          "YY"
        ],
        "type": "string"
      },
      "QuantityQualifierName": {
        "description": "The name of the quantity qualifier code.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Minimum",
          "Quantity Used",
          "Covered - Actual",
          "Covered - Estimated",
          "Number of Co-insurance Days",
          "Deductible Blood Units",
          "Days",
          "Hours",
          "Life-time Reserve - Actual",
          "Life-time Reserve - Estimated",
          "Maximum",
          "Month",
          "Number of Services or Procedures",
          "Quantity Approved",
          "Age, High Value",
          "Age, Low Value",
          "Visits",
          "Years"
        ],
        "type": "string"
      },
      "QuestionResponseCode": {
        "description": "Code indicating a yes or no condition response to the question. Can be set to `N` - No, `W` - Not Applicable, or `Y` - Yes.",
        "enum": [
          "N",
          "W",
          "Y"
        ],
        "type": "string"
      },
      "RawEligibilityResponseValidationErrors": {
        "properties": {
          "benefitsInformation": {
            "description": "Information about the patient's healthcare benefits, such as coverage level (individual vs. family), coverage type (deductibles, co-pays, etc.), out of pocket maximums, and more. \n \n Payers typically return at least the following properties: `code`, `coverageLevelCode`, `serviceTypeCodes`, and either `benefitAmount` or `benefitPercent`. However, the exact properties returned in this object are up to the payer's discretion.\n\nThe payer may send benefits information for service type codes (STCs) you didn't request - this is expected. The STC you send in the request tells the payer the types of benefits information you want, but they aren't required to respond with exactly the same STC(s) in the response. Receiving different STCs than you requested can also mean that the payer is ignoring the STC you sent, which is why we recommend [testing payers](https://www.stedi.com/docs/healthcare/eligibility-stc-procedure-codes#test-payer-stc-support) to determine their support for specific STCs.\n\nVisit [Determine patient benefits](https://www.stedi.com/docs/healthcare/eligibility-active-coverage-benefits) for more information about benefit types, details about how to interpret the `benefitsInformation` array, and additional examples.",
            "items": {
              "$ref": "#/components/schemas/BenefitsInformation"
            },
            "type": "array"
          },
          "controlNumber": {
            "description": "An identifier for the payer's response.",
            "type": "string"
          },
          "dependents": {
            "description": "Information about the patient when they are a dependent. When the patient is a dependent, this array will contain a single object with the patient's information. When the patient is a subscriber, or considered to be a subscriber because they have a unique member ID, their information is returned in the `subscriber` object, and this array will be empty.\n\n When present, this object will always include the dependent's name for identification, but many payers will also return the date of birth and other identifying information.",
            "items": {
              "$ref": "#/components/schemas/ResponseDependent"
            },
            "type": "array"
          },
          "eligibilitySearchId": {
            "description": "An identifier that allows Stedi to group eligibility checks for the same patient into a unified record within [Eligibility Manager](https://www.stedi.com/docs/healthcare/eligibility-manager) called an eligibility search.\n\nThis property is for use by Stedi tools only, such as Stedi's MCP server.",
            "type": "string"
          },
          "errors": {
            "description": "When a payer rejects your eligibility check, the response contains one or more [`AAA` errors](https://www.stedi.com/docs/healthcare/eligibility-troubleshooting#payer-aaa-errors) that specify the reasons for the rejection and any recommended follow-up actions.\n\nAny errors that occur at the `payer`, `provider`, `subscriber`, or `dependents` levels are also included in this array, allowing you to review all errors in a central location. If there are no `AAA` errors, this array will be empty.",
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckError"
            },
            "type": "array"
          },
          "implementationTransactionSetSyntaxError": {
            "description": "The implementation transaction set error code provided in `IK502` of the 999 transaction.",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/EligibilityMetaDataRawX12"
          },
          "payer": {
            "$ref": "#/components/schemas/Payer"
          },
          "planDateInformation": {
            "$ref": "#/components/schemas/PlanDateInformation"
          },
          "planInformation": {
            "$ref": "#/components/schemas/PlanInformation"
          },
          "planStatus": {
            "deprecated": true,
            "description": "Please use `benefitsInformation` instead.",
            "items": {
              "$ref": "#/components/schemas/PlanStatus",
              "deprecated": true
            },
            "type": "array"
          },
          "provider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "reassociationKey": {
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "status": {
            "description": "Errors Stedi encountered when generating or sending the final X12 EDI transaction to the payer. These can include validation errors and payer unavailable errors that prevent delivery.",
            "type": "string"
          },
          "subscriber": {
            "$ref": "#/components/schemas/ResponseSubscriber"
          },
          "subscriberTraceNumbers": {
            "description": "A unique identifier for the eligibility request. It's used to trace the transaction. Stedi always generates a trace number for internal tracking, and the payer may generate one as well. You can also optionally [supply your own trace number](https://www.stedi.com/docs/healthcare/send-eligibility-checks#trn) in a `TRN` segment.\n\nStedi returns its internal trace number in this array as well as the trace numbers from you and the payer (if provided).",
            "items": {
              "$ref": "#/components/schemas/SubscriberTraceNumber"
            },
            "type": "array"
          },
          "tradingPartnerServiceId": {
            "description": "An ID for the payer you identified in the original eligibility check request. This value may differ from the `tradingPartnerServiceId` you submitted in the original request because it reflects the payer's internal concept of their ID, not necessarily the ID Stedi uses to route requests to this payer.",
            "type": "string"
          },
          "transactionSetAcknowledgement": {
            "description": "The transaction set acknowledgment code provided in in the [X12 EDI 999 response](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231/01HRF41ES1DVGCA6X1EHSRPFXZ#properties.heading.properties.transaction_set_response_header_AK2_loop.items.properties.transaction_set_response_trailer_IK5).",
            "type": "string"
          },
          "warnings": {
            "description": "Warnings indicate non-fatal issues with your eligibility check or a non-standard response from the payer.",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "type": "array"
          },
          "x12": {
            "description": "Typically this property contains the raw X12 EDI [271 Eligibility Benefit Response](https://portal.stedi.com/app/guides/view/hipaa/health-care-eligibility-benefit-response-x279a1/01GS66YHZPB37ABF34DBPSR213) from the payer.\n\nIn some circumstances, this property may contain a [999 Implementation Acknowledgment](https://portal.stedi.com/app/guides/view/hipaa/implementation-acknowledgment-x231a1/01HMRQV0N8SPHG58M4ZG1CRHH0) instead of a 271. A 999 indicates validation errors in the X12 EDI transaction, such as improper formatting or missing or invalid values.\n\nIf the 999 is returned in this property, many of the other response properties will be empty, as they are mapped to information in the 271.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Receiver": {
        "description": "The entity responsible for the payment of the claim, such as an insurance company or government agency.",
        "properties": {
          "organizationName": {
            "description": "The business name of the payer receiving the claim, such as Aetna or Cigna.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "organizationName"
        ],
        "type": "object"
      },
      "ReceiverAccountDetails": {
        "description": "Financial institution account details for the payment receiver.",
        "properties": {
          "receiverAccountNumber": {
            "description": "The provider's account number.",
            "type": "string"
          },
          "receiverAccountNumberQualifier": {
            "$ref": "#/components/schemas/AccountNumberQualifier",
            "description": "The code identifying the type of account. Can be either `DA` - Demand Deposit or `SA` - Savings."
          },
          "receiverDfiIdNumberQualifier": {
            "$ref": "#/components/schemas/DfiIdNumberQualifier",
            "description": "The code identifying the type of identification number of the Depository Financial Institution (DFI). Can be either `01` - ABA Transit Routing Number Including Check Digits (9 digits) or `04` - Canadian Bank Branch Institution Number."
          },
          "receiverDfiIdentificationNumber": {
            "description": "The identification number specified in `receiverDfiIdNumberQualifier`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReferenceIdentification": {
        "properties": {
          "identifier": {
            "description": "The reference number.",
            "type": "string"
          },
          "otherIdentifier": {
            "description": "The identifier for the other payer who provided this reference number. This is only required when the reference number is provided by the non-destination payer. The value must match the `otherPayerName.otherPayerIdentifier` property.",
            "type": "string"
          },
          "qualifier": {
            "description": "The code identifying the type of reference number.",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "qualifier"
        ],
        "type": "object"
      },
      "Referring": {
        "description": "Information about the provider who directed the patient to the rendering provider for care. For example, a primary care physician may refer patients to a specialist. Use when the referring provider applies to the entire claim, not just a specific service line.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReferringProviderType": {
        "description": "Defines the referring provider type.",
        "enum": [
          "ReferringProvider"
        ],
        "type": "string"
      },
      "ReferringSecondaryIdentificationQualifierCode": {
        "description": "The type of identifier used in `secondaryIdentifier`. Can be set to `0B` - State License Number, `1G` - Provider UPIN Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and should not be used.",
        "enum": [
          "0B",
          "1G",
          "G2"
        ],
        "type": "string"
      },
      "RejectReasonCode": {
        "enum": [
          "T1",
          "T2",
          "T3",
          "T4",
          "T5",
          "T6"
        ],
        "type": "string"
      },
      "RelatedEntityIdentifierName": {
        "description": "Code identifying an organizational entity, a physical location, property or an individual. \n  - `PPO` is used to identify a PPO by name or identification number, and also may also be used if identifying the Network that benefits are restricted to for In-Network benefits.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Contracted Service Provider",
          "Preferred Provider Organization (PPO)",
          "Provider",
          "Third-Party Administrator",
          "Employer",
          "Other Physician",
          "Facility",
          "Gateway Provider",
          "Group",
          "Independent Physicians Association (IPA)",
          "Insured or Subscriber",
          "Legal Representative",
          "Origin Carrier",
          "Primary Care Provider",
          "Prior Insurance Carrier",
          "Plan Sponsor",
          "Payer",
          "Primary Payer",
          "Secondary Payer",
          "Tertiary Payer",
          "Party Performing Verification",
          "Vendor",
          "Organization Completing Configuration Change",
          "Utilization Management Organization",
          "Managed Care Organization"
        ],
        "type": "string"
      },
      "RelationToSubscriberCode": {
        "description": "The code indicating the dependent's relationship to the subscriber.",
        "enum": [
          "01",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8"
        ],
        "type": "string"
      },
      "RelationToSubscriberCodeName": {
        "description": "The name of the `relationToSubscriberCode`.",
        "enum": [
          "Spouse",
          "Child",
          "Employee",
          "Unknown",
          "Organ Donor",
          "Cadaver Donor",
          "Life Partner",
          "Other Relationship"
        ],
        "type": "string"
      },
      "RelationshipToSubscriberCode": {
        "description": "Identifies the relationship of the patient to the subscriber. Can be set to `01` - Spouse, `19` - Child, `20` - Employee, `21` - Unknown, `39` - Organ Donor, `40` - Cadaver Donor, `53` - Life Partner, or `G8` - Other Relationship.",
        "enum": [
          "01",
          "19",
          "20",
          "21",
          "39",
          "40",
          "53",
          "G8"
        ],
        "type": "string"
      },
      "ReleaseInformationCode": {
        "description": "Indicates whether the provider has on file a signed statement by the patient authorizing the release of medical data to other organizations. Can be set to `Y` - Yes, or `I` - Informed Consent to Release Medical Information for Conditions or Diagnoses Regulated by Federal Statues. Use `I` when the provider has not collected a signature AND state or federal laws do not require a signature be collected.",
        "enum": [
          "I",
          "Y"
        ],
        "type": "string"
      },
      "ReleaseOfInformationCode": {
        "description": "Code indicating whether the provider has on file a signed statement by the patient authorizing the release of medical data to other organizations. Can be set to `I` - Informed Consent to Release Medical Information or `Y` - Yes. Code `I` is required when the provider has not collected a signature AND state or federal laws do not require a signature be collected. Code `Y` is required when the provider has collected a signature OR when state or federal laws require a signature be collected.",
        "enum": [
          "I",
          "Y"
        ],
        "type": "string"
      },
      "Rendering": {
        "description": "Information about the person or company (laboratory or other facility) who rendered the care. Use this object for all types of rendering providers including laboratories. When a substitute provider (locum tenens) was used, enter that provider's information here.\n- Use when the provider applies to the entire claim or to at least one service line. For example, if a claim had two service lines with two different rendering providers, you would include the provider for the first service line here and leave the `claimInformation.serviceLines.renderingProvider` object for that service line blank. Then, you would specify the second provider in the appropriate service line's `claimInformation.serviceLines.renderingProvider` object.\n- You can omit this object when the rendering provider is the same as the billing provider. In that case, you would include the provider's information in the `billing` object and leave this object blank.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "firstName": {
            "description": "The provider's first name, if the provider is an individual.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name, if the provider is an individual. You must include either the `lastName` or `organizationName` property in this object.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The provider's location number.",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial, if the provider is an individual.",
            "type": "string"
          },
          "npi": {
            "description": "The [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name, if the provider is an organization. You must include either the `lastName` or `organizationName` property in this object.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "description": "Code from the National Uniform Claims Committee [Health Care Provider Taxonomy Code Set](https://taxonomy.nucc.org/). This identifies the provider's type and/or area of specialty.",
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RenderingProviderType": {
        "description": "Defines the rendering provider type.",
        "enum": [
          "RenderingProvider"
        ],
        "type": "string"
      },
      "RenderingSecondaryIdentificationQualifierCode": {
        "description": "The type of identifier used in `secondaryIdentifier`. Can be set to `0B` - State License Number, `1G` - Provider UPIN Number, `G2` - Provider Commercial Number, or `LU` - Location Number. Note that UPIN is deprecated and should not be used.",
        "enum": [
          "0B",
          "1G",
          "G2",
          "LU"
        ],
        "type": "string"
      },
      "ReportInformation": {
        "properties": {
          "attachmentControlNumber": {
            "description": "A control number assigned to the attachment. The payer uses this identifier to match the attachment to the claim.\n  - You must include either this property or `attachmentId` in the request, but not both. Including both properties will result in an error.\n  - We recommend using a ULID or UUID of up to 50 characters.\n  - Stedi autogenerates a control number if you don't provide one.",
            "type": "string"
          },
          "attachmentId": {
            "description": "The unique identifier for an attachment file you previously uploaded to Stedi. This value is returned in the `attachmentId` property of the [Create Claim Attachment (275) JSON](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-submit-claim-attachment) response. Stedi uses it to generate and submit the 275 claim attachment transaction to the payer.\n  - This property is **required** when you're submitting attachment files through Stedi.\n  - You must include either this property or `attachmentControlNumber` in the request, but not both. Including both properties will result in an error.",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "attachmentReportTypeCode": {
            "$ref": "#/components/schemas/AttachmentReportTypeCode"
          },
          "attachmentTransmissionCode": {
            "$ref": "#/components/schemas/ReportInformationAttachmentTransmissionCode"
          }
        },
        "required": [
          "attachmentReportTypeCode",
          "attachmentTransmissionCode"
        ],
        "type": "object"
      },
      "ReportInformationAttachmentReportTypeCode": {
        "description": "Code indicating the title or contents of a document, report or supporting item. For example, `08` - Plan of Treatment or `CT` - Certification. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#attachment-report-type-codes) for a complete list.",
        "enum": [
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "13",
          "15",
          "21",
          "A3",
          "A4",
          "AM",
          "AS",
          "B2",
          "B3",
          "B4",
          "BR",
          "BS",
          "BT",
          "CB",
          "CK",
          "CT",
          "D2",
          "DA",
          "DB",
          "DG",
          "DJ",
          "DS",
          "EB",
          "HC",
          "HR",
          "I5",
          "IR",
          "LA",
          "M1",
          "MT",
          "NN",
          "OB",
          "OC",
          "OD",
          "OE",
          "OX",
          "OZ",
          "P4",
          "P5",
          "PE",
          "PN",
          "PO",
          "PQ",
          "PY",
          "PZ",
          "RB",
          "RR",
          "RT",
          "RX",
          "SG",
          "V5",
          "XP"
        ],
        "type": "string"
      },
      "ReportInformationAttachmentTransmissionCode": {
        "description": "Code identifying the method by which the provider's report is attached. Can be set to `AA` - Available on Request at Provider Site, `BM` - By Mail, `EL` - Electronically Only, `EM` - E-Mail, `FT` - File Transfer, or `FX` - By Fax.\n\nSet this to `EL` when you plan to submit attachments electronically through Stedi APIs.",
        "enum": [
          "AA",
          "BM",
          "EL",
          "EM",
          "FT",
          "FX"
        ],
        "type": "string"
      },
      "ReportsClaimAcknowledgmentResponse": {
        "properties": {
          "controlNumber": {
            "description": "The control number the payer provided in the claim status response. This is used to identify the transaction.",
            "type": "string"
          },
          "payers": {
            "description": "Information about the payer (or intermediary clearinghouse) and the claim status transactions included in the response.",
            "items": {
              "$ref": "#/components/schemas/ClaimAcknowledgmentPayer"
            },
            "type": "array"
          },
          "referenceIdentification": {
            "description": "A number the payer assigns to the transaction to identify it within their system.",
            "type": "string"
          },
          "transactionSetCreationDate": {
            "description": "The date the payer created the transaction.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "transactionSetCreationTime": {
            "description": "The time the payer created the transaction, expressed in 24-hour clock time. May be formatted as HHMM, HHMMSS, HHMMSSD, or HHMMSSDD, where H = hours (00-23), M = minutes (00-59), S = integer seconds (00-59) and DD = decimal seconds; decimal seconds are expressed as follows: D = tenths (0-9) and DD = hundredths (00-99).",
            "pattern": "^([01]\\d|2[0-3])[0-5]\\d$|^([01]\\d|2[0-3])[0-5]\\d[0-5]\\d$|^([01]\\d|2[0-3])[0-5]\\d[0-5]\\d\\d$|^([01]\\d|2[0-3])[0-5]\\d[0-5]\\d\\d\\d$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportsClaims": {
        "properties": {
          "claimStatus": {
            "$ref": "#/components/schemas/ClaimsClaimStatus",
            "description": "Status information for the claim. This object includes the `referencedTransactionTraceNumber` you can use to correlate the 277CA with the original claim."
          },
          "serviceLines": {
            "description": "Information about specific services within a claim. This object is only included in the 277CA when the claim is rejected because of errors with the service line information provided.",
            "items": {
              "$ref": "#/components/schemas/ClaimAcknowledgmentServiceLines"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportsContactInformation": {
        "properties": {
          "contactMethods": {
            "items": {
              "$ref": "#/components/schemas/ContactMethod"
            },
            "type": "array"
          },
          "contactName": {
            "description": "The name of the contact person or entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RepricedApprovedServiceUnitCode": {
        "description": "The approved service units or inpatient days. Can be set to `DA` - Days or `UN` - Unit.",
        "enum": [
          "DA",
          "UN"
        ],
        "type": "string"
      },
      "RequestAddress": {
        "properties": {
          "address1": {
            "description": "The first line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address.",
            "maxLength": 55,
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "description": "The city.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "countryCode": {
            "description": "The two-letter country code from [Part 1 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "The country subdivision code from [Part 2 of ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-2).",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "description": "The United States or Canadian postal code, excluding punctuation and blanks.",
            "maxLength": 9,
            "minLength": 5,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/StateOrProvinceCode"
          }
        },
        "required": [
          "address1",
          "city"
        ],
        "type": "object"
      },
      "RequestDependent": {
        "properties": {
          "additionalIdentification": {
            "$ref": "#/components/schemas/AdditionalIdentificationDependent"
          },
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "description": "The dependent's address. You must include at least the `address1` and `city` properties in this object."
          },
          "beginningCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance card was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "beginningPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance plan begins.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Use to indicate the birth order when there are multiple births associated with the provided birth date.",
            "maxLength": 9,
            "minLength": 1,
            "pattern": "^[0-9]+$",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The dependent's date of birth (DOB). We **strongly recommend** including the DOB in your request. Many payers need this information to identify the patient in their system and will immediately return an error when it's not provided.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "eligibilityCategory": {
            "description": "The eligibility category for the dependent.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "endCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance card expires.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the insurance plan ends.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The dependent's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "Code indicating the dependent's gender."
          },
          "groupNumber": {
            "description": "The group number for the dependent's insurance plan.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthCareCodeInformation": {
            "description": "Information about the dependent's health care diagnosis. You can include up to eight entries in this array. \n\nThe first array entry must have `diagnosisTypeCode` set to `ABK`. All subsequent entries must have `diagnosisTypeCode` set to `ABF`.",
            "items": {
              "$ref": "#/components/schemas/HealthCareInformation"
            },
            "maxItems": 8,
            "minItems": 1,
            "type": "array"
          },
          "idCard": {
            "description": "The dependent's insurance card number.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "idCardIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the identification card was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "individualRelationshipCode": {
            "$ref": "#/components/schemas/IndividualRelationshipCode"
          },
          "issueNumber": {
            "description": "The issue number for the dependent's insurance policy.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The dependent's last name. **Don't** include the dependent's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "memberId": {
            "deprecated": true,
            "description": "This shape is deprecated: This property is no longer used.",
            "maxLength": 80,
            "minLength": 2,
            "pattern": "^[A-Za-z0-9- ]+$",
            "type": "string"
          },
          "middleName": {
            "description": "The dependent's middle name or middle initial.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "planIssueDate": {
            "deprecated": true,
            "description": "This shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/RequestDependentProviderCode"
          },
          "providerIdentifier": {
            "description": "The provider identifier you specified in the `referenceIdentificationQualifier` property. For example, the provider's National Provider ID or Federal Taxpayer Identification number. If you set the `referenceIdentificationQualifier` to `PXC`, then this property should contain the provider's taxonomy code.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "referenceIdentificationQualifier": {
            "$ref": "#/components/schemas/RequestDependentReferenceIdentificationQualifier"
          },
          "ssn": {
            "description": "The dependent's social security number. Don't use this for Federally-administered programs, such as Medicare.",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "suffix": {
            "description": "The dependent's name suffix, such as Sr. or III. Only include the dependent's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestDependentProviderCode": {
        "description": "Use this for providers that are not requesting the eligibility check - the requestor is specified in the `provider` object. For example, if you are a hospital making an eligibility request, this is where you would specify information about a referring provider's role. \n\n You can use one of the following: `AD` - Admitting, `AT` - Attending, `BI` - Billing, `CO` - Consulting, `CV` - Covering, `H` - Hospital, `HH` - Home Health Care, `LA` - Laboratory, `OT` - Other Physician, `P1` - Pharmacist, `P2` - Pharmacy, `PC` - Primary Care Physician, `PE`- Performing, `R`- Rural Health Clinic, `RF` - Referring, `SB` - Submitting, `SK` - Skilled Nursing Facility, `SU` - Supervising",
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "RequestDependentReferenceIdentificationQualifier": {
        "description": "The type of `providerIdentifier` you are using. Use for providers that are not requesting the eligibility check, such as the referring provider.\n- Set to `HPI` when the National Provider ID is mandated for use.\n- Set to `PXC` if you're identifying a type of specialty associated with services provided to the dependent. \n \n Otherwise, you can set to the following: `9K` - Servicer, `D3` - National Council for Prescription Drug Programs Pharmacy Number, `EI` - Employer's Identification Number, `HPI` - Centers for Medicare and Medicaid Services National Provider Identifier, `PXC` - Health Care Provider Taxonomy Code, `SY` - Social Security Number, `TJ` - Federal Taxpayer's Identification Number",
        "enum": [
          "9K",
          "D3",
          "EI",
          "HPI",
          "PXC",
          "SY",
          "TJ"
        ],
        "type": "string"
      },
      "RequestEligibilityServiceTypeCode": {
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "30",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "AA",
          "AB",
          "AC",
          "AD",
          "AE",
          "AF",
          "AG",
          "AH",
          "AI",
          "AJ",
          "AK",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "B1",
          "B2",
          "B3",
          "BA",
          "BB",
          "BC",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BK",
          "BL",
          "BM",
          "BN",
          "BP",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BU",
          "BV",
          "BW",
          "BX",
          "BY",
          "BZ",
          "C1",
          "CA",
          "CB",
          "CC",
          "CD",
          "CE",
          "CF",
          "CG",
          "CH",
          "CI",
          "CJ",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CP",
          "CQ",
          "DG",
          "DM",
          "DS",
          "GF",
          "GN",
          "GY",
          "IC",
          "MH",
          "NI",
          "ON",
          "PT",
          "PU",
          "RN",
          "RT",
          "TC",
          "TN",
          "UC"
        ],
        "type": "string"
      },
      "RequestProviderCode": {
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SB",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "RequestSubscriber": {
        "description": "The primary policyholder for the insurance plan _or_ a dependent with a unique member ID. If a dependent has a unique member ID, include their information here and leave `dependents` empty.\n- At a minimum, our API requires that you supply at least one of these fields in the request: `memberId`, `dateOfBirth`, or `lastName`. However, each payer has different requirements, so you should supply the fields necessary for each payer to identify the subscriber in their system.\n- When you provide all four of `memberId`, `dateOfBirth`, `firstName`, and `lastName`, payers are required to return a response if the member is in their database. Some payers may be able to search with less information, but this varies by payer.\n- We recommend always including the patient's member ID when possible.\n- Enter the patient's name exactly as written on their insurance card, if available, including any special or punctuation characters such as apostrophes, hyphens (dashes), or spaces. Visit [patient names](https://www.stedi.com/docs/healthcare/send-eligibility-checks#patient-names) for all best practices to avoid unnecessary failures.",
        "properties": {
          "additionalIdentification": {
            "$ref": "#/components/schemas/AdditionalIdentificationSubscriber"
          },
          "address": {
            "$ref": "#/components/schemas/RequestAddress",
            "description": "The subscriber's address. You must include at least the `address1` and `city` properties in this object."
          },
          "beginningCardIssueDate": {
            "description": "The date the subscriber's identification card was issued.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "beginningPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's insurance plan was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Use to indicate the birth order when there are multiple births associated with the provided birth date.",
            "maxLength": 9,
            "minLength": 1,
            "pattern": "^[0-9]$",
            "type": "string"
          },
          "caseNumber": {
            "description": "The case number associated with the subscriber.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "coverageLevelCode": {
            "description": "This property is no longer used.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endCardIssueDate": {
            "description": "The date the subscriber's identification card expires.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "endPlanIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's insurance plan ended.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The patient's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "Code indicating the subscriber's gender."
          },
          "groupNumber": {
            "description": "The group number associated with the subscriber's insurance policy.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "healthCareCodeInformation": {
            "description": "Information about the subscriber's health care diagnosis. You can include up to eight entries in this array. \n\nThe first array entry must have `diagnosisTypeCode` set to `ABK`. All subsequent entries must have `diagnosisTypeCode` set to `ABF`.",
            "items": {
              "$ref": "#/components/schemas/HealthCareInformation"
            },
            "maxItems": 8,
            "minItems": 1,
            "type": "array"
          },
          "idCard": {
            "description": "The subscriber's identification card number. Include this property when this number is different than the subscriber's member ID. This is common in Medicaid.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "idCardIssueDate": {
            "description": "The date the subscriber's identification card was issued.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "lastName": {
            "description": "The subscriber's last name. **Don't** include the subscriber's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "medicaidRecipientIdentificationNumber": {
            "description": "The Medicaid Recipient Identification Number. You can provide this number to identify the subscriber when it is the primary number the payer knows a member by (such as for Medicare or Medicaid). Do not supply this value unless it is different from the `memberId`.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy.",
            "maxLength": 80,
            "minLength": 2,
            "pattern": "^[A-Za-z0-9- ]+$",
            "type": "string"
          },
          "middleName": {
            "description": "The patient's middle name or middle initial.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "planIssueDate": {
            "deprecated": true,
            "description": "Deprecated; The date the subscriber's insurance plan was issued.\nThis shape is deprecated: This property is no longer used.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/RequestSubscriberProviderCode"
          },
          "providerIdentifier": {
            "description": "The provider identifier you specified in the `referenceIdentificationQualifier` property. It is **required** if you set the `referenceIdentificationQualifier`. For example, this property could contain the provider's National Provider ID or Federal Taxpayer Identification number.\n\n If you set the `referenceIdentificationQualifier` to `PXC`, then this property should contain the provider's taxonomy code.",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[A-Za-z0-9]+$",
            "type": "string"
          },
          "referenceIdentificationQualifier": {
            "$ref": "#/components/schemas/RequestSubscriberReferenceIdentificationQualifier"
          },
          "spendDownAmount": {
            "description": "Identify the dollar amount the subscriber will apply toward their spend down amount, if required. For some Medicaid programs, individuals must pay a certain amount towards their healthcare cost (spend down) before coverage starts.",
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "spendDownTotalBilledAmount": {
            "description": "The subscriber's spend down total billed amount.",
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number (SSN). Many commercial and government payers ignore this property due to concerns about member privacy. However, some Medicaid programs support alternative searches using the patient's Social Security Number, instead of the member ID.",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Social Security Number (SSN)"
            }
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestSubscriberDependentAddress": {
        "description": "The patient's address. Every claim must include this information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n- The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n- If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependent` object in the response.\n- If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach.",
        "properties": {
          "address1": {
            "description": "The first line of the street address. This typically contains the building number and street name.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the street address. This typically contains the apartment or suite number.",
            "type": "string"
          },
          "city": {
            "description": "The city name.",
            "type": "string"
          },
          "countryCode": {
            "description": "Use the alpha-2 country codes from Part 1 of ISO 3166.",
            "type": "string"
          },
          "countrySubDivisionCode": {
            "description": "Use the country subdivision codes from Part 2 of ISO 3166.",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal zone or zip code. Exclude punctuation and spaces.",
            "type": "string"
          },
          "state": {
            "description": "The state or province code. Only required when the city is in the Unites States and Canada.",
            "type": "string"
          }
        },
        "required": [
          "address1",
          "city"
        ],
        "type": "object"
      },
      "RequestSubscriberProviderCode": {
        "description": "Use this for providers that are not requesting the eligibility check - the requestor is specified in the `provider` object. For example, if you are a hospital making an eligibility request, this is where you would specify information about a referring provider's role. \n\n This property is **required** when the `providerIdentifier` and `referenceIdentificationQualifier` properties are populated. \n\n You can use one of the following: `AD` - Admitting, `AT` - Attending, `BI` - Billing, `CO` - Consulting, `CV` - Covering, `H` - Hospital, `HH` - Home Health Care, `LA` - Laboratory, `OT` - Other Physician, `P1` - Pharmacist, `P2` - Pharmacy, `PC` - Primary Care Physician, `PE` - Performing, `R` - Rural Health Clinic, `RF` - Referring, `SB` - Submitting, `SK` - Skilled Nursing Facility, `SU` - Supervising",
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "RequestSubscriberReferenceIdentificationQualifier": {
        "description": "Use this for providers that are not requesting the eligibility check. This is the type of `providerIdentifier` you are providing.\n- Set to `HPI` when the National Provider ID is mandated for use.\n- Set to `PXC` if you're identifying a type of specialty associated with services provided to the subscriber. \n \n Otherwise, you can set to the following: `9K` - Servicer, `D3` - National Council for Prescription Drug Programs Pharmacy Number, `EI` - Employer's Identification Number, `HPI` - Centers for Medicare and Medicaid Services National Provider Identifier, `PXC` - Health Care Provider Taxonomy Code, `SY - Social Security Number, `TJ` - Federal Taxpayer's Identification Number",
        "enum": [
          "9K",
          "D3",
          "EI",
          "HPI",
          "PXC",
          "SY",
          "TJ"
        ],
        "type": "string"
      },
      "ResourceNotFoundException": {
        "description": "//// Errors\nThe server response when the specified resource cannot be found after an API request passes authentication and authorization.",
        "properties": {
          "code": {
            "description": "Classification of the exception type.",
            "type": "string"
          },
          "message": {
            "description": "Human readable exception message.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ResourceNotFoundExceptionResponseContent": {
        "description": "//// Errors\nThe server response when the specified resource cannot be found after an API request passes authentication and authorization.",
        "properties": {
          "code": {
            "description": "Classification of the exception type.",
            "type": "string"
          },
          "message": {
            "description": "Human readable exception message.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ResponseDependent": {
        "description": "Information about the dependent listed in the original eligibility check request. Note that a dependent submitted in the request may be returned in the subscriber object. When present, this object will always include the dependent's name for identification, but many payers will also return the date of birth and other identifying information.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckDependentError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The member's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriod": {
            "description": "The military service date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriodFormatQualifier": {
            "$ref": "#/components/schemas/DateTimePeriodFormatQualifier",
            "description": "The format of the military service date and time period. Can be `D8` - Date or `RD8` - Range of Dates.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "Context that identifies the exact military unit. Used to report military service data.",
            "type": "string"
          },
          "employmentStatusCode": {
            "$ref": "#/components/schemas/EmploymentStatusCode",
            "description": "The member's employment status code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#employment-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "endDateTimePeriod": {
            "description": "The military service end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseDependentEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type for the member. It can technically be set to `Person` or `Non-Person Entity`. In practice, our customers only receive `Person`.\n\nPayers may sometimes return other non-compliant values."
          },
          "firstName": {
            "description": "The member's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the patient's gender."
          },
          "governmentServiceAffiliationCode": {
            "$ref": "#/components/schemas/GovernmentServiceAffiliationCode",
            "description": "The member's government service affiliation code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#government-service-affiliation-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number associated with the insurance policy.",
            "type": "string"
          },
          "healthCareDiagnosisCodes": {
            "items": {
              "$ref": "#/components/schemas/HealthCareDiagnosisCode"
            },
            "type": "array"
          },
          "informationStatusCode": {
            "$ref": "#/components/schemas/InformationStatusCode",
            "description": "The status of the member's information, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#information-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "insuredIndicator": {
            "$ref": "#/components/schemas/DependentInsuredIndicator"
          },
          "lastName": {
            "description": "The member's last name.",
            "type": "string"
          },
          "maintenanceReasonCode": {
            "$ref": "#/components/schemas/MaintenanceReasonCode"
          },
          "maintenanceTypeCode": {
            "$ref": "#/components/schemas/MaintenanceTypeCode"
          },
          "memberId": {
            "description": "The member ID for the insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The member's middle name or initial.",
            "type": "string"
          },
          "militaryServiceRankCode": {
            "$ref": "#/components/schemas/MilitaryServiceRankCode",
            "description": "The member's military service rank code. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#military-service-rank-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The network identification number associated with the insurance policy.",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number associated with the insurance policy.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/DependentRelationship"
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/DependentRelationshipCode"
          },
          "responseProvider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "ssn": {
            "description": "The member's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "startDateTimePeriod": {
            "description": "The military service start date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III.",
            "type": "string"
          },
          "uniqueHealthIdentifier": {
            "description": "The member's unique health identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseDependentEntityIdentifier": {
        "description": "The entity identifier for the dependent.",
        "enum": [
          "Dependent"
        ],
        "type": "string"
      },
      "ResponseEligibilityServiceType": {
        "description": "The name of a service type code listed in the `serviceTypeCodes` array. Visit [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) for a complete list of codes and their names. \n\nThe word physician in service type codes refers to any healthcare provider, including physician assistants, nurse practitioners, and other types of healthcare professionals.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Medical Care",
          "Surgical",
          "Consultation",
          "Diagnostic X-Ray",
          "Diagnostic Lab",
          "Radiation Therapy",
          "Anesthesia",
          "Surgical Assistance",
          "Other Medical",
          "Blood Charges",
          "Used Durable Medical Equipment",
          "Durable Medical Equipment Purchase",
          "Ambulatory Service Center Facility",
          "Renal Supplies in the Home",
          "Alternate Method Dialysis",
          "Chronic Renal Disease (CRD) Equipment",
          "Pre-Admission Testing",
          "Durable Medical Equipment Rental",
          "Pneumonia Vaccine",
          "Second Surgical Opinion",
          "Third Surgical Opinion",
          "Social Work",
          "Diagnostic Dental",
          "Periodontics",
          "Restorative",
          "Endodontics",
          "Maxillofacial Prosthetics",
          "Adjunctive Dental Services",
          "Health Benefit Plan Coverage",
          "Plan Waiting Period",
          "Chiropractic",
          "Chiropractic Office Visits",
          "Dental Care",
          "Dental Crowns",
          "Dental Accident",
          "Orthodontics",
          "Prosthodontics",
          "Oral Surgery",
          "Routine (Preventive) Dental",
          "Home Health Care",
          "Home Health Prescriptions",
          "Home Health Visits",
          "Hospice",
          "Respite Care",
          "Hospital",
          "Hospital - Inpatient",
          "Hospital - Room and Board",
          "Hospital - Outpatient",
          "Hospital - Emergency Accident",
          "Hospital - Emergency Medical",
          "Hospital - Ambulatory Surgical",
          "Long Term Care",
          "Major Medical",
          "Medically Related Transportation",
          "Air Transportation",
          "Cabulance",
          "Licensed Ambulance",
          "General Benefits",
          "In-vitro Fertilization",
          "MRI/CAT Scan",
          "Donor Procedures",
          "Acupuncture",
          "Newborn Care",
          "Pathology",
          "Smoking Cessation",
          "Well Baby Care",
          "Maternity",
          "Transplants",
          "Audiology Exam",
          "Inhalation Therapy",
          "Diagnostic Medical",
          "Private Duty Nursing",
          "Prosthetic Device",
          "Dialysis",
          "Otological Exam",
          "Chemotherapy",
          "Allergy Testing",
          "Immunizations",
          "Routine Physical",
          "Family Planning",
          "Infertility",
          "Abortion",
          "AIDS",
          "Emergency Services",
          "Cancer",
          "Pharmacy",
          "Free Standing Prescription Drug",
          "Mail Order Prescription Drug",
          "Brand Name Prescription Drug",
          "Generic Prescription Drug",
          "Podiatry",
          "Podiatry - Office Visits",
          "Podiatry - Nursing Home Visits",
          "Professional (Physician)",
          "Anesthesiologist",
          "Professional (Physician) Visit - Office",
          "Professional (Physician) Visit - Inpatient",
          "Professional (Physician) Visit - Outpatient",
          "Professional (Physician) Visit - Nursing Home",
          "Professional (Physician) Visit - Skilled Nursing Facility",
          "Professional (Physician) Visit - Home",
          "Psychiatric",
          "Psychiatric - Room and Board",
          "Psychotherapy",
          "Psychiatric - Inpatient",
          "Psychiatric - Outpatient",
          "Rehabilitation",
          "Rehabilitation - Room and Board",
          "Rehabilitation - Inpatient",
          "Rehabilitation - Outpatient",
          "Occupational Therapy",
          "Physical Medicine",
          "Speech Therapy",
          "Skilled Nursing Care",
          "Skilled Nursing Care - Room and Board",
          "Substance Abuse",
          "Alcoholism",
          "Drug Addiction",
          "Vision (Optometry)",
          "Frames",
          "Routine Exam",
          "Lenses",
          "Nonmedically Necessary Physical",
          "Experimental Drug Therapy",
          "Burn Care",
          "Brand Name Prescription Drug - Formulary",
          "Brand Name Prescription Drug - Non-Formulary",
          "Independent Medical Evaluation",
          "Partial Hospitalization (Psychiatric)",
          "Day Care (Psychiatric)",
          "Cognitive Therapy",
          "Massage Therapy",
          "Pulmonary Rehabilitation",
          "Cardiac Rehabilitation",
          "Pediatric",
          "Nursery",
          "Skin",
          "Orthopedic",
          "Cardiac",
          "Lymphatic",
          "Gastrointestinal",
          "Endocrine",
          "Neurology",
          "Eye",
          "Invasive Procedures",
          "Gynecological",
          "Obstetrical",
          "Obstetrical/Gynecological",
          "Mail Order Prescription Drug - Formulary",
          "Mail Order Prescription Drug - Non-Formulary",
          "Physician Visit - Office: Sick",
          "Physician Visit - Office: Well",
          "Coronary Care",
          "Private Duty Nursing - Inpatient",
          "Private Duty Nursing - Home",
          "Surgical Benefits - Professional (Physician)",
          "Surgical Benefits - Facility",
          "Mental Health Provider - Inpatient",
          "Mental Health Provider - Outpatient",
          "Mental Health Facility - Inpatient",
          "Mental Health Facility - Outpatient",
          "Substance Abuse Facility - Inpatient",
          "Substance Abuse Facility - Outpatient",
          "Screening X-ray",
          "Screening laboratory",
          "Mammogram, High Risk Patient",
          "Mammogram, Low Risk Patient",
          "Flu Vaccination",
          "Eyewear and Eyewear Accessories",
          "Case Management",
          "Dermatology",
          "Durable Medical Equipment",
          "Diabetic Supplies",
          "Generic Prescription Drug - Formulary",
          "Generic Prescription Drug - Non-Formulary",
          "Allergy",
          "Intensive Care",
          "Mental Health",
          "Neonatol Intensive Care",
          "Oncology",
          "Physical Therapy",
          "Pulmonary",
          "Renal",
          "Residential Psychiatric Treatment",
          "Transitional Care",
          "Transitional Nursery Care",
          "Urgent Care"
        ],
        "type": "string"
      },
      "ResponseEligibilityServiceTypeCode": {
        "description": "A code identifying a type of service. For example, `7` - Anesthesia. Visit [Service Type Codes](https://www.stedi.com/docs/healthcare/send-eligibility-checks#service-type-codes) for a complete list. \n\n This list is specific to X12 version 005010, which is the mandated version for eligibility checks. It differs from the current [X12 Service Type Codes](https://x12.org/codes/service-type-codes) list, which applies to X12 versions later than 005010.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "30",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "AA",
          "AB",
          "AC",
          "AD",
          "AE",
          "AF",
          "AG",
          "AH",
          "AI",
          "AJ",
          "AK",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "B1",
          "B2",
          "B3",
          "BA",
          "BB",
          "BC",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BK",
          "BL",
          "BM",
          "BN",
          "BP",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BU",
          "BV",
          "BW",
          "BX",
          "BY",
          "BZ",
          "C1",
          "CA",
          "CB",
          "CC",
          "CD",
          "CE",
          "CF",
          "CG",
          "CH",
          "CI",
          "CJ",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CP",
          "CQ",
          "DG",
          "DM",
          "DS",
          "GF",
          "GN",
          "GY",
          "IC",
          "MH",
          "NI",
          "ON",
          "PT",
          "PU",
          "RN",
          "RT",
          "TC",
          "TN",
          "UC"
        ],
        "type": "string"
      },
      "ResponseMeta": {
        "description": "Metadata from Stedi about the request.",
        "properties": {
          "applicationMode": {
            "description": "Indicates where this request can be found for support.",
            "type": "string"
          },
          "billerId": {
            "description": "The biller ID assigned to this request.",
            "type": "string"
          },
          "senderId": {
            "description": "The sender ID assigned to this request.",
            "type": "string"
          },
          "submitterId": {
            "description": "The submitter ID assigned to this request.",
            "type": "string"
          },
          "traceId": {
            "description": "The file execution ID, a unique identifier assigned to the processed file within the Stedi platform.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseProvider": {
        "description": "Information about the entity that submitted the original eligibility check request. This may be an individual practitioner, a medical group, a hospital, or another type of healthcare provider. This object will always include at least one identifier, such as the provider's [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier), tax ID, or EIN.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckProviderError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "The provider's contact information."
          },
          "employersId": {
            "deprecated": true,
            "description": "Deprecated; The provider's identification number for the entity receiving the benefits information.\nThis shape is deprecated: This property is no longer used.",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseProviderEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier"
          },
          "federalTaxpayersIdNumber": {
            "description": "The Federal Taxpayer Identification Number (also known as an EIN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name. This applies to providers that are an individual.",
            "type": "string"
          },
          "npi": {
            "description": "The provider's [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier).",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "payorIdentification": {
            "description": "The Payor Identification.",
            "type": "string"
          },
          "pharmacyProcessorNumber": {
            "description": "The pharmacy processor number.",
            "type": "string"
          },
          "providerCode": {
            "$ref": "#/components/schemas/ResponseProviderCode",
            "description": "A code that communicates the provider's role in the type of benefits information in the response. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "providerFirstName": {
            "description": "The provider's first name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerName": {
            "description": "The provider's last name. This applies to providers that are an individual.",
            "type": "string"
          },
          "providerOrgName": {
            "description": "The provider's organization name.",
            "type": "string"
          },
          "referenceIdentification": {
            "description": "The Health Care Provider Taxonomy Code.",
            "type": "string"
          },
          "serviceProviderNumber": {
            "description": "The service provider number. This is an identification number assigned by the payer.",
            "type": "string"
          },
          "servicesPlanID": {
            "description": "The Centers for Medicare and Medicaid Services (CMS) Plan ID.",
            "type": "string"
          },
          "ssn": {
            "description": "The Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr., Sr., or III.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseProviderCode": {
        "description": "A code indicating the type of provider. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#provider-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "AD",
          "AT",
          "BI",
          "CO",
          "CV",
          "H",
          "HH",
          "LA",
          "OT",
          "P1",
          "P2",
          "PC",
          "PE",
          "R",
          "RF",
          "SB",
          "SK",
          "SU"
        ],
        "type": "string"
      },
      "ResponseProviderEntityIdentifier": {
        "description": "A code identifying the type of provider.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Provider",
          "Third-Party Administrator",
          "Employer",
          "Hospital",
          "Facility",
          "Gateway Provider",
          "Plan Sponsor",
          "Payer"
        ],
        "type": "string"
      },
      "ResponseSubscriber": {
        "description": "Information about the primary policyholder for the insurance plan listed in the original eligibility check request. The response will always include either the subscriber's name or member ID for identification, but most payers will also return the subscriber's date of birth and other identifying information.",
        "properties": {
          "aaaErrors": {
            "items": {
              "$ref": "#/components/schemas/EligibilityCheckSubscriberError"
            },
            "type": "array"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "birthSequenceNumber": {
            "description": "The number assigned to each family member born with the same birth date, such as twins or triplets. Indicates the birth order when there are multiple births associated with the provided birth date.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The member's date of birth.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriod": {
            "description": "The military service date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "dateTimePeriodFormatQualifier": {
            "$ref": "#/components/schemas/DateTimePeriodFormatQualifier",
            "description": "The format of the military service date and time period. Can be `D8` - Date or `RD8` - Range of Dates.\n\nPayers may sometimes return other non-compliant values."
          },
          "description": {
            "description": "Context that identifies the exact military unit. Used to report military service data.",
            "type": "string"
          },
          "employmentStatusCode": {
            "$ref": "#/components/schemas/EmploymentStatusCode",
            "description": "The member's employment status code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#employment-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "endDateTimePeriod": {
            "description": "The military service end date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entityIdentifier": {
            "$ref": "#/components/schemas/ResponseSubscriberEntityIdentifier"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeQualifier",
            "description": "The entity type for the member. It can technically be set to `Person` or `Non-Person Entity`. In practice, our customers only receive `Person`.\n\nPayers may sometimes return other non-compliant values."
          },
          "firstName": {
            "description": "The member's first name.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderWithUnknown",
            "description": "Code indicating the patient's gender."
          },
          "governmentServiceAffiliationCode": {
            "$ref": "#/components/schemas/GovernmentServiceAffiliationCode",
            "description": "The member's government service affiliation code, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#government-service-affiliation-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "groupDescription": {
            "description": "Group name",
            "type": "string"
          },
          "groupNumber": {
            "description": "The group number associated with the insurance policy.",
            "type": "string"
          },
          "healthCareDiagnosisCodes": {
            "items": {
              "$ref": "#/components/schemas/HealthCareDiagnosisCode"
            },
            "type": "array"
          },
          "informationStatusCode": {
            "$ref": "#/components/schemas/InformationStatusCode",
            "description": "The status of the member's information, used to report military service data. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#information-status-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "insuredIndicator": {
            "$ref": "#/components/schemas/SubscriberInsuredIndicator"
          },
          "lastName": {
            "description": "The member's last name.",
            "type": "string"
          },
          "maintenanceReasonCode": {
            "$ref": "#/components/schemas/MaintenanceReasonCode"
          },
          "maintenanceTypeCode": {
            "$ref": "#/components/schemas/MaintenanceTypeCode"
          },
          "memberId": {
            "description": "The member ID for the insurance policy.",
            "type": "string"
          },
          "middleName": {
            "description": "The member's middle name or initial.",
            "type": "string"
          },
          "militaryServiceRankCode": {
            "$ref": "#/components/schemas/MilitaryServiceRankCode",
            "description": "The member's military service rank code. Visit [Eligibility code lists](https://www.stedi.com/docs/healthcare/eligibility-code-lists#military-service-rank-codes) for a complete list.\n\nPayers may sometimes return other non-compliant values."
          },
          "planDescription": {
            "description": "Plan name",
            "type": "string"
          },
          "planNetworkDescription": {
            "description": "Plan network name",
            "type": "string"
          },
          "planNetworkIdNumber": {
            "description": "The network identification number associated with the insurance policy.",
            "type": "string"
          },
          "planNumber": {
            "description": "The plan number associated with the insurance policy.",
            "type": "string"
          },
          "relationToSubscriber": {
            "$ref": "#/components/schemas/SubscriberRelationship"
          },
          "relationToSubscriberCode": {
            "$ref": "#/components/schemas/SubscriberRelationshipCode"
          },
          "responseProvider": {
            "$ref": "#/components/schemas/ResponseProvider"
          },
          "ssn": {
            "description": "The member's Social Security Number (SSN).",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "startDateTimePeriod": {
            "description": "The military service start date.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "suffix": {
            "description": "The name suffix, such as Jr., Sr., or III.",
            "type": "string"
          },
          "uniqueHealthIdentifier": {
            "description": "The member's unique health identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseSubscriberEntityIdentifier": {
        "description": "The entity identifier for the subscriber.",
        "enum": [
          "Insured or Subscriber"
        ],
        "type": "string"
      },
      "SearchPayerRecord": {
        "properties": {
          "aliases": {
            "description": "Alternative IDs associated with a payer. If a payer changes their `primaryPayerId`, aliases allow you to continue sending transactions to the payer using the old ID uninterrupted.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "coverageTypes": {
            "description": "A list of insurance coverage types that indicates whether this payer supports transactions for medical coverage, dental coverage, or both. For example: `[\"medical\"]` or `[\"medical\", \"dental\"]`.\n\nWhen this array isn't in the response, it means Stedi hasn't classified the payer's coverage types yet, **not** that the payer doesn't support any coverage types.",
            "items": {
              "$ref": "#/components/schemas/CoverageType"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The payer's business name, such as Cigna or Aetna. This is the name most commonly used to identify the payer.",
            "type": "string"
          },
          "employerIdentificationNumbers": {
            "description": "Employer Identification Numbers (EINs) associated with this payer.",
            "items": {
              "description": "A valid Employer Identification Number (EIN) in the format XX-XXXXXXX",
              "pattern": "^[0-9]{2}-[0-9]{7}$",
              "type": "string"
            },
            "type": "array"
          },
          "enrollment": {
            "$ref": "#/components/schemas/EnrollmentInfo",
            "description": "Information about the [transaction enrollment process](https://www.stedi.com/docs/healthcare/transaction-enrollment) for this payer."
          },
          "names": {
            "description": "Alternative names associated with a payer. These additional names help you search for and identify payers using the name most familiar to your organization.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "parentPayerGroupId": {
            "description": "The parent payer group entity this payer belongs to. This is for metadata purposes and doesn't necessarily relate to the payer's enrollment process or other capabilities.",
            "type": "string"
          },
          "primaryPayerId": {
            "description": "The most commonly used ID for a payer. This value often corresponds to the name the payer uses internally and provides to patients on member ID cards.",
            "type": "string"
          },
          "stediId": {
            "description": "A unique ID that Stedi assigned to this payer and uses internally for routing requests. This ID will not change even if the `primaryPayerId` is updated.",
            "type": "string"
          },
          "transactionSupport": {
            "$ref": "#/components/schemas/SearchPayerTransactionSupport"
          }
        },
        "required": [
          "aliases",
          "displayName",
          "names",
          "primaryPayerId",
          "stediId",
          "transactionSupport"
        ],
        "type": "object"
      },
      "SearchPayerTransactionSupport": {
        "description": "Whether the following transaction types are supported: 270 eligibility checks, 276/277 claim status requests, 837 claims (professional, dental, institutional), 835 ERAs (claim payments), 275 unsolicited claim attachments, and coordination of benefits checks.\n\nIf the value is `ENROLLMENT_REQUIRED`, Stedi supports the transaction type, but you must [enroll with the payer](https://www.stedi.com/docs/healthcare/supported-payers#enrollment) first.",
        "properties": {
          "claimPayment": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can receive 835 Electronic Remittance Advice (ERA) transactions from this payer."
          },
          "claimStatus": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 276 claim status requests to this payer."
          },
          "coordinationOfBenefits": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Coordination of Benefits (COB) support."
          },
          "dentalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 837D dental claims to this payer."
          },
          "eligibilityCheck": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 270 eligibility checks to this payer."
          },
          "institutionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 837I institutional claims to this payer."
          },
          "professionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 837P professional claims to this payer."
          },
          "unsolicitedClaimAttachment": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send unsolicited claim attachments to this payer."
          }
        },
        "required": [
          "claimPayment",
          "claimStatus",
          "coordinationOfBenefits",
          "dentalClaimSubmission",
          "eligibilityCheck",
          "institutionalClaimSubmission",
          "professionalClaimSubmission",
          "unsolicitedClaimAttachment"
        ],
        "type": "object"
      },
      "SearchPayersResponseContent": {
        "description": "Common output structure for list operations with pagination support.",
        "properties": {
          "items": {
            "description": "Matching payers sorted by relevance, with the most relevant matches listed first.",
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token for pagination to retrieve the next page of results; null if there are no more results",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/SearchResultsStats",
            "description": "Statistics about the search results, including the total number of payers matching the search query and the number of payers supported per transaction type."
          }
        },
        "required": [
          "items",
          "stats"
        ],
        "type": "object"
      },
      "SearchResult": {
        "properties": {
          "matches": {
            "$ref": "#/components/schemas/Matches",
            "description": "Shows which properties in the payer record match the search query. This information helps you understand why Stedi returned this payer and which parts of the payer record matched the search terms. It's also especially useful for debugging search queries and building user interfaces that display matching text.\n- Matching text is wrapped in `<b>` HTML tags for highlighting.\n- This object only contains properties with matching text. For example, if none of the payer's aliases matched the search query, this object will not include the `aliases` property."
          },
          "payer": {
            "$ref": "#/components/schemas/SearchPayerRecord",
            "description": "A payer record matching the search query."
          },
          "score": {
            "deprecated": true,
            "description": "A relevance score indicating how well this payer matched the search query. Higher scores are better matches. The minimum score is 0.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "payer",
          "score"
        ],
        "type": "object"
      },
      "SearchResultsStats": {
        "properties": {
          "total": {
            "description": "Total number of payers matching the search query.",
            "minimum": 0,
            "type": "number"
          },
          "transactionSupport": {
            "$ref": "#/components/schemas/TransactionSupportStats",
            "deprecated": true,
            "description": "Number of matching payers supported per transaction type.\n\nThe categories for each transaction type are mutually exclusive. For example, to calculate the total number of payers that support eligibility checks, regardless of whether enrollment is required, you must add the `supported` and `enrollmentRequired` counts together.\n\n**DEPRECATED**\nThis shape is deprecated since 2025-06-24: Use the `transactionSupportCounts` property instead."
          },
          "transactionSupportCounts": {
            "$ref": "#/components/schemas/TransactionSupportCounts",
            "description": "Number of matching payers for each supported transaction type.\n\nTo get the total number of payers that support each transaction type, with additional detail on whether enrollment is required, use `supported.total` instead."
          }
        },
        "required": [
          "total",
          "transactionSupport",
          "transactionSupportCounts"
        ],
        "type": "object"
      },
      "SecondaryIdentifierTypeCode": {
        "description": "Code identifying the type of secondary identifier. Can be set to `2U` - Payer Identification Number, `FY` - Claim Office Number, or `NF` - National Association of Insurance Commissioners. You should only set this to `2U` when you set the `primaryIdentifierTypeCode` to `XV`.",
        "enum": [
          "2U",
          "FY",
          "NF"
        ],
        "type": "string"
      },
      "SenderAccountDetails": {
        "description": "Financial institution account details for the payment sender.",
        "properties": {
          "senderAccountNumber": {
            "description": "The account number for the company originating the payment.",
            "type": "string"
          },
          "senderAccountNumberQualifier": {
            "$ref": "#/components/schemas/AccountNumberQualifier",
            "description": "The code identifying the type of account the payment is being made from. Can be `DA` - Demand Deposit."
          },
          "senderDFIIdentifier": {
            "description": "The identifier specified by the `senderDfiIdNumberQualifier`.",
            "type": "string"
          },
          "senderDfiIdNumberQualifier": {
            "$ref": "#/components/schemas/DfiIdNumberQualifier",
            "description": "The code identifying the type of identification number of the Depository Financial Institution (DFI). Can be either `01` - ABA Transit Routing Number Including Check Digits (9 digits) or `04` - Canadian Bank Branch Institution Number."
          }
        },
        "type": "object"
      },
      "Service": {
        "description": "Information about a service line listed in the referenced claim.",
        "properties": {
          "amountPaid": {
            "description": "The amount paid for the service line, expressed as a decimal. For example, `100.00`.",
            "type": "string"
          },
          "procedureId": {
            "description": "Identifying number for product or service.",
            "type": "string"
          },
          "revenueCode": {
            "description": "The National Uniform Billing Committee revenue code.",
            "type": "string"
          },
          "serviceIdQualifier": {
            "description": "The definition of the `serviceIdQualifierCode`. For example, `American Dental Association Codes`.",
            "type": "string"
          },
          "serviceIdQualifierCode": {
            "$ref": "#/components/schemas/ServiceIdQualifierCode"
          },
          "submittedAmount": {
            "description": "The amount submitted for the service line, expressed as a decimal. For example, `100.00`. This is the line item total on the current claim service status.",
            "type": "string"
          },
          "submittedUnits": {
            "description": "The number of units of service submitted.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceAuthorizationExceptionCode": {
        "description": "Code indicating the reason for the service authorization exception. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#service-authorization-exception-codes) for a complete list.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7"
        ],
        "type": "string"
      },
      "ServiceClaimStatus": {
        "properties": {
          "effectiveDate": {
            "description": "The date the status information is effective.",
            "type": "string"
          },
          "serviceStatuses": {
            "description": "The status of the service.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceDetail": {
        "properties": {
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "status": {
            "description": "Information about the status, required action, and paid information of a service line.",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceEntityIdentifierCode": {
        "description": "Entity identifier code for service lines in claim status reports",
        "enum": [
          "03",
          "36",
          "40",
          "41",
          "71",
          "72",
          "73",
          "77",
          "82",
          "85",
          "87",
          "1P",
          "1Z",
          "DK",
          "DN",
          "DQ",
          "FA",
          "GB",
          "HK",
          "IL",
          "LI",
          "MSC",
          "PR",
          "PRP",
          "QB",
          "QC",
          "QD",
          "SEP",
          "TL",
          "TTP",
          "TU"
        ],
        "type": "string"
      },
      "ServiceEntityIdentifierCodeValue": {
        "description": "Human-readable descriptions for service entity identifier codes",
        "enum": [
          "Dependent",
          "Employer",
          "Receiver",
          "Submitter",
          "Attending Physician",
          "Operating Physician",
          "Other Physician",
          "Service Location",
          "Rendering Provider",
          "Billing Provider",
          "Pay-to Provider",
          "Provider",
          "Home Health Care",
          "Ordering Physician",
          "Referring Provider",
          "Supervising Physician",
          "Facility",
          "Other Insured",
          "Subscriber",
          "Insured or Subscriber",
          "Independent Lab",
          "Mammography Screening Center",
          "Payer",
          "Primary Payer",
          "Purchase Service Provider",
          "Patient",
          "Responsible Party",
          "Secondary Payer",
          "Testing Laboratory",
          "Tertiary Payer",
          "Third Party Repricing Organization (TPO)"
        ],
        "type": "string"
      },
      "ServiceFacilityLocationSecondaryIdentificationQualifierCode": {
        "description": "Code identifying the type of secondary identification. Can be set to `0B` - State License Number, `G2` - Provider Commercial Number, or `LU` - Location Number.",
        "enum": [
          "0B",
          "G2",
          "LU"
        ],
        "type": "string"
      },
      "ServiceIdQualifierCode": {
        "description": "A code identifying the type/source of the `procedureId`. Visit [Check claim status](https://www.stedi.com/docs/healthcare/check-claim-status#product-or-service-id-qualifier) for a complete list.",
        "enum": [
          "AD",
          "ER",
          "HC",
          "HP",
          "IV",
          "N4",
          "NU",
          "WK"
        ],
        "type": "string"
      },
      "ServiceLine": {
        "properties": {
          "additionalNotes": {
            "description": "Additional information the provider feels is necessary to substantiate the medical treatment that cannot be provided in other claim properties. Don't use this property to describe non-specific procedure codes.",
            "type": "string"
          },
          "ambulanceCertification": {
            "items": {
              "$ref": "#/components/schemas/AmbulanceCertification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "ambulanceDropOffLocation": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address where the ambulance dropped off the patient."
          },
          "ambulancePatientCount": {
            "description": "The number of patients transported by the ambulance. Required when more than one patient is transported in the same vehicle for Ambulance or non-emergency transportation services.",
            "type": "number"
          },
          "ambulancePickUpLocation": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address where the ambulance picked up the patient. If the ambulance pickup location is in an area where there are no street addresses, enter a description of where the service was rendered. For example `Exit near mile marker 123 on I-95.`"
          },
          "ambulanceTransportInformation": {
            "$ref": "#/components/schemas/AmbulanceTransportInformation"
          },
          "assignedNumber": {
            "deprecated": true,
            "description": "Deprecated; Stedi computes this value for you.",
            "type": "string"
          },
          "conditionIndicatorDurableMedicalEquipment": {
            "$ref": "#/components/schemas/ConditionIndicatorDurableMedicalEquipment"
          },
          "contractInformation": {
            "$ref": "#/components/schemas/ContractInformation"
          },
          "drugIdentification": {
            "$ref": "#/components/schemas/DrugIdentification"
          },
          "durableMedicalEquipmentCertificateOfMedicalNecessity": {
            "$ref": "#/components/schemas/DurableMedicalEquipmentCertificateOfMedicalNecessity"
          },
          "durableMedicalEquipmentCertification": {
            "$ref": "#/components/schemas/DurableMedicalEquipmentCertification"
          },
          "durableMedicalEquipmentService": {
            "$ref": "#/components/schemas/DurableMedicalEquipmentService"
          },
          "fileInformation": {
            "description": "Used to send additional data specifically requested by the payer. Not commonly used.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "formIdentification": {
            "description": "Use this object to attach standardized supplemental information to the claim when required by the payer. One example is payer documentation requirements for home health services.",
            "items": {
              "$ref": "#/components/schemas/FormIdentification"
            },
            "type": "array"
          },
          "goalRehabOrDischargePlans": {
            "description": "The provider's goals, rehabilitation potential, or discharge plans for the patient.",
            "type": "string"
          },
          "hospiceEmployeeIndicator": {
            "description": "Whether the rendering provider is a hospice employee. Required on all Medicare claims involving physician services to hospice patients. Set to `true` if the rendering provider is a hospice employee, and `false` if they are not.",
            "type": "boolean"
          },
          "lineAdjudicationInformation": {
            "description": "Includes service line adjudication information for coordination of benefits between the initial payers of a health care claim and all subsequent payers.",
            "items": {
              "$ref": "#/components/schemas/LineAdjudicationInformation"
            },
            "maxItems": 15,
            "minItems": 1,
            "type": "array"
          },
          "linePricingRepricingInformation": {
            "$ref": "#/components/schemas/ClaimPricingRepricingInformation"
          },
          "obstetricAnesthesiaAdditionalUnits": {
            "description": "The number of units reported by an anesthesia provider to reflect additional complexity of services.",
            "type": "number"
          },
          "orderingProvider": {
            "$ref": "#/components/schemas/ServiceLineOrderingProvider",
            "description": "Information about the provider who requested the services or items reported in this service line.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`."
          },
          "postageTaxAmount": {
            "description": "The amount of the postage, formatted as a decimal. When you include this property, the total `lineItemChargeAmount` for this service line must include this postage value.",
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          },
          "professionalService": {
            "$ref": "#/components/schemas/ProfessionalService"
          },
          "providerControlNumber": {
            "description": "A unique identifier for this service line within the claim. It appears in the 835 (ERA) response as `lineItemControlNumber`, allowing you to correlate ERAs to the specific service lines from the original claim. If you don't set this property, Stedi uses a random UUID. Stedi returns service line identifiers in the `claimReference.serviceLines.lineItemControlNumber` object of the synchronous API response.",
            "type": "string"
          },
          "purchasedServiceInformation": {
            "$ref": "#/components/schemas/PurchasedServiceInformation"
          },
          "purchasedServiceProvider": {
            "$ref": "#/components/schemas/ServiceLineProviderPurchasedService",
            "description": "Information about the provider who performed the purchased service. A purchased service provider performs a service on a contractual or reassignment basis for the billing provider. Examples of purchased services include processing a laboratory specimen and performing diagnostic testing services (excluding clinical laboratory testing) subject to Medicare's anti-markup rule. Note that a substitute provider (a locum tenens physician) is not considered a purchased service provider."
          },
          "referringProvider": {
            "$ref": "#/components/schemas/ClaimsServiceLineReferringProvider",
            "description": "Information about the provider who directed the patient to the rendering provider for care. For example, a primary care provider may refer patients to a specialist. Include this object when the referring provider is different than the one listed in the `referring` object for the entire claim.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`."
          },
          "renderingProvider": {
            "$ref": "#/components/schemas/ClaimsServiceLineRenderingProvider",
            "description": "Information about the provider who rendered the services. This can be a individual or a company (a laboratory or other facility). This is where you should enter the substitute provider's (locum tenens physician) information, if applicable.\n\nYou should only include this object when the rendering provider information for this service line is different than the information listed in the `rendering` object for the entire claim."
          },
          "salesTaxAmount": {
            "description": "Sales tax, formatted as a decimal. When you include this property, the total `lineItemChargeAmount` for this service line must include this sales tax value.",
            "type": "string"
          },
          "serviceDate": {
            "description": "The date the service was rendered (for services performed on a single day). When you send this property with `serviceDateEnd`, it will be used as the start date for the date range in which the service was rendered.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceDateEnd": {
            "description": "The end date of the service period. If you send this property, you must also send `serviceDate`.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceFacilityLocation": {
            "$ref": "#/components/schemas/ServiceLineServiceFacilityLocation",
            "description": "Information about where the services were rendered. This can be healthcare facilities, such as surgical centers or reference labs, OR the patient's address when services were rendered in their home.\n      - Only include this object when the service facility location is **different** from the billing provider's address. If you include this object when the address is the same, Stedi omits all of the service facility location information from the claim submission, including the name and any identifiers.\n      - Don't use this object when reporting ambulance services - use `ambulancePickupLocation` and `ambulanceDropoffLocation` instead.\n      - Sometimes the billing provider is an actual physician group that is located at the same address as a hospital, but is in fact a separate entity. In this case, you can differentiate the service facility location by including the specific suite or building number of the physician group. This ensures that the service facility location is different from the billing provider's address and is reported accurately."
          },
          "serviceLineDateInformation": {
            "$ref": "#/components/schemas/ServiceLineDateInformation"
          },
          "serviceLineReferenceInformation": {
            "$ref": "#/components/schemas/ServiceLineReferenceInformation"
          },
          "serviceLineSupplementalInformation": {
            "description": "Supporting documentation for the service line. Required when you plan to submit [attachments](https://www.stedi.com/docs/healthcare/submit-claim-attachments) for the service line electronically through Stedi APIs or SFTP, when there is a paper attachment following this claim, or when the provider deems it necessary to identify additional information that is being held at the provider's office and is available upon request.\n\nYou can submit up to 10 objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ReportInformation"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "supervisingProvider": {
            "$ref": "#/components/schemas/ClaimsServiceLineSupervisingProvider",
            "description": "Information about the provider who oversaw the rendering provider and the care reported in this service line. Include this object when the supervising provider is different than the one listed in the `supervising` object for the entire claim.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`."
          },
          "testResults": {
            "description": "Required on Dialysis related service lines for ESRD, or required on on DMERC service lines to report the Patient's Height from the Certificate of Medical Necessity (CMN). Use HT qualifier.",
            "items": {
              "$ref": "#/components/schemas/Measurements"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "thirdPartyOrganizationNotes": {
            "description": "Required when the TPO/repricer needs to forward additional information to the payer. Providers shouldn't complete this property.",
            "type": "string"
          }
        },
        "required": [
          "professionalService",
          "serviceDate"
        ],
        "type": "object"
      },
      "ServiceLineDateInformation": {
        "description": "Identify specific dates related to the service rendered.",
        "properties": {
          "beginTherapyDate": {
            "description": "Required when a Durable Medical Equipment Regional Carrier Certificate of Medical Necessity (DMERC CMN) or DMERC Information Form (DIF), or Oxygen Therapy Certification is included on this service line.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "certificationRevisionOrRecertificationDate": {
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "hemoglobinTestDate": {
            "description": "Required on initial EPO claims service lines for dialysis patients when test results are being billed or reported.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "initialTreatmentDate": {
            "description": "Required when this date is known to impact adjudication for claims involving spinal manipulation, physcial therapy, occupational therapy, or speech language pathology.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "lastCertificationDate": {
            "description": "This is the date the ordering physician signed the CMN or Oxygen Therapy Certification, or the date the supplier signed the DMERC Information Form (DIF).",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "lastXRayDate": {
            "description": "Required for claims involving spinal manipulation.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "prescriptionDate": {
            "description": "Required when a drug is billed for this line and a prescription was written (or otherwise communicated by the prescriber if not written).",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serumCreatineTestDate": {
            "description": "Required on initial EPO claims service lines for dialysis patients when test results are being billed or reported.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "shippedDate": {
            "description": "Required when billing or reporting products that were shipped.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "treatmentOrTherapyDate": {
            "description": "This is the date of the latest visit or consultation.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceLineInformation": {
        "description": "Identify a service line listed in the referenced claim. Used to request status for a specific service line.",
        "properties": {
          "lineItemChargeAmount": {
            "description": "The original submitted charge for the service line, expressed as a decimal. For example, `100.00`.",
            "type": "string"
          },
          "lineItemControlNumber": {
            "description": "An identifier for the service line. This matches the `claimInformation.serviceLines.providerControlNumber` submitted for the service line in the original claim.",
            "type": "string"
          },
          "procedureCode": {
            "description": "The procedure code.",
            "type": "string"
          },
          "procedureModifiers": {
            "description": "A modifier code that clarifies or improves the reporting accuracy of the associated `procedureCode`. If not required, do not send.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "productOrServiceIDQualifier": {
            "$ref": "#/components/schemas/ProductOrServiceIDQualifier",
            "description": "Code identifying the specific industry code list used for the `procedureCode`. Visit [Check claim status](https://www.stedi.com/docs/healthcare/check-claim-status#product-or-service-id-qualifier) for a complete list."
          },
          "revenueCode": {
            "description": "The revenue code for the service line. This is the National Uniform Billing Committee revenue code.",
            "type": "string"
          },
          "serviceLineDate": {
            "description": "The date the service line began.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "serviceLineEndDate": {
            "description": "The date the service line ended.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "unitsOfServiceCount": {
            "description": "The number of units of service for the service line.",
            "type": "string"
          }
        },
        "required": [
          "lineItemChargeAmount",
          "procedureCode",
          "productOrServiceIDQualifier",
          "serviceLineDate",
          "unitsOfServiceCount"
        ],
        "type": "object"
      },
      "ServiceLineOrderingProvider": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress"
          },
          "claimOfficeNumber": {
            "deprecated": true,
            "type": "string"
          },
          "commercialNumber": {
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformationOrderingProvider"
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "employerIdentificationNumber": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "description": "The provider's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "type": "string"
          },
          "middleName": {
            "description": "The provider's middle name or initial.",
            "type": "string"
          },
          "naic": {
            "deprecated": true,
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The provider's business name.",
            "type": "string"
          },
          "otherIdentifier": {
            "type": "string"
          },
          "payerIdentificationNumber": {
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "An identifier for the provider. The `qualifier` can be set to `0B` - State License Number, `1G` - Provider UPIN Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and shouldn't be used for new claims.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "ssn": {
            "deprecated": true,
            "description": "Social Security Number without spaces or punctuation (9 digits)",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "type": "string"
          },
          "suffix": {
            "description": "The provider's name suffix, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceLineProviderPurchasedService": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "claimOfficeNumber": {
            "deprecated": true,
            "type": "string"
          },
          "commercialNumber": {
            "description": "The provider's commercial number.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "employerIdentificationNumber": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "deprecated": true,
            "type": "string"
          },
          "lastName": {
            "deprecated": true,
            "type": "string"
          },
          "locationNumber": {
            "deprecated": true,
            "type": "string"
          },
          "middleName": {
            "deprecated": true,
            "type": "string"
          },
          "naic": {
            "deprecated": true,
            "type": "string"
          },
          "npi": {
            "description": "The [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "deprecated": true,
            "type": "string"
          },
          "otherIdentifier": {
            "deprecated": true,
            "type": "string"
          },
          "payerIdentificationNumber": {
            "description": "The payer identification number. This must match the value you provided in `claimInformation.otherSubscriberInformation.otherPayerName.otherPayerIdentifier`.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "type": "string"
          },
          "secondaryIdentifier": {
            "items": {
              "$ref": "#/components/schemas/ServiceLineReferenceIdentification"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "ssn": {
            "deprecated": true,
            "description": "Social Security Number without spaces or punctuation (9 digits)",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The provider's state license number. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "deprecated": true,
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceLineReferenceIdentification": {
        "properties": {
          "identifier": {
            "description": "The reference number.",
            "type": "string"
          },
          "otherIdentifier": {
            "deprecated": true,
            "type": "string"
          },
          "qualifier": {
            "description": "The code identifying the type of reference number.",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "qualifier"
        ],
        "type": "object"
      },
      "ServiceLineReferenceInformation": {
        "description": "Additional identifiers for the service line.",
        "properties": {
          "adjustedRepricedLineItemReferenceNumber": {
            "description": "Required when a repricing (pricing) organization needs to have an identifying number on an adjusted service line.",
            "type": "string"
          },
          "clinicalLaboratoryImprovementAmendmentNumber": {
            "type": "string"
          },
          "immunizationBatchNumber": {
            "type": "string"
          },
          "mammographyCertificationNumber": {
            "type": "string"
          },
          "priorAuthorization": {
            "items": {
              "$ref": "#/components/schemas/PriorAuthorization"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "referralNumber": {
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          },
          "referringCliaNumber": {
            "type": "string"
          },
          "repricedLineItemReferenceNumber": {
            "description": "Required when a repricing (pricing) organization needs to have an identifying number on the service line.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceLineReferringProviderIdentificationQualifierCode": {
        "description": "The type of identifier used in `secondaryIdentifier`. Can be set to `0B` - State License Number, `1G` - Provider UPIN Number, or `G2` - Provider Commercial Number. Note that UPIN is deprecated and should not be used.",
        "enum": [
          "0B",
          "1G",
          "G2"
        ],
        "type": "string"
      },
      "ServiceLineResponseIdentifier": {
        "properties": {
          "lineItemControlNumber": {
            "description": "A unique identifier for the service line, matching the value provided for the `claimInformation.serviceLines.providerControlNumber` property in the claim submission. If you didn't provide a value for `providerControlNumber`, this property contains a randomly generated a UUID for the service line.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceLineServiceFacilityLocation": {
        "description": "Required when the location for the service is different from the billing provider's address. The purpose of this object is to identify specifically where the service was rendered. This can be healthcare facilities, such as surgical centers or reference labs, OR the patient's address when services were rendered in their home.\n- Only include this object when the service facility location is **different** from the billing provider's address. If you include this object when the address is the same, Stedi omits all of the service facility location information from the claim submission, including the name and any identifiers.\n- Don't use this object when reporting ambulance services - use `ambulancePickupLocation` and `ambulanceDropoffLocation` instead.\n- Sometimes the billing provider is an actual physician group that is located at the same address as a hospital, but is in fact a separate entity. In this case, you can differentiate the service facility location by including the specific suite or building number of the physician group. This ensures that the service facility location is different from the billing provider's address and is reported accurately.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "description": "The address of where services were rendered. \n\n If the service facility location is in an area where there are no street addresses, enter a description of where the service was rendered. For example, 'crossroad of State Road 34 and 45'. \n\n For United States addresses, you **must** include the full nine-digit zip code with no separators, such as `100031502`. If you don't know the full zip code, you can find it using the [USPS ZIP Code Lookup](https://tools.usps.com/zip-code-lookup.htm) tool."
          },
          "npi": {
            "description": "The organization [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the service facility. Only include this property when the service facility is not a component or subpart of the `billing` provider. Don't include when the service facility is the patient's home.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The laboratory or facility name. When services were rendered in the patient's home, we recommend setting this to `Residence` or something similar.",
            "type": "string"
          },
          "phoneExtension": {
            "deprecated": true,
            "description": "The telephone extension, if applicable. Only submit the numeric extension. For example, don't include data that indicates an extension, such as 'ext.' or 'x-'.",
            "type": "string"
          },
          "phoneName": {
            "deprecated": true,
            "description": "The full name of the person or office.",
            "type": "string"
          },
          "phoneNumber": {
            "deprecated": true,
            "description": "The phone number, formatted as AAABBBCCCC, where AAA represents the area code, BBB is the telephone number prefix, and CCCC is the telephone number. The phone number should only include the digits 0 to 9. Don't include separators, such as dashes, and don't include long distance access numbers, such as 1. For example, you would format the phone number 123-456-7890 as 1234567890.",
            "type": "string"
          },
          "secondaryIdentifier": {
            "description": "Secondary identifier for the service facility location. Used when another identifier is needed for the claims processor to identify the facility or when the entity is not a healthcare provider and does not have an [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier). The `qualifier` can be set to `LU` - Location Number, or `G2` - Provider Commercial Number. You can include up to three objects in this array.",
            "items": {
              "$ref": "#/components/schemas/ServiceLineReferenceIdentification"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "address",
          "organizationName"
        ],
        "type": "object"
      },
      "ServiceLineStatus": {
        "properties": {
          "entityIdentifierCode": {
            "$ref": "#/components/schemas/ServiceEntityIdentifierCode",
            "description": "A code indicating the entity that is responsible for the service line."
          },
          "entityIdentifierCodeValue": {
            "$ref": "#/components/schemas/ServiceEntityIdentifierCodeValue",
            "description": "The description of the `entityIdentifierCode`."
          },
          "healthCareClaimStatusCategoryCode": {
            "$ref": "#/components/schemas/HealthCareClaimStatusCategoryCode"
          },
          "healthCareClaimStatusCategoryCodeValue": {
            "description": "Description of the `healthCareClaimStatusCategoryCode` property. Visit [277CA code lists](https://www.stedi.com/docs/healthcare/receive-claim-responses#claim-status-category-code) for a complete list.",
            "type": "string"
          },
          "nationalCouncilForPrescriptionDrugProgramsRejectPaymentCodes": {
            "description": "A National Council for Prescription Drug Programs (NCPDP) reject code.",
            "type": "string"
          },
          "statusCode": {
            "$ref": "#/components/schemas/HealthCareClaimStatusCode",
            "description": "A code indicating the status."
          },
          "statusCodeValue": {
            "description": "The description of the `statusCode`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceLineSupplementalInformationAttachmentReportTypeCode": {
        "description": "Code indicating the title or contents of a document, report or supporting item. For example, `08` - Plan of Treatment or `CT` - Certification. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#attachment-report-type-codes) for a complete list.",
        "enum": [
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "13",
          "15",
          "21",
          "A3",
          "A4",
          "AM",
          "AS",
          "B2",
          "B3",
          "B4",
          "BR",
          "BS",
          "BT",
          "CB",
          "CK",
          "CT",
          "D2",
          "DA",
          "DB",
          "DG",
          "DJ",
          "DS",
          "EB",
          "HC",
          "HR",
          "I5",
          "IR",
          "LA",
          "M1",
          "MT",
          "NN",
          "OB",
          "OC",
          "OD",
          "OE",
          "OX",
          "OZ",
          "P4",
          "P5",
          "PE",
          "PN",
          "PO",
          "PQ",
          "PY",
          "PZ",
          "RB",
          "RR",
          "RT",
          "RX",
          "SG",
          "V5",
          "XP"
        ],
        "type": "string"
      },
      "ServiceLineSupplementalInformationAttachmentTransmissionCode": {
        "description": "Code indicating the method by which the attachment was transmitted. Can be set to `AA` - Available on Request at Provider Site, `BM` - By Mail, `EL` - Electronically Only, `EM` - E-Mail, `FT` - File Transfer, or `FX` - By Fax.",
        "enum": [
          "AA",
          "BM",
          "EL",
          "EM",
          "FT",
          "FX"
        ],
        "type": "string"
      },
      "ServiceProviderClaimStatus": {
        "properties": {
          "serviceProviderStatuses": {
            "description": "The status of claims related to this provider.",
            "items": {
              "$ref": "#/components/schemas/ProviderStatus"
            },
            "type": "array"
          },
          "statusInformationEffectiveDate": {
            "description": "The date the status information is effective.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceUnavailableExceptionResponseContent": {
        "description": "The server is temporarily unavailable.",
        "properties": {
          "code": {
            "description": "Classification of the exception type.",
            "type": "string"
          },
          "message": {
            "description": "Human readable exception message.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "SignatureIndicator": {
        "description": "Indicates whether the provider's signature is on file. Can be set to `N` - No or `Y` - Yes.",
        "enum": [
          "N",
          "Y"
        ],
        "type": "string"
      },
      "SpecialProgramCode": {
        "description": "Code indicating the Special Program under which the services rendered to the patient were performed. Used for Medicaid claims only. Can be set to `02` - Physically Handicapped Children's Program, `03` - Special Federal Funding, `05` - Disability, or `09` - Second Opinion or Surgery.",
        "enum": [
          "02",
          "03",
          "05",
          "09"
        ],
        "type": "string"
      },
      "SpinalManipulationServiceInformation": {
        "description": "Information about a chiropractic service rendered to the patient. Required on chiropractic claims involving spinal manipulation when the information is known to impact the payer's adjudication process.",
        "properties": {
          "patientConditionCode": {
            "description": "A code indicating the nature of a patient's condition. Can be set to `A` - Acute Condition, `C` - Chronic Condition, ``D`- Non-acute, `E` - Non-Life Threatening, `F` - Routine, `G` - Symptomatic, or `M` - Acute Manifestation of a Chronic Condition.",
            "type": "string"
          },
          "patientConditionDescription1": {
            "$ref": "#/components/schemas/PatientConditionDescription1"
          },
          "patientConditionDescription2": {
            "description": "Additional description of the patient's condition",
            "type": "string"
          }
        },
        "required": [
          "patientConditionCode"
        ],
        "type": "object"
      },
      "StateOrProvinceCode": {
        "description": "The US state or Canadian province code. For example, `TN` for Tennessee or `NB` for New Brunswick.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "NL",
          "PE",
          "NS",
          "NB",
          "QC",
          "ON",
          "MB",
          "SK",
          "AB",
          "BC",
          "YT",
          "NT",
          "NU",
          "DC",
          "AS",
          "GU",
          "MP",
          "PR",
          "UM",
          "VI",
          "AK",
          "AL",
          "AR",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DE",
          "FL",
          "GA",
          "HI",
          "IA",
          "ID",
          "IL",
          "IN",
          "KS",
          "KY",
          "LA",
          "MA",
          "MD",
          "ME",
          "MI",
          "MN",
          "MO",
          "MS",
          "MT",
          "NC",
          "ND",
          "NE",
          "NH",
          "NJ",
          "NM",
          "NV",
          "NY",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VA",
          "VT",
          "WA",
          "WI",
          "WV",
          "WY"
        ],
        "type": "string"
      },
      "Status": {
        "description": "Information about the status, required action, and paid information of a service line.",
        "properties": {
          "effectiveDate": {
            "description": "The date the service line was placed in this status by the payer's adjudication process.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "entity": {
            "description": "The description of the `entityCode`. For example, `Public Health Service Facility`.",
            "type": "string"
          },
          "entityCode": {
            "description": "The code identifying the organizational entity, physical location, property, or individual associated with the `statusCode`. For example, `4H` - Emergency Department.",
            "type": "string"
          },
          "statusCategoryCode": {
            "description": "The category code for the status. Visit [Claim Status Category Codes](https://x12.org/codes/claim-status-category-codes) in the official X12 documentation for a complete list.",
            "type": "string"
          },
          "statusCategoryCodeValue": {
            "description": "The description of the `statusCategoryCode`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The status code used to identify the status of an entire service line. This is either a [Health Care Claim Status Code](https://x12.org/codes/claim-status-codes) or a National Council for Prescription Drug Programs Reject/Payment Code, when the status is related to pharmacy claims.",
            "type": "string"
          },
          "statusCodeValue": {
            "description": "The description of the `statusCode`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusRequestProvider": {
        "properties": {
          "etin": {
            "description": "The Electronic Transmitter Identification Number (ETIN). This identifier is preferred if the payer specifically assigned one for the provider. If not, most payers will accept the provider's [NPI](https://www.stedi.com/docs/healthcare/national-provider-identifier) or TIN instead.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string",
            "x-meta": {
              "title": "Electronic Transmitter Identification Number (ETIN)"
            }
          },
          "firstName": {
            "description": "The provider's first name. Use when the provider is an individual.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name. Use when the provider is an individual.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "npi": {
            "description": "The [National Provider Identification (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) number.",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "organizationName": {
            "description": "The provider's organization name. Use when the provider is not an individual, such as a hospital or clinic.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ClaimStatusProviderType",
            "description": "Identifies the type of provider related to the referenced healthcare claim. You can include both a billing provider and a service provider if both are relevant to the request."
          },
          "spn": {
            "deprecated": true,
            "description": "Deprecated; The service provider number. Use `npi` to identify the service provider instead.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string",
            "x-meta": {
              "title": "Service Provider Number (SPN)"
            }
          },
          "taxId": {
            "description": "The Taxpayer Identification Number (TIN).",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Taxpayer Identification Number (TIN)"
            }
          },
          "tin": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string",
            "x-meta": {
              "title": "Taxpayer Identification Number (TIN)"
            }
          }
        },
        "required": [
          "providerType"
        ],
        "type": "object"
      },
      "StatusResponseProvider": {
        "properties": {
          "etin": {
            "description": "The Electronic Transmitter Identification Number (ETIN).",
            "maxLength": 80,
            "minLength": 2,
            "type": "string",
            "x-meta": {
              "title": "Electronic Transmitter Identification Number (ETIN)"
            }
          },
          "firstName": {
            "description": "The provider's first name.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The provider's last name.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "npi": {
            "description": "The [National Provider Identification (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) number.",
            "pattern": "^\\d{10}$",
            "type": "string",
            "x-meta": {
              "title": "National Provider Identifier (NPI)"
            }
          },
          "organizationName": {
            "description": "The provider's organization name.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ClaimStatusProviderType",
            "description": "Identifies the type of provider related to the referenced healthcare claim."
          },
          "spn": {
            "deprecated": true,
            "description": "The service provider number.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string",
            "x-meta": {
              "title": "Service Provider Number (SPN)"
            }
          },
          "taxId": {
            "description": "The Taxpayer Identification Number (TIN).",
            "pattern": "^\\d{9}$",
            "type": "string",
            "x-meta": {
              "title": "Taxpayer Identification Number (TIN)"
            }
          },
          "tin": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string",
            "x-meta": {
              "title": "Taxpayer Identification Number (TIN)"
            }
          }
        },
        "required": [
          "providerType"
        ],
        "type": "object"
      },
      "Submitter": {
        "description": "The entity submitting the healthcare claim. This can be either an individual or an organization, such as a doctor, hospital, or insurance company. You must submit at least `organizationName` or `lastName` properties and the `contactInformation` object. If you don't supply the `submitterIdentification` property, Stedi uses the value from `billing.npi` in the request.",
        "properties": {
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "description": "Contact information for the person or office handling administrative communications regarding the claim. You can include a maximum of two objects in this array."
          },
          "firstName": {
            "description": "The first name of the individual submitting the claim.",
            "maxLength": 35,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the individual submitting the claim.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "middleName": {
            "description": "The middle name or initial of the individual submitting the claim.",
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "organizationName": {
            "description": "The business name of the organization submitting the claim.",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "submitterIdentification": {
            "description": "The submitter's Electronic Transmitter Identification Number (ETIN), as assigned by the payer. For some payers, this may be the same as the submitter's NPI or TIN, but it can also be another unique identifier. Payers can refer to this identifier as the Provider Number, Submitter ID, Submitter Identifier, Submitter Primary Number, Sender Code, Certified Contracted Provider ID, and other names.\n\n If you don't provide this property, Stedi uses the billing provider's NPI from `billing.npi` property.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          }
        },
        "required": [
          "contactInformation"
        ],
        "type": "object"
      },
      "Subscriber": {
        "description": "The person or entity who is the primary policyholder for the health plan _or_ a dependent with their own member ID. The subscriber can be an individual or a business entity.\n- When a dependent has a unique, payer-assigned member ID, treat them as the `subscriber` for the claim submission - include their information here and omit the `dependent` object from the request.  Stedi treats the subscriber as an individual when the request doesn't contain a value for the `subscriber.organizationName` property.\n- You must set the `dateOfBirth` and `gender` properties when the subscriber is the patient. Stedi determines that the subscriber is the patient when the `dependent` object is not included in the request.\n- If either `dateOfBirth` or `gender` is set, you must include both properties. You can either include both properties or neither within a single request.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/RequestSubscriberDependentAddress",
            "description": "The subscriber's address. Every claim must include address information in either the `subscriber` (when the patient is the subscriber) or `dependent` (when the patient is a dependent) object. You must include at least the `address1` and `city` properties in this object. The `state` and `postalCode` properties are also required for all United States and Canadian addresses.\n  - The address must be the patient's correct address at the time of service. Don't use placeholder values to complete unknown address information. Use of outdated or placeholder values could cause the payer to reject, deny, or delay the claim due to suspected fraud.\n  - If you don't know the patient's address, you should first submit a [Real-Time Eligibility Check](https://www.stedi.com/docs/api-reference/healthcare/post-healthcare-eligibility) for the patient and then copy the patient's address from either the `subscriber` or `dependent` object in the response.\n  - If the patient doesn't have a current address, you can populate the `address1` property with `UNKNOWN` and populate the city, state, and zip code with appropriate values based on your discretion. However, some payers may have explicit rules for how to handle this situation, so you should check the payer's specific requirements before using this approach."
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformationSubscriberDependent"
          },
          "dateOfBirth": {
            "description": "The subscriber's date of birth. This property is **required** if the subscriber is an individual.",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "type": "string"
          },
          "firstName": {
            "description": "The subscriber's first name. This property is **recommended** when the subscriber is an individual. Some payers reject requests without the `firstName` property.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/SubscriberGender",
            "description": "Identifies the subscriber's gender. This property is **required** when the subscriber is the patient. Can be set to `F` - Female, `M` - Male, or `U` - Unknown. \n\nSome payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records. If the gender isn't known or the patient declines to answer, use `U` or perform an eligibility check to determine the gender according to the payer's records."
          },
          "groupNumber": {
            "description": "The subscriber's health plan group number.\n  - Provide this property OR the `policyNumber`, not both.\n  - Provide this property OR the `subscriberGroupName`, not both. If this property is set, Stedi ignores the `subscriberGroupName` property.",
            "type": "string"
          },
          "insuranceTypeCode": {
            "$ref": "#/components/schemas/SubscriberInsuranceTypeCode",
            "description": "Identifies the type of insurance policy within a specific insurance program. This property is **required** when sending claims to Medicare and Medicare is not the primary payer (`paymentResponsibilityLevelCode` is not set to `P`). Otherwise, don't include this property in the claim.\n\nVisit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#insurance-type-codes) for a complete list of insurance type codes."
          },
          "lastName": {
            "description": "The subscriber's last name. This property is **required** if the subscriber is an individual.\n\n **Don't** include the subscriber's name suffix, such as Jr. or III. Use the designated `suffix` property instead.",
            "type": "string"
          },
          "memberId": {
            "description": "The member ID for the subscriber's insurance policy. This property is **required** if the subscriber is an individual.",
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "middleName": {
            "description": "The subscriber's middle name or initial.",
            "type": "string"
          },
          "organizationName": {
            "description": "The business name of the entity submitting the claim. When the subscriber is an organization, you should identify the patient in the `dependent` object.",
            "type": "string"
          },
          "paymentResponsibilityLevelCode": {
            "$ref": "#/components/schemas/SubscriberPaymentResponsibilityLevelCode"
          },
          "policyNumber": {
            "description": "The subscriber's health plan policy number. You should provide either this property OR the `groupNumber`, not both.",
            "type": "string"
          },
          "ssn": {
            "description": "The subscriber's Social Security Number.",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "subscriberGroupName": {
            "description": "The name of the subscriber's health plan. For example, Cigna or Blue Cross Blue Shield. \n\nProvide either this property OR the `groupNumber`, not both. If `groupNumber` is set, Stedi ignores this value and uses the value in `groupNumber`.",
            "type": "string"
          },
          "suffix": {
            "description": "The suffix of the subscriber's name, such as Jr. or Sr. Only include the subscriber's personal name suffix - **don't** include professional or academic titles, such as M.D. or MBA.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriberGender": {
        "description": "Identifies the subscriber's gender. Can be set to `F` - Female, `M` - Male, or `U` - Unknown. \n\nThis property is **required** if the subscriber is an individual. \n\nYou should set this property to `U` when the patient declines to answer or does not identify as male or female. Note that some payers may reject the claim if the patient's gender doesn't match the gender they have recorded in their member records.",
        "enum": [
          "M",
          "F",
          "U"
        ],
        "type": "string"
      },
      "SubscriberInsuranceTypeCode": {
        "description": "Identifies the type of insurance policy within a specific insurance program. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#insurance-type-codes) for a complete list.",
        "enum": [
          "12",
          "13",
          "14",
          "15",
          "16",
          "41",
          "42",
          "43",
          "47"
        ],
        "type": "string"
      },
      "SubscriberInsuredIndicator": {
        "description": "Indicates the status of the insured. For the subscriber, this is always `Y`.",
        "enum": [
          "Y"
        ],
        "type": "string"
      },
      "SubscriberPaymentResponsibilityLevelCode": {
        "description": "Code identifying the insurance carrier's level of responsibility for a payment of a claim. Stedi sets this property to `P` - Primary by default. \n\n You only need to include this property when you need to submit codes other than `P`. This can happen when the patient has multiple insurance policies. For example, if a patient is covered by both Medicare and an employer-sponsored commercial plan, you could bill the commercial plan first as `P` and then bill the Medicare payer second as `S`. Visit [Claims code lists](https://www.stedi.com/docs/healthcare/claims-code-lists#payment-responsibility-sequence-number-codes) for a complete list of possible codes.",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "P",
          "S",
          "T",
          "U"
        ],
        "type": "string"
      },
      "SubscriberRelationship": {
        "description": "The name of the `relationToSubscriberCode`. For the subscriber, this is always `Self`.",
        "enum": [
          "Self"
        ],
        "type": "string"
      },
      "SubscriberRelationshipCode": {
        "description": "For the subscriber, this is always `18` for Self.",
        "enum": [
          "18"
        ],
        "type": "string"
      },
      "SubscriberTraceNumber": {
        "properties": {
          "originatingCompanyIdentifier": {
            "description": "The identifier of the organization that assigned the trace number.",
            "type": "string"
          },
          "referenceIdentification": {
            "description": "The unique trace number assigned to the transaction.",
            "type": "string"
          },
          "secondaryReferenceIdentification": {
            "description": "Identifies a subdivision within the organization that assigned the trace number.",
            "type": "string"
          },
          "traceType": {
            "description": "The full name of the `traceTypeCode`. For example `Current Transaction Trace Numbers`.",
            "type": "string"
          },
          "traceTypeCode": {
            "description": "The code that identifies the type of trace number. Can be `1` - Current Transaction Trace Numbers (refers to trace numbers assigned by the payer) or `2` - Referenced Trace Numbers (refers to numbers sent in the original eligibility check request).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Supervising": {
        "description": "The entity responsible for overseeing the rendering provider and the care reported in this claim. Applies when the rendering provider is supervised by a physician. Use when the provider applies to the entire claim, not just a specific service line.\n\nThis should be an individual, not an organization, and you should supply at least the provider's `lastName` and an identifier, which is typically the `npi`.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimsAddress",
            "deprecated": true
          },
          "commercialNumber": {
            "description": "The commercial number of the supervising provider.",
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ClaimsContactInformation",
            "deprecated": true
          },
          "employerId": {
            "deprecated": true,
            "type": "string"
          },
          "firstName": {
            "description": "The first name of the supervising provider.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the supervising provider.",
            "type": "string"
          },
          "locationNumber": {
            "description": "The location number of the supervising provider.",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name or initial of the supervising provider.",
            "type": "string"
          },
          "npi": {
            "description": "The individual [National Provider Identifier (NPI)](https://www.stedi.com/docs/healthcare/national-provider-identifier) assigned to the supervising provider.",
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "organizationName": {
            "description": "The supervising provider's business name, when the provider is not an individual.",
            "type": "string"
          },
          "providerType": {
            "deprecated": true,
            "description": "This field is now automatically populated and it only remains for backwards compatibility.",
            "type": "string"
          },
          "providerUpinNumber": {
            "deprecated": true,
            "description": "Deprecated; do not use.",
            "type": "string"
          },
          "ssn": {
            "deprecated": true,
            "description": "Social Security Number without spaces or punctuation (9 digits)",
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "stateLicenseNumber": {
            "description": "The state license number of the supervising provider. This is assigned directly by a payer in order to identify the provider in their system. This is not commonly used.",
            "type": "string"
          },
          "suffix": {
            "description": "The suffix of the supervising provider's name, such as Jr. or III.",
            "type": "string"
          },
          "taxonomyCode": {
            "deprecated": true,
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[A-Za-z0-9]{10}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SupportedBreakdown": {
        "properties": {
          "enrollmentNotRequired": {
            "description": "Number of matching payers that support this transaction type and don't require transaction enrollment.",
            "minimum": 0,
            "type": "number"
          },
          "enrollmentRequired": {
            "description": "Number of matching payers that support this transaction type and require [transaction enrollment](https://www.stedi.com/docs/healthcare/transaction-enrollment).",
            "minimum": 0,
            "type": "number"
          },
          "total": {
            "description": "Total number of matching payers that support this transaction type (`enrollmentRequired` + `enrollmentNotRequired`).",
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "enrollmentNotRequired",
          "enrollmentRequired",
          "total"
        ],
        "type": "object"
      },
      "SupportingDocumentation": {
        "description": "Use to provide information in response to a coded questionnaire document.",
        "properties": {
          "questionNumber": {
            "type": "string"
          },
          "questionResponse": {
            "description": "A text response to the question.",
            "type": "string"
          },
          "questionResponseAsDate": {
            "description": "Date value.",
            "type": "string"
          },
          "questionResponseAsPercent": {
            "description": "Percent formatted as a decimal.",
            "type": "string"
          },
          "questionResponseCode": {
            "$ref": "#/components/schemas/QuestionResponseCode"
          }
        },
        "required": [
          "questionNumber"
        ],
        "type": "object"
      },
      "TechnicalContactInformation": {
        "description": "Technical contact information for the payer.",
        "properties": {
          "contactMethods": {
            "description": "Available contact methods for technical support.",
            "items": {
              "$ref": "#/components/schemas/TechnicalContactMethod"
            },
            "type": "array"
          },
          "contactName": {
            "description": "The name of the contact person or entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TechnicalContactMethod": {
        "description": "Contact method details for technical support.",
        "properties": {
          "email": {
            "description": "The contact email address.",
            "type": "string"
          },
          "fax": {
            "description": "The contact fax number.",
            "type": "string"
          },
          "phone": {
            "description": "The contact telephone number including the area code. Phone numbers are formatted as AAABBBCCCC, where AAA represents the area code, BBB represents the telephone number prefix, and CCCC represents the telephone number. Phone numbers are provided without separators, such as dashes or parentheses. For example, `5551123345` for `555-112-3345`.",
            "type": "string"
          },
          "phoneExtension": {
            "description": "The contact telephone extension, if applicable.",
            "type": "string"
          },
          "url": {
            "description": "A web address to contact the person or entity. The URL is typically provided without the scheme and separator. For example, `stedi.com`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThrottlingExceptionResponseContent": {
        "description": "The server response when usage plan or account-level throttling limits exceeded.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "TimePeriodQualifier": {
        "description": "The name of the `timePeriodQualifierCode`. For example, `Calendar Year`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Hour",
          "Day",
          "Years",
          "Service Year",
          "Calendar Year",
          "Year to Date",
          "Contract",
          "Episode",
          "Visit",
          "Outlier",
          "Remaining",
          "Exceeded",
          "Not Exceeded",
          "Lifetime",
          "Lifetime Remaining",
          "Month",
          "Week"
        ],
        "type": "string"
      },
      "TimePeriodQualifierCode": {
        "description": "Code specifying the time period for the benefit information.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "6",
          "7",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35"
        ],
        "type": "string"
      },
      "TimeQualifierCode": {
        "description": "Code indicating the time period for the benefit information.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "6",
          "7",
          "13",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36"
        ],
        "type": "string"
      },
      "TimeQualifierName": {
        "description": "The name of the time period qualifier code. \n \n Note that for the patient's deductible, `Calendar Year` indicates the patient's total deductible amount for the year, while `Remaining` indicates the amount left to meet the deductible. Visit [Payer benefit response](https://www.stedi.com/docs/healthcare/eligibility-patient-responsibility-benefits#deductible) to learn more about deductibles.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Hour",
          "Day",
          "24 Hours",
          "Years",
          "Service Year",
          "Calendar Year",
          "Year to Date",
          "Contract",
          "Episode",
          "Visit",
          "Outlier",
          "Remaining",
          "Exceeded",
          "Not Exceeded",
          "Lifetime",
          "Lifetime Remaining",
          "Month",
          "Week",
          "Admission"
        ],
        "type": "string"
      },
      "ToothInformation": {
        "properties": {
          "toothCode": {
            "description": "An [American Dental Association CDT Code](https://www.ada.org/publications/cdt) for the procedures performed on a specific tooth. You can only use this object to report individual teeth. You can't use it to report areas of the oral cavity, such as quadrants or sextants. Areas of the oral cavity are reported in the `claimInformation.serviceLines.dentalService.oralCavityDesignation` property. You can only include multiples of this object when `claimInformation.serviceLines.dentalService.procedureCount` is equal to 1. When applicable, you can include this object up to 32 times within a single service line.",
            "type": "string"
          },
          "toothSurfaceCodes": {
            "description": "Code identifying the area of the tooth that was treated. Can be set to `B` - Buccal, `D`- Distal, `F`- Facial, `I`- Incisal, `L` - Lingual, `M` - Mesial, or `O` Occlusal.",
            "items": {
              "$ref": "#/components/schemas/ToothSurfaceCode"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "toothCode"
        ],
        "type": "object"
      },
      "ToothStatus": {
        "properties": {
          "toothNumber": {
            "description": "The tooth number according to the American Dental Association tooth designation system.",
            "type": "string"
          },
          "toothStatusCode": {
            "$ref": "#/components/schemas/ToothStatusCode"
          }
        },
        "required": [
          "toothNumber",
          "toothStatusCode"
        ],
        "type": "object"
      },
      "ToothStatusCode": {
        "description": "Can be set to `E` - To Be Extracted, `M` - Missing.",
        "enum": [
          "E",
          "M"
        ],
        "type": "string"
      },
      "ToothSurfaceCode": {
        "enum": [
          "B",
          "D",
          "F",
          "I",
          "L",
          "M",
          "O"
        ],
        "type": "string"
      },
      "TraceTypeCode": {
        "description": "Identifies the type of trace number used to uniquely identify and track payment transactions. This helps reassociate payments with their corresponding remittance advice.",
        "enum": [
          "1"
        ],
        "type": "string"
      },
      "TransactionEnrollmentProcess": {
        "description": "Details about the enrollment process for a specific transaction type.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EnrollmentProcessType"
          }
        },
        "type": "object"
      },
      "TransactionEnrollmentProcesses": {
        "description": "Information about the transaction enrollment requirements and expected timeframes for each transaction type.",
        "properties": {
          "claimPayment": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for Electronic Remittance Advice (ERAs) with this payer."
          },
          "claimStatusInquiry": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for real-time claim status requests with this payer."
          },
          "coordinationOfBenefits": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for coordination of benefits (COB) checks with this payer."
          },
          "dentalClaim": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for dental claim submission with this payer."
          },
          "eligibilityInquiry": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for eligibility checks with this payer."
          },
          "institutionalClaim": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for institutional claim submission with this payer."
          },
          "professionalClaim": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for professional claim submission with this payer."
          },
          "unsolicitedClaimAttachment": {
            "$ref": "#/components/schemas/TransactionEnrollmentProcess",
            "description": "Details about the enrollment process for unsolicited claim attachments with this payer."
          }
        },
        "type": "object"
      },
      "TransactionFilterValue": {
        "description": "Transaction support filter values. When multiple transaction filters are specified, they are combined with AND logic (payers must satisfy **all** criteria).",
        "enum": [
          "SUPPORTED",
          "NOT_SUPPORTED",
          "ENROLLMENT_REQUIRED",
          "EITHER"
        ],
        "type": "string"
      },
      "TransactionHandlingCode": {
        "description": "Indicates the actions that should be taken by both the sender and receiver of the payment transaction. This determines whether payment should be made, remittance sent, or both.",
        "enum": [
          "C",
          "D",
          "H",
          "I",
          "P",
          "U",
          "X"
        ],
        "type": "string"
      },
      "TransactionIdentifier": {
        "properties": {
          "customerTransactionId": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TransactionSupport": {
        "description": "Whether the following transaction types are supported: 270 eligibility checks, 276 claim status requests, 837 professional claims, and 835 ERAs (claim payments). If the value is `ENROLLMENT_REQUIRED`, Stedi supports the transaction type, but you must [enroll with the payer](https://www.stedi.com/docs/healthcare/supported-payers#enrollment) first.",
        "properties": {
          "claimPayment": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can receive 835 Electronic Remittance Advice (ERA) transactions from this payer."
          },
          "claimStatus": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 276 claim status requests to this payer."
          },
          "claimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "deprecated": true,
            "description": "Whether you can send 837 professional claims to this payer.\nThis shape is deprecated since 2024-11-13: This `claimSubmission` property is deprecated and will be removed in a future release. Instead, use the `professionalClaimSubmission` property."
          },
          "coordinationOfBenefits": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Coordination of Benefits (COB) support."
          },
          "dentalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 837p dental claims to this payer."
          },
          "eligibilityCheck": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 270 eligibility checks to this payer."
          },
          "institutionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 837i institutional claims to this payer."
          },
          "professionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send 837p professional claims to this payer."
          },
          "unsolicitedClaimAttachment": {
            "$ref": "#/components/schemas/TransactionSupportValue",
            "description": "Whether you can send unsolicited claim attachments to this payer."
          }
        },
        "required": [
          "claimPayment",
          "claimStatus",
          "claimSubmission",
          "coordinationOfBenefits",
          "dentalClaimSubmission",
          "eligibilityCheck",
          "institutionalClaimSubmission",
          "professionalClaimSubmission",
          "unsolicitedClaimAttachment"
        ],
        "type": "object"
      },
      "TransactionSupportCounts": {
        "properties": {
          "claimPayment": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 835 Electronic Remittance Advices (ERAs)."
          },
          "claimStatus": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 276/277 real-time claim status."
          },
          "coordinationOfBenefits": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 270/271 coordination of benefits (COB) checks."
          },
          "dentalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 837D dental claims."
          },
          "eligibilityCheck": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 270/271 eligibility checks."
          },
          "institutionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 837I institutional claims."
          },
          "professionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 837P professional claims."
          },
          "unsolicitedClaimAttachment": {
            "$ref": "#/components/schemas/TransactionSupportCountsItem",
            "description": "Number of matching payers that support 275 unsolicited claim attachments."
          }
        },
        "required": [
          "claimPayment",
          "claimStatus",
          "coordinationOfBenefits",
          "dentalClaimSubmission",
          "eligibilityCheck",
          "institutionalClaimSubmission",
          "professionalClaimSubmission",
          "unsolicitedClaimAttachment"
        ],
        "type": "object"
      },
      "TransactionSupportCountsItem": {
        "properties": {
          "notSupported": {
            "$ref": "#/components/schemas/NotSupportedBreakdown",
            "description": "Number of matching payers that don't support this transaction type."
          },
          "supported": {
            "$ref": "#/components/schemas/SupportedBreakdown",
            "description": "Number of matching payers that support this transaction type, broken down by enrollment requirements."
          }
        },
        "required": [
          "notSupported",
          "supported"
        ],
        "type": "object"
      },
      "TransactionSupportStats": {
        "properties": {
          "claimPayment": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 835 Electronic Remittance Advices (ERAs)."
          },
          "claimStatus": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 276/277 real-time claim status."
          },
          "coordinationOfBenefits": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 270/271 coordination of benefits (COB) checks."
          },
          "dentalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 837D dental claims."
          },
          "eligibilityCheck": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 270/271 eligibility checks."
          },
          "institutionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 837I institutional claims."
          },
          "professionalClaimSubmission": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 837P professional claims."
          },
          "unsolicitedClaimAttachment": {
            "$ref": "#/components/schemas/TransactionSupportStatsItem",
            "description": "Number of matching payers that support 275 unsolicited claim attachments."
          }
        },
        "required": [
          "claimPayment",
          "claimStatus",
          "coordinationOfBenefits",
          "dentalClaimSubmission",
          "eligibilityCheck",
          "institutionalClaimSubmission",
          "professionalClaimSubmission",
          "unsolicitedClaimAttachment"
        ],
        "type": "object"
      },
      "TransactionSupportStatsItem": {
        "properties": {
          "enrollmentRequired": {
            "description": "Number of matching payers that require [transaction enrollment](https://www.stedi.com/docs/healthcare/transaction-enrollment) for this transaction type.",
            "minimum": 0,
            "type": "number"
          },
          "notSupported": {
            "description": "Number of matching payers that don't support this transaction type.",
            "minimum": 0,
            "type": "number"
          },
          "supported": {
            "description": "Number of matching payers that support this transaction type.",
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "enrollmentRequired",
          "notSupported",
          "supported"
        ],
        "type": "object"
      },
      "TransactionSupportValue": {
        "enum": [
          "SUPPORTED",
          "NOT_SUPPORTED",
          "ENROLLMENT_REQUIRED"
        ],
        "type": "string"
      },
      "UnauthorizedExceptionResponseContent": {
        "description": "The server response when the authorizer failed to authenticate the caller.",
        "properties": {
          "code": {
            "description": "Error classification code",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "UnitForMeasurement": {
        "description": "The name of the `unitForMeasurementQualifierCode`. For example, `Days`.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "Days",
          "Months",
          "Visits",
          "Week",
          "Years"
        ],
        "type": "string"
      },
      "UnitForMeasurementCode": {
        "description": "Code specifying the unit of measurement for the quantity.\n\nPayers may sometimes return other non-compliant values.",
        "enum": [
          "DA",
          "MO",
          "VS",
          "WK",
          "YR"
        ],
        "type": "string"
      },
      "ValidationException": {
        "description": "A standard error for input validation failures.\nThis should be thrown by services when a member of the input structure\nfalls outside of the modeled or documented constraints.",
        "properties": {
          "fieldList": {
            "description": "A list of specific failures encountered while validating the input.\nA member can appear in this list more than once if it failed to satisfy multiple constraints.",
            "items": {
              "$ref": "#/components/schemas/ValidationExceptionField"
            },
            "type": "array"
          },
          "message": {
            "description": "A summary of the validation failure.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ValidationExceptionField": {
        "description": "Describes one specific validation failure for an input member.",
        "properties": {
          "message": {
            "description": "A detailed description of the validation failure.",
            "type": "string"
          },
          "path": {
            "description": "A JSONPointer expression to the structure member whose value failed to satisfy the modeled constraints.",
            "type": "string"
          }
        },
        "required": [
          "message",
          "path"
        ],
        "type": "object"
      },
      "ValidationExceptionResponseContent": {
        "description": "A standard error for input validation failures.\nThrown when a member of the input structure\nfalls outside of the modeled or documented constraints.",
        "properties": {
          "code": {
            "description": "A code describing the type of validation failure.",
            "type": "string"
          },
          "message": {
            "description": "A message describing the causes of the validation failure. There may be more than one.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ValueInformation": {
        "properties": {
          "valueCode": {
            "maxLength": 30,
            "type": "string"
          },
          "valueCodeAmount": {
            "pattern": "^\\d+(\\.\\d{1,2})?$",
            "type": "string"
          }
        },
        "required": [
          "valueCode",
          "valueCodeAmount"
        ],
        "type": "object"
      },
      "Warning": {
        "properties": {
          "code": {
            "description": "The warning code.",
            "type": "string"
          },
          "description": {
            "description": "The warning description.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "httpApiKeyAuth": {
        "description": "A [Stedi API Key](https://portal.stedi.com/app/settings/api-keys) for authentication.",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "contact": {
      "email": "healthcare@stedi.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://stedi.com"
    },
    "title": "Stedi Healthcare",
    "version": "2024-04-01"
  },
  "openapi": "3.1.0",
  "paths": {
    "/change/medicalnetwork/claimstatus/v2": {
      "post": {
        "description": "Submit a 276/277 real-time claim status check in JSON format",
        "operationId": "ClaimStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "ClaimStatus_example1": {
                  "description": "",
                  "summary": "Accepted claim",
                  "value": {
                    "encounter": {
                      "beginningDateOfService": "20250630",
                      "endDateOfService": "20250702"
                    },
                    "providers": [
                      {
                        "npi": "1999999984",
                        "organizationName": "Provider Name",
                        "providerType": "BillingProvider"
                      }
                    ],
                    "subscriber": {
                      "dateOfBirth": "19710101",
                      "firstName": "Jane",
                      "lastName": "Doe",
                      "memberId": "UHC123456"
                    },
                    "tradingPartnerServiceId": "87726"
                  }
                },
                "ClaimStatus_example2": {
                  "description": "",
                  "summary": "Denied claim",
                  "value": {
                    "dependent": {
                      "dateOfBirth": "20010714",
                      "firstName": "JORDAN",
                      "lastName": "DOE"
                    },
                    "encounter": {
                      "beginningDateOfService": "20250804",
                      "endDateOfService": "20250806"
                    },
                    "providers": [
                      {
                        "npi": "1999999984",
                        "organizationName": "PROVIDER NAME",
                        "providerType": "BillingProvider"
                      }
                    ],
                    "subscriber": {
                      "dateOfBirth": "19710101",
                      "firstName": "JANE",
                      "lastName": "DOE",
                      "memberId": "AETNA12345"
                    },
                    "tradingPartnerName": "AETNA",
                    "tradingPartnerServiceId": "60054"
                  }
                },
                "ClaimStatus_example3": {
                  "description": "",
                  "summary": "No matching claims found",
                  "value": {
                    "encounter": {
                      "beginningDateOfService": "20250526",
                      "endDateOfService": "20250601"
                    },
                    "providers": [
                      {
                        "npi": "1999999984",
                        "organizationName": "Provider Name",
                        "providerType": "BillingProvider"
                      }
                    ],
                    "subscriber": {
                      "dateOfBirth": "19910202",
                      "firstName": "JAMES",
                      "lastName": "JONES",
                      "memberId": "CIGNA12345"
                    },
                    "tradingPartnerServiceId": "Cigna"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ClaimStatus_example1": {
                    "description": "",
                    "summary": "Accepted claim",
                    "value": {
                      "claims": [
                        {
                          "claimStatus": {
                            "amountPaid": "108.77",
                            "checkIssueDate": "20250717",
                            "checkNumber": "123456789",
                            "claimServiceDate": "20250701",
                            "effectiveDate": "20250717",
                            "paidDate": "20250715",
                            "patientAccountNumber": "12345678",
                            "statusCategoryCode": "F1",
                            "statusCategoryCodeValue": "Finalized/Payment - The claim/line has been paid.",
                            "statusCode": "65",
                            "statusCodeValue": "Claim/line has been paid.",
                            "submittedAmount": "267.54",
                            "trackingNumber": "0123456789",
                            "tradingPartnerClaimNumber": "0123456789"
                          },
                          "serviceDetails": [
                            {
                              "service": {
                                "amountPaid": "108.77",
                                "procedureId": "90837",
                                "serviceIdQualifier": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                "serviceIdQualifierCode": "HC",
                                "submittedAmount": "267.54",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250717",
                                  "statusCategoryCode": "F1",
                                  "statusCategoryCodeValue": "Finalized/Payment - The claim/line has been paid.",
                                  "statusCode": "107",
                                  "statusCodeValue": "Processed according to contract provisions (Contract refers to provisions that exist between the Health Plan and a Provider of Health Care Services)."
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "controlNumber": "123456789",
                      "payer": {
                        "organizationName": "UNITEDHEALTHCARE",
                        "payerIdentification": "87726"
                      },
                      "providers": [
                        {
                          "npi": "1999999984",
                          "organizationName": "Provider Name",
                          "providerType": "BillingProvider"
                        }
                      ],
                      "subscriber": {
                        "firstName": "Jane",
                        "lastName": "Doe",
                        "memberId": "UHC123456"
                      },
                      "tradingPartnerServiceId": "87726",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250912*1718*^*00501*123456789*0*P*:~GS*HN*STEDI*117151744*20250912*171842*1*X*005010X212~ST*277*1001*005010X212~BHT*0010*08*0123456789*20250912*171841*DG~HL*1**20*1~NM1*PR*2*UNITEDHEALTHCARE*****PI*87726~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*1234567890~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~NM1*IL*1*DOE*JANE****MI*UHC123456~TRN*2*0123456789~STC*F1:65*20250717**267.54*108.77*20250715**20250717*123456789~REF*1K*0123456789~REF*EJ*12345678~DTP*472*D8*20250701~SVC*HC:90837:GT*267.54*108.77****1~STC*F1:107*20250717~DTP*472*D8*20250701~SE*19*1001~GE*1*1~IEA*1*123456789~"
                    }
                  },
                  "ClaimStatus_example2": {
                    "description": "",
                    "summary": "Denied claim",
                    "value": {
                      "claims": [
                        {
                          "claimStatus": {
                            "amountPaid": "0",
                            "checkIssueDate": "20250814",
                            "checkNumber": "123456789",
                            "claimServiceDate": "20250805",
                            "effectiveDate": "20250912",
                            "paidDate": "20250809",
                            "patientAccountNumber": "123456789",
                            "statusCategoryCode": "F2",
                            "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                            "statusCode": "585",
                            "statusCodeValue": "Denied Charge or Non-covered Charge.",
                            "submittedAmount": "1101",
                            "trackingNumber": "123456789",
                            "tradingPartnerClaimNumber": "123456789"
                          },
                          "serviceDetails": [
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D1120",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "141",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0801",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "274",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0350",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "145",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0350",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "145",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0330",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "235",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "controlNumber": "123456789",
                      "dependent": {
                        "firstName": "JORDAN",
                        "lastName": "DOE"
                      },
                      "payer": {
                        "organizationName": "AETNA",
                        "payerIdentification": "60054"
                      },
                      "providers": [
                        {
                          "npi": "1999999984",
                          "organizationName": "Provider Name",
                          "providerType": "BillingProvider"
                        }
                      ],
                      "subscriber": {
                        "firstName": "JANE",
                        "lastName": "DOE",
                        "memberId": "AETNA12345"
                      },
                      "tradingPartnerServiceId": "60054",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250911*1726*^*00501*123456789*0*P*:~GS*HN*STEDI*117151744*20250911*1226*123456789*X*005010X212~ST*277*123456789*005010X212~BHT*0010*08*1234567890*20250911*13263006*DG~HL*1**20*1~NM1*PR*2*AETNA*****PI*60054~PER*IC*Aetna*TE*1234567890~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*1234567890~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*1~NM1*IL*1*DOE*JANE****MI*AETNA12345~HL*5*4*23~NM1*QC*1*DOE*JORDAN~TRN*2*123456789~STC*F2:585*20250911**1101*0*20250809**20250814*123456789*F2:107~REF*1K*123456789~REF*EJ*123456789~DTP*472*D8*20250805~SVC*AD:D1120*141*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SVC*AD:D0801*274*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SVC*AD:D0603*161*0****1~STC*F2:107*20250911********F2:735~DTP*472*D8*20250805~SVC*AD:D0350*145*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SVC*AD:D0350*145*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SE*34*123456789~GE*1*123456789~IEA*1*123456789~"
                    }
                  },
                  "ClaimStatus_example3": {
                    "description": "",
                    "summary": "No matching claims found",
                    "value": {
                      "claims": [
                        {
                          "claimStatus": {
                            "amountPaid": "0",
                            "claimServiceDate": "20250526-20250601",
                            "effectiveDate": "20250912",
                            "entity": "Insurer",
                            "entityCode": "IN",
                            "statusCategoryCode": "D0",
                            "statusCategoryCodeValue": "Data Search Unsuccessful - The payer is unable to return status on the requested claim(s) based on the submitted search criteria.",
                            "statusCode": "97",
                            "statusCodeValue": "Patient eligibility not found with entity.",
                            "submittedAmount": "0",
                            "trackingNumber": "123456789"
                          }
                        }
                      ],
                      "controlNumber": "123456789",
                      "payer": {
                        "organizationName": "CHLIC",
                        "payerIdentification": "CIGNA"
                      },
                      "providers": [
                        {
                          "npi": "1999999984",
                          "organizationName": "Provider Name",
                          "providerType": "BillingProvider"
                        }
                      ],
                      "subscriber": {
                        "firstName": "JAMES",
                        "lastName": "JONES",
                        "memberId": "CIGNA12345"
                      },
                      "tradingPartnerServiceId": "CIGNA",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250825*2004*^*00501*123456789*0*P*:~GS*HN*STEDI*117151744*20250825*1504*123456789*X*005010X212~ST*277*123456789*005010X212~BHT*0010*08*123456789*20250825*160450*DG~HL*1**20*1~NM1*PR*2*CHLIC*****PI*CIGNA~PER*IC*CHC Medical*TE*8002725713~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*123456789~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~NM1*IL*1*JONES*JAMES****MI*CIGNA12345~TRN*2*123456789~STC*D0:97:IN*20250825**0*0~DTP*472*RD8*20250526-20250601~SE*15*123456789~GE*1*123456789~IEA*1*123456789~"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusResponseContent"
                }
              }
            },
            "description": "ClaimStatus 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/claimstatus/v2/raw-x12": {
      "post": {
        "description": "Submit a 276/277 real-time claim status check in raw X12 EDI format",
        "operationId": "ClaimStatusRawX12",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "ClaimStatusRawX12_example1": {
                  "description": "",
                  "summary": "Accepted claim",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*SENDER         *ZZ*RECEIVER       *250916*2048*^*00501*000000001*0*T*>~GS*HR*SENDERGS*RECEIVERGS*20250916*204811*1*X*005010X212~ST*276*0001*005010X212~BHT*0010*13*ABC276XXX*20250915*1425~HL*1**20*1~NM1*PR*2*UNITEDHEALTHCARE*****PI*87726~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*123456789~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~DMG*D8*19710101~NM1*IL*1*DOE*JANE****MI*UHC123456~TRN*1*123456789~DTP*472*RD8*20250630-20250702~SE*14*0001~GE*1*1~IEA*1*000000001~"
                  }
                },
                "ClaimStatusRawX12_example2": {
                  "description": "",
                  "summary": "Denied claim",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*SENDER         *ZZ*RECEIVER       *250916*2048*^*00501*000000001*0*T*>~GS*HR*SENDERGS*RECEIVERGS*20250916*204811*1*X*005010X212~ST*276*0001*005010X212~BHT*0010*13*ABC276XXX*20250915*1425~HL*1**20*1~NM1*PR*2*AETNA*****PI*60054~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*123456789~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~DMG*D8*19710101~NM1*IL*1*DOE*JANE****MI*AETNA12345~HL*5*4*23*0~DMG*D8*20010714~NM1*QC*1*DOE*JORDAN*~TRN*1*123456789~DTP*472*RD8*20250804-20250806~SE*17*0001~GE*1*1~IEA*1*000000001~"
                  }
                },
                "ClaimStatusRawX12_example3": {
                  "description": "",
                  "summary": "No matching claims found",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*SENDER         *ZZ*RECEIVER       *250916*2048*^*00501*000000001*0*T*>~GS*HR*SENDERGS*RECEIVERGS*20250916*204811*1*X*005010X212~ST*276*0001*005010X212~BHT*0010*13*ABC276XXX*20250915*1425~HL*1**20*1~NM1*PR*2*CIGNA*****PI*62308~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*123456789~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~DMG*D8*19910202~NM1*IL*1*JONES*JAMES****MI*CIGNA12345~TRN*1*123456789~DTP*472*RD8*20250526-20250601~SE*14*0001~GE*1*1~IEA*1*000000001~"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusRawX12RequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ClaimStatusRawX12_example1": {
                    "description": "",
                    "summary": "Accepted claim",
                    "value": {
                      "claims": [
                        {
                          "claimStatus": {
                            "amountPaid": "108.77",
                            "checkIssueDate": "20250717",
                            "checkNumber": "123456789",
                            "claimServiceDate": "20250701",
                            "effectiveDate": "20250717",
                            "paidDate": "20250715",
                            "patientAccountNumber": "12345678",
                            "statusCategoryCode": "F1",
                            "statusCategoryCodeValue": "Finalized/Payment - The claim/line has been paid.",
                            "statusCode": "65",
                            "statusCodeValue": "Claim/line has been paid.",
                            "submittedAmount": "267.54",
                            "trackingNumber": "0123456789",
                            "tradingPartnerClaimNumber": "0123456789"
                          },
                          "serviceDetails": [
                            {
                              "service": {
                                "amountPaid": "108.77",
                                "procedureId": "90837",
                                "serviceIdQualifier": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                "serviceIdQualifierCode": "HC",
                                "submittedAmount": "267.54",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250717",
                                  "statusCategoryCode": "F1",
                                  "statusCategoryCodeValue": "Finalized/Payment - The claim/line has been paid.",
                                  "statusCode": "107",
                                  "statusCodeValue": "Processed according to contract provisions (Contract refers to provisions that exist between the Health Plan and a Provider of Health Care Services)."
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "controlNumber": "123456789",
                      "payer": {
                        "organizationName": "UNITEDHEALTHCARE",
                        "payerIdentification": "87726"
                      },
                      "providers": [
                        {
                          "npi": "1999999984",
                          "organizationName": "Provider Name",
                          "providerType": "BillingProvider"
                        }
                      ],
                      "subscriber": {
                        "firstName": "Jane",
                        "lastName": "Doe",
                        "memberId": "UHC123456"
                      },
                      "tradingPartnerServiceId": "87726",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250912*1718*^*00501*123456789*0*P*:~GS*HN*STEDI*117151744*20250912*171842*1*X*005010X212~ST*277*1001*005010X212~BHT*0010*08*0123456789*20250912*171841*DG~HL*1**20*1~NM1*PR*2*UNITEDHEALTHCARE*****PI*87726~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*1234567890~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~NM1*IL*1*DOE*JANE****MI*UHC123456~TRN*2*0123456789~STC*F1:65*20250717**267.54*108.77*20250715**20250717*123456789~REF*1K*0123456789~REF*EJ*12345678~DTP*472*D8*20250701~SVC*HC:90837:GT*267.54*108.77****1~STC*F1:107*20250717~DTP*472*D8*20250701~SE*19*1001~GE*1*1~IEA*1*123456789~"
                    }
                  },
                  "ClaimStatusRawX12_example2": {
                    "description": "",
                    "summary": "Denied claim",
                    "value": {
                      "claims": [
                        {
                          "claimStatus": {
                            "amountPaid": "0",
                            "checkIssueDate": "20250814",
                            "checkNumber": "123456789",
                            "claimServiceDate": "20250805",
                            "effectiveDate": "20250912",
                            "paidDate": "20250809",
                            "patientAccountNumber": "123456789",
                            "statusCategoryCode": "F2",
                            "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                            "statusCode": "585",
                            "statusCodeValue": "Denied Charge or Non-covered Charge.",
                            "submittedAmount": "1101",
                            "trackingNumber": "123456789",
                            "tradingPartnerClaimNumber": "123456789"
                          },
                          "serviceDetails": [
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D1120",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "141",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0801",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "274",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0603",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "161",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0350",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "145",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0350",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "145",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            },
                            {
                              "service": {
                                "amountPaid": "0",
                                "procedureId": "D0330",
                                "serviceIdQualifier": "American Dental Association Codes",
                                "serviceIdQualifierCode": "AD",
                                "submittedAmount": "235",
                                "submittedUnits": "1"
                              },
                              "status": [
                                {
                                  "effectiveDate": "20250912",
                                  "statusCategoryCode": "F2",
                                  "statusCategoryCodeValue": "Finalized/Denial - The claim/line has been denied.",
                                  "statusCode": "585",
                                  "statusCodeValue": "Denied Charge or Non-covered Charge."
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "controlNumber": "123456789",
                      "dependent": {
                        "firstName": "JORDAN",
                        "lastName": "DOE"
                      },
                      "payer": {
                        "organizationName": "AETNA",
                        "payerIdentification": "60054"
                      },
                      "providers": [
                        {
                          "npi": "1999999984",
                          "organizationName": "Provider Name",
                          "providerType": "BillingProvider"
                        }
                      ],
                      "subscriber": {
                        "firstName": "JANE",
                        "lastName": "DOE",
                        "memberId": "AETNA12345"
                      },
                      "tradingPartnerServiceId": "60054",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250911*1726*^*00501*123456789*0*P*:~GS*HN*STEDI*117151744*20250911*1226*123456789*X*005010X212~ST*277*123456789*005010X212~BHT*0010*08*1234567890*20250911*13263006*DG~HL*1**20*1~NM1*PR*2*AETNA*****PI*60054~PER*IC*Aetna*TE*1234567890~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*1234567890~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*1~NM1*IL*1*DOE*JANE****MI*AETNA12345~HL*5*4*23~NM1*QC*1*DOE*JORDAN~TRN*2*123456789~STC*F2:585*20250911**1101*0*20250809**20250814*123456789*F2:107~REF*1K*123456789~REF*EJ*123456789~DTP*472*D8*20250805~SVC*AD:D1120*141*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SVC*AD:D0801*274*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SVC*AD:D0603*161*0****1~STC*F2:107*20250911********F2:735~DTP*472*D8*20250805~SVC*AD:D0350*145*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SVC*AD:D0350*145*0****1~STC*F2:585*20250911~DTP*472*D8*20250805~SE*34*123456789~GE*1*123456789~IEA*1*123456789~"
                    }
                  },
                  "ClaimStatusRawX12_example3": {
                    "description": "",
                    "summary": "No matching claims found",
                    "value": {
                      "claims": [
                        {
                          "claimStatus": {
                            "amountPaid": "0",
                            "claimServiceDate": "20250526-20250601",
                            "effectiveDate": "20250912",
                            "entity": "Insurer",
                            "entityCode": "IN",
                            "statusCategoryCode": "D0",
                            "statusCategoryCodeValue": "Data Search Unsuccessful - The payer is unable to return status on the requested claim(s) based on the submitted search criteria.",
                            "statusCode": "97",
                            "statusCodeValue": "Patient eligibility not found with entity.",
                            "submittedAmount": "0",
                            "trackingNumber": "123456789"
                          }
                        }
                      ],
                      "controlNumber": "123456789",
                      "payer": {
                        "organizationName": "CHLIC",
                        "payerIdentification": "CIGNA"
                      },
                      "providers": [
                        {
                          "npi": "1999999984",
                          "organizationName": "Provider Name",
                          "providerType": "BillingProvider"
                        }
                      ],
                      "subscriber": {
                        "firstName": "JAMES",
                        "lastName": "JONES",
                        "memberId": "CIGNA12345"
                      },
                      "tradingPartnerServiceId": "CIGNA",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250825*2004*^*00501*123456789*0*P*:~GS*HN*STEDI*117151744*20250825*1504*123456789*X*005010X212~ST*277*123456789*005010X212~BHT*0010*08*123456789*20250825*160450*DG~HL*1**20*1~NM1*PR*2*CHLIC*****PI*CIGNA~PER*IC*CHC Medical*TE*8002725713~HL*2*1*21*1~NM1*41*2*PROVIDER NAME*****46*123456789~HL*3*2*19*1~NM1*1P*2*PROVIDER NAME*****XX*1999999984~HL*4*3*22*0~NM1*IL*1*JONES*JAMES****MI*CIGNA12345~TRN*2*123456789~STC*D0:97:IN*20250825**0*0~DTP*472*RD8*20250526-20250601~SE*15*123456789~GE*1*123456789~IEA*1*123456789~"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusRawX12ResponseContent"
                }
              }
            },
            "description": "ClaimStatusRawX12 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/eligibility/v3": {
      "post": {
        "description": "Submit a real-time 270/271 eligibility check in JSON format",
        "operationId": "EligibilityCheck",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "EligibilityCheck_example1": {
                  "description": "",
                  "summary": "Eligibility check - JSON",
                  "value": {
                    "encounter": {
                      "serviceTypeCodes": [
                        "MH"
                      ]
                    },
                    "externalPatientId": "UAA111222333",
                    "provider": {
                      "npi": "1999999984",
                      "organizationName": "ACME Health Services"
                    },
                    "subscriber": {
                      "dateOfBirth": "19000101",
                      "firstName": "Jane",
                      "lastName": "Doe",
                      "memberId": "123456789"
                    },
                    "tradingPartnerServiceId": "AHS"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/EligibilityCheckRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "EligibilityCheck_example1": {
                    "description": "",
                    "summary": "Eligibility check - JSON",
                    "value": {
                      "benefitsInformation": [
                        {
                          "additionalInformation": [
                            {
                              "description": "Complete Care Management"
                            }
                          ],
                          "code": "1",
                          "name": "Active Coverage",
                          "planCoverage": "Open Access Plus",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "6000",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "500",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "3000",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "250",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "benefitAmount": "15000",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "30000",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "benefitPercent": "0.1",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ]
                        },
                        {
                          "benefitAmount": "7500",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "15000",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "benefitPercent": "0.5",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ]
                        },
                        {
                          "code": "1",
                          "inPlanNetworkIndicator": "Not Applicable",
                          "inPlanNetworkIndicatorCode": "W",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "A7",
                            "BC",
                            "A8",
                            "A4",
                            "A5",
                            "A6",
                            "7",
                            "4",
                            "BB",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric - Inpatient",
                            "Day Care (Psychiatric)",
                            "Psychiatric - Outpatient",
                            "Psychiatric",
                            "Psychiatric - Room and Board",
                            "Psychotherapy",
                            "Anesthesia",
                            "Diagnostic X-Ray",
                            "Partial Hospitalization (Psychiatric)",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Outpatient Hospital",
                            "industryCode": "22"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Outpatient Hospital",
                              "industryCode": "22"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "BC",
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Day Care (Psychiatric)",
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "A8"
                          ],
                          "serviceTypes": [
                            "Psychiatric - Outpatient"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ]
                        },
                        {
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Included For Specific Services"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Included For Specific Services"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "Y",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "7"
                          ],
                          "serviceTypes": [
                            "Anesthesia"
                          ]
                        },
                        {
                          "authOrCertIndicator": "Y",
                          "code": "CB",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Coverage Basis",
                          "serviceTypeCodes": [
                            "7",
                            "BB"
                          ],
                          "serviceTypes": [
                            "Anesthesia",
                            "Partial Hospitalization (Psychiatric)"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "Y",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "7"
                          ],
                          "serviceTypes": [
                            "Anesthesia"
                          ]
                        },
                        {
                          "authOrCertIndicator": "Y",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "7"
                          ],
                          "serviceTypes": [
                            "Anesthesia"
                          ]
                        },
                        {
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Outpatient Hospital",
                            "industryCode": "22"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Outpatient Hospital",
                              "industryCode": "22"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "4"
                          ],
                          "serviceTypes": [
                            "Diagnostic X-Ray"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Outpatient Hospital",
                            "industryCode": "22"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Outpatient Hospital",
                              "industryCode": "22"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "4"
                          ],
                          "serviceTypes": [
                            "Diagnostic X-Ray"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "Y",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "BB"
                          ],
                          "serviceTypes": [
                            "Partial Hospitalization (Psychiatric)"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": " Provider is out of network based on NPI ID provided in request."
                            }
                          ],
                          "code": "1",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "MH"
                          ],
                          "serviceTypes": [
                            "Mental Health"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "5760",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "500",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "2760",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "250",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "benefitAmount": "15000",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "30000",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "benefitAmount": "7500",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "15000",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        }
                      ],
                      "controlNumber": "214976898",
                      "eligibilitySearchId": "01922a35-a177-7171-b868-cd4974dd54df",
                      "errors": [],
                      "meta": {
                        "applicationMode": "production",
                        "outboundTraceId": "01J2VZA127GH93JT74HJU",
                        "senderId": "030240928",
                        "submitterId": "117151744",
                        "traceId": "01J2VZA127GH93JT74HJU"
                      },
                      "payer": {
                        "contactInformation": {
                          "contacts": [
                            {
                              "communicationMode": "Telephone",
                              "communicationNumber": "1234567890"
                            },
                            {
                              "communicationMode": "Uniform Resource Locator (URL)",
                              "communicationNumber": "website.company.com"
                            }
                          ]
                        },
                        "entityIdentifier": "Payer",
                        "entityType": "Non-Person Entity",
                        "federalTaxpayersIdNumber": "123412345",
                        "name": "ABCDE"
                      },
                      "planDateInformation": {
                        "eligibilityBegin": "20220102",
                        "planBegin": "20240101",
                        "planEnd": "20241231"
                      },
                      "planInformation": {
                        "groupDescription": "ABCDE",
                        "groupNumber": "12341234",
                        "priorIdNumber": "1234567890"
                      },
                      "planStatus": [
                        {
                          "planDetails": "Open Access Plus",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "status": "Active Coverage",
                          "statusCode": "1"
                        },
                        {
                          "serviceTypeCodes": [
                            "A7",
                            "BC",
                            "A8",
                            "A4",
                            "A5",
                            "A6",
                            "7",
                            "4",
                            "BB",
                            "22"
                          ],
                          "status": "Active Coverage",
                          "statusCode": "1"
                        },
                        {
                          "serviceTypeCodes": [
                            "MH"
                          ],
                          "status": "Active Coverage",
                          "statusCode": "1"
                        }
                      ],
                      "provider": {
                        "entityIdentifier": "Provider",
                        "entityType": "Non-Person Entity",
                        "npi": "1999999984",
                        "providerName": "ACME HEALTH SERVICES"
                      },
                      "reassociationKey": "123456789",
                      "subscriber": {
                        "address": {
                          "address1": "1234 FIRST ST",
                          "city": "NEW YORK",
                          "postalCode": "123451111",
                          "state": "WV"
                        },
                        "dateOfBirth": "19000101",
                        "entityIdentifier": "Insured or Subscriber",
                        "entityType": "Person",
                        "firstName": "JANE",
                        "gender": "F",
                        "groupNumber": "123456789",
                        "lastName": "DOE",
                        "memberId": "123456789",
                        "middleName": "A"
                      },
                      "tradingPartnerServiceId": "123456789",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *111111*1234*^*00501*123456782*0*P*>~GS*HB*STEDI*117151744*20240326*111000*1*X*005010X279A1~ST*271*1001*005010X279A1~BHT*0022*11*01J2VZA127GH93JT74HJU*20240326*1514~HL*1**20*1~NM1*PR*2*ABCDE*****FI*111000123~PER*IC**TE*123456789*UR*website.company.com~HL*2*1*21*1~NM1*1P*2*ACME HEALTH SERVICES*****XX*1999999984~HL*3*2*22*0~NM1*IL*1*DOE*JANE*A***MI*123456789~REF*6P*123456789*ABCDE~REF*Q4*123456789~N3*1234 FIRST ST~N4*NEW YORK*WV*123451111~DMG*D8*19000101*F~INS*Y*18*001*25~DTP*356*D8*20220102~DTP*346*D8*20240101~DTP*347*D8*20241231~EB*1**30**Open Access Plus~MSG*Complete Care Management~EB*G*FAM*30***23*6000.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*FAM*30***23*500.00*****Y~MSG*Includes services provided by Client Specific Network~EB*G*IND*30***23*3000.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***23*250.00*****Y~MSG*Includes services provided by Client Specific Network~EB*C*FAM*30***23*15000.00*****N~EB*G*FAM*30***23*30000.00*****N~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*A*IND*30*****.10****Y~EB*C*IND*30***23*7500.00*****N~EB*G*IND*30***23*15000.00*****N~MSG*Deductible does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~EB*A*IND*30*****.50****N~EB*1**A7^BC^A8^A4^A5^A6^7^4^BB^22*********W~EB*C*IND*BC^A4^A6^4^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*22~EB*C*IND*A8****0.00****N*Y~MSG*Includes services provided by Client Specific Network~EB*C*IND*A4^A6^4^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*11~EB*C*IND*A4^A6^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*02~EB*B*IND*A4^A6^22***27*20.00****N*Y~III*ZZ*11~EB*A*IND*A4^A6^4^22*****.00***N*Y~III*ZZ*11~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Included For Specific Services~III*ZZ*02~EB*A*IND*A4^A6^22*****.00***N*Y~MSG*Included For Specific Services~III*ZZ*02~EB*A*IND*A4^A6^22*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*02~EB*A*IND*A4^A6^4^22*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*02~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*A*IND*7*****.00***Y*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*CB**7^BB********Y*Y~EB*C*IND*7****0.00****Y*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*11~EB*A*IND*7*****.00***Y*Y~III*ZZ*11~EB*A*IND*4*****.00***N*Y~III*ZZ*22~EB*A*IND*4*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*22~EB*C*IND*BB****0.00****Y*Y~MSG*Includes services provided by Client Specific Network~EB*1**MH~MSG* Provider is out of network based on NPI ID provided in request.~EB*G*FAM*30***29*5760.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*FAM*30***29*500.00*****Y~MSG*Includes services provided by Client Specific Network~EB*G*IND*30***29*2760.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***29*250.00*****Y~MSG*Includes services provided by Client Specific Network~EB*C*FAM*30***29*15000.00*****N~EB*G*FAM*30***29*30000.00*****N~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***29*7500.00*****N~EB*G*IND*30***29*15000.00*****N~MSG*Deductible does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~SE*119*1001~GE*1*1~IEA*1*123456782~"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/EligibilityCheckResponseContent"
                }
              }
            },
            "description": "EligibilityCheck 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityCheck400ErrorResponseContent"
                }
              }
            },
            "description": "EligibilityCheck400Error 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/eligibility/v3/raw-x12": {
      "post": {
        "description": "Submit a real-time 270/271 eligibility check in raw X12 EDI format",
        "operationId": "EligibilityRawX12Check",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "EligibilityRawX12Check_example1": {
                  "description": "",
                  "summary": "Eligibility check - X12 EDI",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*SENDER         *ZZ*RECEIVER       *231106*1406*^*00501*000000001*0*T*>~GS*HS*SENDERGS*RECEIVERGS*20231106*140631*000000001*X*005010X279A1~ST*270*1234*005010X279A1~BHT*0022*13*10001234*20240321*1319~HL*1**20*1~NM1*PR*2*ABCDE*****PI*11122~HL*2*1*21*1~NM1*1P*2*ACME HEALTH SERVICES*****SV*1999999984~HL*3*2*22*0~TRN*1*11122-12345*1234567890~NM1*IL*1*JANE*DOE****MI*123456789~DMG*D8*19000101~DTP*291*D8*20240108~EQ*MH~SE*13*1234~GE*1*000000001~IEA*1*000000001~"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/EligibilityRawX12CheckRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "EligibilityRawX12Check_example1": {
                    "description": "",
                    "summary": "Eligibility check - X12 EDI",
                    "value": {
                      "benefitsInformation": [
                        {
                          "additionalInformation": [
                            {
                              "description": "Complete Care Management"
                            }
                          ],
                          "code": "1",
                          "name": "Active Coverage",
                          "planCoverage": "Open Access Plus",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "6000",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "500",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "3000",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "250",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "benefitAmount": "15000",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "30000",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "benefitPercent": "0.1",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ]
                        },
                        {
                          "benefitAmount": "7500",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "15000",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Calendar Year",
                          "timeQualifierCode": "23"
                        },
                        {
                          "benefitPercent": "0.5",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ]
                        },
                        {
                          "code": "1",
                          "inPlanNetworkIndicator": "Not Applicable",
                          "inPlanNetworkIndicatorCode": "W",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "A7",
                            "BC",
                            "A8",
                            "A4",
                            "A5",
                            "A6",
                            "7",
                            "4",
                            "BB",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric - Inpatient",
                            "Day Care (Psychiatric)",
                            "Psychiatric - Outpatient",
                            "Psychiatric",
                            "Psychiatric - Room and Board",
                            "Psychotherapy",
                            "Anesthesia",
                            "Diagnostic X-Ray",
                            "Partial Hospitalization (Psychiatric)",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Outpatient Hospital",
                            "industryCode": "22"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Outpatient Hospital",
                              "industryCode": "22"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "BC",
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Day Care (Psychiatric)",
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "A8"
                          ],
                          "serviceTypes": [
                            "Psychiatric - Outpatient"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ]
                        },
                        {
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Included For Specific Services"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Included For Specific Services"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "4",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Diagnostic X-Ray",
                            "Social Work"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Telehealth Provided Other than in Patient’s Home",
                            "industryCode": "02"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Telehealth Provided Other than in Patient’s Home",
                              "industryCode": "02"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitAmount": "20",
                          "code": "B",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Payment",
                          "serviceTypeCodes": [
                            "A4",
                            "A6",
                            "22"
                          ],
                          "serviceTypes": [
                            "Psychiatric",
                            "Psychotherapy",
                            "Social Work"
                          ],
                          "timeQualifier": "Visit",
                          "timeQualifierCode": "27"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "Y",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "7"
                          ],
                          "serviceTypes": [
                            "Anesthesia"
                          ]
                        },
                        {
                          "authOrCertIndicator": "Y",
                          "code": "CB",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Coverage Basis",
                          "serviceTypeCodes": [
                            "7",
                            "BB"
                          ],
                          "serviceTypes": [
                            "Anesthesia",
                            "Partial Hospitalization (Psychiatric)"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "Y",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "7"
                          ],
                          "serviceTypes": [
                            "Anesthesia"
                          ]
                        },
                        {
                          "authOrCertIndicator": "Y",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Office",
                            "industryCode": "11"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Office",
                              "industryCode": "11"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "7"
                          ],
                          "serviceTypes": [
                            "Anesthesia"
                          ]
                        },
                        {
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Outpatient Hospital",
                            "industryCode": "22"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Outpatient Hospital",
                              "industryCode": "22"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "4"
                          ],
                          "serviceTypes": [
                            "Diagnostic X-Ray"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Services rendered thru Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "N",
                          "benefitPercent": "0",
                          "code": "A",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "eligibilityAdditionalInformation": {
                            "codeListQualifier": "Mutually Defined",
                            "codeListQualifierCode": "ZZ",
                            "industry": "Outpatient Hospital",
                            "industryCode": "22"
                          },
                          "eligibilityAdditionalInformationList": [
                            {
                              "codeListQualifier": "Mutually Defined",
                              "codeListQualifierCode": "ZZ",
                              "industry": "Outpatient Hospital",
                              "industryCode": "22"
                            }
                          ],
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Co-Insurance",
                          "serviceTypeCodes": [
                            "4"
                          ],
                          "serviceTypes": [
                            "Diagnostic X-Ray"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "authOrCertIndicator": "Y",
                          "benefitAmount": "0",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "BB"
                          ],
                          "serviceTypes": [
                            "Partial Hospitalization (Psychiatric)"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": " Provider is out of network based on NPI ID provided in request."
                            }
                          ],
                          "code": "1",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "MH"
                          ],
                          "serviceTypes": [
                            "Mental Health"
                          ]
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "5760",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "500",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            },
                            {
                              "description": "Copay does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "2760",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Includes services provided by Client Specific Network"
                            }
                          ],
                          "benefitAmount": "250",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "Yes",
                          "inPlanNetworkIndicatorCode": "Y",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "benefitAmount": "15000",
                          "code": "C",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "30000",
                          "code": "G",
                          "coverageLevel": "Family",
                          "coverageLevelCode": "FAM",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "benefitAmount": "7500",
                          "code": "C",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Deductible",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        },
                        {
                          "additionalInformation": [
                            {
                              "description": "Deductible does apply to member's out-of-pocket maximum"
                            },
                            {
                              "description": "Coinsurance does apply to member's out-of-pocket maximum"
                            }
                          ],
                          "benefitAmount": "15000",
                          "code": "G",
                          "coverageLevel": "Individual",
                          "coverageLevelCode": "IND",
                          "inPlanNetworkIndicator": "No",
                          "inPlanNetworkIndicatorCode": "N",
                          "name": "Out of Pocket (Stop Loss)",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "serviceTypes": [
                            "Health Benefit Plan Coverage"
                          ],
                          "timeQualifier": "Remaining",
                          "timeQualifierCode": "29"
                        }
                      ],
                      "controlNumber": "1001",
                      "eligibilitySearchId": "01922a35-a177-7171-b868-cd4974dd54df",
                      "errors": [],
                      "meta": {
                        "applicationMode": "production",
                        "outboundTraceId": "01J2VZA127GH93JT74HJU",
                        "senderId": "STEDI",
                        "submitterId": "117151744",
                        "traceId": "01J2VZA127GH93JT74HJU"
                      },
                      "payer": {
                        "contactInformation": {
                          "contacts": [
                            {
                              "communicationMode": "Telephone",
                              "communicationNumber": "1234567890"
                            },
                            {
                              "communicationMode": "Uniform Resource Locator (URL)",
                              "communicationNumber": "website.company.com"
                            }
                          ]
                        },
                        "entityIdentifier": "Payer",
                        "entityType": "Non-Person Entity",
                        "federalTaxpayersIdNumber": "123412345",
                        "name": "ABCDE"
                      },
                      "planDateInformation": {
                        "eligibilityBegin": "20240102",
                        "planBegin": "20240101",
                        "planEnd": "20241231"
                      },
                      "planInformation": {
                        "groupDescription": "ABCDE",
                        "groupNumber": "12341234",
                        "priorIdNumber": "1234567890"
                      },
                      "planStatus": [
                        {
                          "planDetails": "Open Access Plus",
                          "serviceTypeCodes": [
                            "30"
                          ],
                          "status": "Active Coverage",
                          "statusCode": "1"
                        },
                        {
                          "serviceTypeCodes": [
                            "A7",
                            "BC",
                            "A8",
                            "A4",
                            "A5",
                            "A6",
                            "7",
                            "4",
                            "BB",
                            "22"
                          ],
                          "status": "Active Coverage",
                          "statusCode": "1"
                        },
                        {
                          "serviceTypeCodes": [
                            "MH"
                          ],
                          "status": "Active Coverage",
                          "statusCode": "1"
                        }
                      ],
                      "provider": {
                        "entityIdentifier": "Provider",
                        "entityType": "Non-Person Entity",
                        "npi": "1999999984",
                        "providerName": "ACME HEALTH SERVICES"
                      },
                      "reassociationKey": "123456789",
                      "subscriber": {
                        "address": {
                          "address1": "1234 FIRST ST",
                          "city": "NEW YORK",
                          "postalCode": "123451111",
                          "state": "WV"
                        },
                        "dateOfBirth": "19000101",
                        "entityIdentifier": "Insured or Subscriber",
                        "entityType": "Person",
                        "firstName": "JANE",
                        "gender": "F",
                        "groupNumber": "123456789",
                        "lastName": "DOE",
                        "memberId": "123456789",
                        "middleName": "A"
                      },
                      "tradingPartnerServiceId": "123456789",
                      "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *111111*1234*^*00501*123456782*0*P*>~GS*HB*STEDI*117151744*20240326*111000*1*X*005010X279A1~ST*271*1001*005010X279A1~BHT*0022*11*01J2VZA127GH93JT74HJU*20240326*1514~HL*1**20*1~NM1*PR*2*ABCDE*****FI*111000123~PER*IC**TE*123456789*UR*website.company.com~HL*2*1*21*1~NM1*1P*2*ACME HEALTH SERVICES*****XX*1999999984~HL*3*2*22*0~NM1*IL*1*DOE*JANE*A***MI*123456789~REF*6P*123456789*ABCDE~REF*Q4*123456789~N3*1234 FIRST ST~N4*NEW YORK*WV*123451111~DMG*D8*19000101*F~INS*Y*18*001*25~DTP*356*D8*20220102~DTP*346*D8*20240101~DTP*347*D8*20241231~EB*1**30**Open Access Plus~MSG*Complete Care Management~EB*G*FAM*30***23*6000.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*FAM*30***23*500.00*****Y~MSG*Includes services provided by Client Specific Network~EB*G*IND*30***23*3000.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***23*250.00*****Y~MSG*Includes services provided by Client Specific Network~EB*C*FAM*30***23*15000.00*****N~EB*G*FAM*30***23*30000.00*****N~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*A*IND*30*****.10****Y~EB*C*IND*30***23*7500.00*****N~EB*G*IND*30***23*15000.00*****N~MSG*Deductible does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~EB*A*IND*30*****.50****N~EB*1**A7^BC^A8^A4^A5^A6^7^4^BB^22*********W~EB*C*IND*BC^A4^A6^4^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*22~EB*C*IND*A8****0.00****N*Y~MSG*Includes services provided by Client Specific Network~EB*C*IND*A4^A6^4^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*11~EB*C*IND*A4^A6^22****0.00****N*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*02~EB*B*IND*A4^A6^22***27*20.00****N*Y~III*ZZ*11~EB*A*IND*A4^A6^4^22*****.00***N*Y~III*ZZ*11~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Included For Specific Services~III*ZZ*02~EB*A*IND*A4^A6^22*****.00***N*Y~MSG*Included For Specific Services~III*ZZ*02~EB*A*IND*A4^A6^22*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*02~EB*A*IND*A4^A6^4^22*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*02~EB*B*IND*A4^A6^22***27*20.00****N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*A*IND*7*****.00***Y*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*11~EB*CB**7^BB********Y*Y~EB*C*IND*7****0.00****Y*Y~MSG*Includes services provided by Client Specific Network~III*ZZ*11~EB*A*IND*7*****.00***Y*Y~III*ZZ*11~EB*A*IND*4*****.00***N*Y~III*ZZ*22~EB*A*IND*4*****.00***N*Y~MSG*Services rendered thru Client Specific Network~III*ZZ*22~EB*C*IND*BB****0.00****Y*Y~MSG*Includes services provided by Client Specific Network~EB*1**MH~MSG* Provider is out of network based on NPI ID provided in request.~EB*G*FAM*30***29*5760.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*FAM*30***29*500.00*****Y~MSG*Includes services provided by Client Specific Network~EB*G*IND*30***29*2760.00*****Y~MSG*Includes services provided by Client Specific Network~MSG*Copay does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***29*250.00*****Y~MSG*Includes services provided by Client Specific Network~EB*C*FAM*30***29*15000.00*****N~EB*G*FAM*30***29*30000.00*****N~MSG*Coinsurance does apply to member's out-of-pocket maximum~MSG*Deductible does apply to member's out-of-pocket maximum~EB*C*IND*30***29*7500.00*****N~EB*G*IND*30***29*15000.00*****N~MSG*Deductible does apply to member's out-of-pocket maximum~MSG*Coinsurance does apply to member's out-of-pocket maximum~SE*119*1001~GE*1*1~IEA*1*123456782~"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/EligibilityRawX12CheckResponseContent"
                }
              }
            },
            "description": "EligibilityRawX12Check 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityRawX12Check400ErrorResponseContent"
                }
              }
            },
            "description": "EligibilityRawX12Check400Error 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/institutionalclaims/v1/raw-x12-submission": {
      "post": {
        "description": "Submit an 837I institutional claim in raw X12 EDI format",
        "operationId": "InstitutionalClaimsRawX12Submission",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "InstitutionalClaimsRawX12Submission_example1": {
                  "description": "",
                  "summary": "Submit institutional claim - X12 EDI",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*001690149382   *ZZ*STEDITEST      *240630*0847*^*00501*000000001*0*T*>~GS*HC*001690149382*STEDITEST*20240630*084744*000000001*X*005010X223A2~ST*837*3456*005010X223A2~BHT*0019*00*0123*20061123*1023*CH~NM1*41*2*PREMIER BILLING SERVICE*****46*TGJ23~PER*IC*JERRY*TE*7176149999~NM1*40*2*AETNA*****46*AETNA~HL*1**20*1~NM1*85*2*TEST HOSPITAL*****XX*1234567890~N3*123 HOSPITAL ST~N4*NEW YORK*NY*10001~REF*EI*123456789~HL*2*1*22*1~SBR*P********CI~NM1*IL*1*DOE*JOHN****MI*123456789~NM1*PR*2*AETNA*****PI*AETNA~HL*3*2*23*0~PAT*19~NM1*QC*1*DOE*JOHN~N3*123 MAIN ST~N4*NEW YORK*NY*10001~DMG*D8*19800101*M~CLM*26403774*150***11>B>1*Y*A*Y*I~DTP*472*D8*20240101~REF*D9*17312345600006351~NM1*82*1*SMITH*JANE****XX*1234567890~PRV*AT*PXC*207Q00000X~LX*1~SV2*0450*HC>99213*150****1~DTP*472*D8*20240101~SE*29*3456~GE*1*000000001~IEA*1*000000001~"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/InstitutionalClaimsRawX12SubmissionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "InstitutionalClaimsRawX12Submission_example1": {
                    "description": "",
                    "summary": "Submit institutional claim - X12 EDI",
                    "value": {
                      "claimReference": {
                        "correlationId": "01J1M588QT2TAV2N093GNJ998T",
                        "formatVersion": "5010",
                        "patientControlNumber": "26403774",
                        "payerID": "AETNA",
                        "rhclaimNumber": "01J1M588QT2TAV2N093GNJ998T",
                        "serviceLines": [
                          {
                            "lineItemControlNumber": "1"
                          }
                        ],
                        "timeOfResponse": "2024-07-10T22:05:32.203Z"
                      },
                      "controlNumber": "000000001",
                      "httpStatusCode": "200 OK",
                      "meta": {
                        "traceId": "b727b8e7-1f00-4011-bc6e-e41444d406d8"
                      },
                      "payer": {
                        "payerID": "AETNA",
                        "payerName": "Aetna"
                      },
                      "status": "SUCCESS",
                      "tradingPartnerServiceId": "AETNA"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/InstitutionalClaimsRawX12SubmissionResponseContent"
                }
              }
            },
            "description": "InstitutionalClaimsRawX12Submission 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/institutionalclaims/v1/submission": {
      "post": {
        "description": "Submit an 837I institutional claim in JSON format",
        "operationId": "InstitutionalClaimsSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "InstitutionalClaimsSubmission_example1": {
                  "description": "",
                  "summary": "Submit institutional claim - JSON",
                  "value": {
                    "claimInformation": {
                      "benefitsAssignmentCertificationIndicator": "Y",
                      "claimChargeAmount": "500.00",
                      "claimCodeInformation": {
                        "admissionSourceCode": "9",
                        "admissionTypeCode": "3",
                        "patientStatusCode": "30"
                      },
                      "claimDateInformation": {
                        "admissionDateAndHour": "202409091000",
                        "statementBeginDate": "20241015",
                        "statementEndDate": "20241015"
                      },
                      "claimFilingCode": "ZZ",
                      "claimFrequencyCode": "0",
                      "patientControlNumber": "<YOUR-CLAIM-ID>",
                      "placeOfServiceCode": "11",
                      "planParticipationCode": "C",
                      "principalDiagnosis": {
                        "principalDiagnosisCode": "R45851",
                        "qualifierCode": "ABK"
                      },
                      "releaseInformationCode": "Y",
                      "serviceLines": [
                        {
                          "assignedNumber": "0",
                          "institutionalService": {
                            "lineItemChargeAmount": "500.00",
                            "measurementUnit": "UN",
                            "procedureCode": "H0001",
                            "procedureIdentifier": "HC",
                            "serviceLineRevenueCode": "90",
                            "serviceUnitCount": "1"
                          },
                          "lineItemControlNumber": "111222333",
                          "serviceDate": "20241015",
                          "serviceDateEnd": "20241015"
                        }
                      ]
                    },
                    "providers": [
                      {
                        "address": {
                          "address1": "123 Mulberry Street",
                          "city": "Seattle",
                          "postalCode": "111135272",
                          "state": "WA"
                        },
                        "contactInformation": {
                          "name": "Test Facility",
                          "phoneNumber": "2065551234"
                        },
                        "employerId": "123456789",
                        "npi": "1999999976",
                        "organizationName": "Test Facility",
                        "providerType": "BillingProvider"
                      },
                      {
                        "contactInformation": {
                          "name": "name"
                        },
                        "firstName": "Doctor",
                        "lastName": "Provider",
                        "npi": "1999999976",
                        "providerType": "AttendingProvider"
                      }
                    ],
                    "receiver": {
                      "organizationName": "UnitedHealthcare"
                    },
                    "submitter": {
                      "contactInformation": {
                        "name": "Test Facility",
                        "phoneNumber": "2225551234"
                      },
                      "organizationName": "Test Facility",
                      "taxId": "123456789"
                    },
                    "subscriber": {
                      "firstName": "JANE",
                      "groupNumber": "67890",
                      "lastName": "DOE",
                      "memberId": "98765",
                      "paymentResponsibilityLevelCode": "P"
                    },
                    "tradingPartnerName": "UnitedHealthcare",
                    "tradingPartnerServiceId": "87726",
                    "usageIndicator": "T"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/InstitutionalClaimsSubmissionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "InstitutionalClaimsSubmission_example1": {
                    "description": "",
                    "summary": "Submit institutional claim - JSON",
                    "value": {
                      "claimReference": {
                        "claimType": "INST",
                        "correlationId": "01JABEX6DPF4FCT2J0Y0SGFCY8",
                        "formatVersion": "5010",
                        "patientControlNumber": "00001111222233334444",
                        "rhClaimNumber": "01JABEX6DPF4FCT2J0Y0SGFCY8",
                        "timeOfResponse": "2024-10-16T20:04:32.962Z"
                      },
                      "controlNumber": "123456789",
                      "httpStatusCode": "200 OK",
                      "meta": {
                        "traceId": "a742ab42-a6f3-4232-a88c-197d341afdbe"
                      },
                      "payer": {
                        "payerID": "87726",
                        "payerName": "UnitedHealthcare"
                      },
                      "status": "SUCCESS",
                      "tradingPartnerServiceId": "87726"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/InstitutionalClaimsSubmissionResponseContent"
                }
              }
            },
            "description": "InstitutionalClaimsSubmission 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/professionalclaims/v3/raw-x12-submission": {
      "post": {
        "description": "Submit an 837P professional claim in raw X12 EDI format",
        "operationId": "ClaimsRawX12Submission",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "ClaimsRawX12Submission_example1": {
                  "description": "",
                  "summary": "Submit professional claim - X12 EDI",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*001690149382   *ZZ*STEDITEST      *240630*0847*^*00501*000000001*0*T*>~GS*HC*001690149382*STEDITEST*20240630*084744*000000001*X*005010X222A1~ST*837*0001*005010X222A1~BHT*0019*00*01J1M588QT2TAV2N093GNJ998T*20240630*0847*CH~NM1*41*2*Test Data Health Services, Inc.*****46*123567890~PER*IC*Test Data Health Services, Inc.*TE*5552223333~NM1*40*2*Cigna*****46*60054~HL*1**20*1~PRV*BI*PXC*2084P0800X~NM1*85*2*Therapy Associates*****XX*1999999984~N3*123 Some St*Floor 1~N4*A City*NY*123450000~REF*EI*832675429~PER*IC*Test Data Health Services, Inc.*TE*5553334444~HL*2*1*22*0~SBR*P*18*3335555******CI~NM1*IL*1*Anon*John****MI*U7777788888~N3*2222 Random St~N4*A City*NY*123450000~DMG*D8*20000101*M~NM1*PR*2*Cigna*****PI*60054~CLM*22266555*109.0***02>B>1*Y*A*Y*Y~HI*ABK>F1111~NM1*82*1*Smith*Jane****XX*1999999984~PRV*PE*PXC*111YP2000X~NM1*77*2*Smith Associates*****XX*1999999984~N3*1234 Other St~N4*A City*NY*123450000~LX*1~SV1*HC>90837>95*109.2*UN*1.0***1~DTP*472*D8*20240101~SE*30*0001~GE*1*000000001~IEA*1*000000001~"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ClaimsRawX12SubmissionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ClaimsRawX12Submission_example1": {
                    "description": "",
                    "summary": "Submit professional claim - X12 EDI",
                    "value": {
                      "claimReference": {
                        "correlationId": "01J1M588QT2TAV2N093GNJ998T",
                        "formatVersion": "5010",
                        "patientControlNumber": "22266555",
                        "payerID": "60054",
                        "rhclaimNumber": "01J1M588QT2TAV2N093GNJ998T",
                        "serviceLines": [
                          {
                            "lineItemControlNumber": "111222333"
                          }
                        ],
                        "timeOfResponse": "2024-07-10T22:05:32.203Z"
                      },
                      "controlNumber": "000000001",
                      "httpStatusCode": "200 OK",
                      "meta": {
                        "traceId": "b727b8e7-1f00-4011-bc6e-e41444d406d8"
                      },
                      "payer": {
                        "payerID": "60054",
                        "payerName": "Cigna"
                      },
                      "status": "SUCCESS",
                      "tradingPartnerServiceId": "60054"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ClaimsRawX12SubmissionResponseContent"
                }
              }
            },
            "description": "ClaimsRawX12Submission 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/professionalclaims/v3/submission": {
      "post": {
        "description": "Submit an 837P professional claim in JSON format",
        "operationId": "ClaimsSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "ClaimsSubmission_example1": {
                  "description": "",
                  "summary": "Submit professional claim - JSON",
                  "value": {
                    "billing": {
                      "address": {
                        "address1": "123 Some St",
                        "address2": "Floor 1",
                        "city": "A City",
                        "postalCode": "123450000",
                        "state": "NY"
                      },
                      "contactInformation": {
                        "name": "Test Data Health Services, Inc.",
                        "phoneNumber": "5553334444"
                      },
                      "employerId": "123456789",
                      "npi": "1999999984",
                      "organizationName": "Therapy Associates",
                      "providerType": "BillingProvider",
                      "taxonomyCode": "2084P0800X"
                    },
                    "claimInformation": {
                      "benefitsAssignmentCertificationIndicator": "Y",
                      "claimChargeAmount": "109.20",
                      "claimFilingCode": "CI",
                      "claimFrequencyCode": "1",
                      "healthCareCodeInformation": [
                        {
                          "diagnosisCode": "F1111",
                          "diagnosisTypeCode": "ABK"
                        }
                      ],
                      "patientControlNumber": "<YOUR-CLAIM-ID>",
                      "placeOfServiceCode": "02",
                      "planParticipationCode": "A",
                      "releaseInformationCode": "Y",
                      "serviceFacilityLocation": {
                        "address": {
                          "address1": "1234 Other St",
                          "city": "A City",
                          "postalCode": "123450000",
                          "state": "NY"
                        },
                        "npi": "1999999984",
                        "organizationName": "Smith Associates"
                      },
                      "serviceLines": [
                        {
                          "professionalService": {
                            "compositeDiagnosisCodePointers": {
                              "diagnosisCodePointers": [
                                "1"
                              ]
                            },
                            "lineItemChargeAmount": "109.20",
                            "measurementUnit": "UN",
                            "procedureCode": "90837",
                            "procedureIdentifier": "HC",
                            "procedureModifiers": [
                              "95"
                            ],
                            "serviceUnitCount": "1"
                          },
                          "providerControlNumber": "111222333",
                          "renderingProvider": {
                            "firstName": "Jane",
                            "lastName": "Smith",
                            "npi": "1999999984",
                            "providerType": "RenderingProvider",
                            "taxonomyCode": "111YP2000X"
                          },
                          "serviceDate": "20240101"
                        }
                      ],
                      "signatureIndicator": "Y"
                    },
                    "receiver": {
                      "organizationName": "Cigna"
                    },
                    "submitter": {
                      "contactInformation": {
                        "name": "Test Data Health Services, Inc.",
                        "phoneNumber": "5552223333"
                      },
                      "organizationName": "Test Data Health Services, Inc.",
                      "submitterIdentification": "<YOUR-SUBMITTER-ID>"
                    },
                    "subscriber": {
                      "address": {
                        "address1": "2222 Random St",
                        "city": "A City",
                        "postalCode": "123450000",
                        "state": "NY"
                      },
                      "dateOfBirth": "20000101",
                      "firstName": "John",
                      "gender": "M",
                      "groupNumber": "3335555",
                      "lastName": "Anon",
                      "memberId": "U7777788888",
                      "paymentResponsibilityLevelCode": "P",
                      "subscriberGroupName": "Cigna"
                    },
                    "tradingPartnerName": "Cigna",
                    "tradingPartnerServiceId": "6400",
                    "usageIndicator": "T"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ClaimsSubmissionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ClaimsSubmission_example1": {
                    "description": "",
                    "summary": "Submit professional claim - JSON",
                    "value": {
                      "claimReference": {
                        "correlationId": "01HTCX97F6XS6F2K22D4KD59TK",
                        "formatVersion": "5010",
                        "patientControlNumber": "22266555",
                        "payerID": "6400",
                        "rhclaimNumber": "01HTCX97F6XS6F2K22D4KD59TK",
                        "serviceLines": [
                          {
                            "lineItemControlNumber": "111222333"
                          }
                        ],
                        "timeOfResponse": "2024-04-01T13:23:54.255Z"
                      },
                      "controlNumber": "555123",
                      "httpStatusCode": "200 OK",
                      "meta": {
                        "traceId": "a7f7c912-77f7-489d-96fc-c4ab3b5c33fc"
                      },
                      "payer": {
                        "payerID": "6400",
                        "payerName": "Cigna"
                      },
                      "status": "SUCCESS",
                      "tradingPartnerServiceId": "6400"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ClaimsSubmissionResponseContent"
                }
              }
            },
            "description": "ClaimsSubmission 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/reports/v2/{transactionId}/277": {
      "get": {
        "description": "Retrieve a 277CA claim acknowledgment in JSON format",
        "operationId": "ConvertReport277",
        "parameters": [
          {
            "description": "A unique identifier for the processed 277 transaction within Stedi. This ID is included in the transaction processed event, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve it through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within the Stedi portal.",
            "examples": {
              "ConvertReport277_example1": {
                "description": "",
                "summary": "Retrieve 277CA - accepted claim",
                "value": "d567c2ae-f073-4725-8b8c-06c473b738a6"
              },
              "ConvertReport277_example2": {
                "description": "",
                "summary": "Retrieve 277CA - denied claim",
                "value": "71716ec5-0e96-462f-bb77-869941bb27ab"
              }
            },
            "in": "path",
            "name": "transactionId",
            "required": true,
            "schema": {
              "description": "A unique identifier for the processed 277 transaction within Stedi. This ID is included in the transaction processed event, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve it through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within the Stedi portal.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ConvertReport277_example1": {
                    "description": "",
                    "summary": "Retrieve 277CA - accepted claim",
                    "value": {
                      "meta": {
                        "transactionId": "71716ec5-0e96-462f-bb77-869941bb27ab"
                      },
                      "transactions": [
                        {
                          "controlNumber": "1001",
                          "payers": [
                            {
                              "claimStatusTransactions": [
                                {
                                  "claimStatusDetails": [
                                    {
                                      "patientClaimStatusDetails": [
                                        {
                                          "claims": [
                                            {
                                              "claimStatus": {
                                                "claimServiceBeginDate": "20240101",
                                                "claimServiceEndDate": "20240101",
                                                "clearinghouseTraceNumber": "01J1SNT1FQC8ABWD44MAMBDYKA",
                                                "informationClaimStatuses": [
                                                  {
                                                    "informationStatuses": [
                                                      {
                                                        "healthCareClaimStatusCategoryCode": "A1",
                                                        "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Receipt - The claim/encounter has been received. This does not mean that the claim has been accepted for adjudication.",
                                                        "statusCode": "20",
                                                        "statusCodeValue": "Accepted for processing."
                                                      }
                                                    ],
                                                    "statusInformationEffectiveDate": "20240702",
                                                    "totalClaimChargeAmount": "109.20"
                                                  }
                                                ],
                                                "patientAccountNumber": "11122233",
                                                "referencedTransactionTraceNumber": "11122233"
                                              }
                                            }
                                          ],
                                          "subscriber": {
                                            "firstName": "JOHN",
                                            "lastName": "ANON",
                                            "memberId": "U7777788888"
                                          }
                                        }
                                      ],
                                      "providerOFServiceInformationTraceIdentifier": "0",
                                      "serviceProvider": {
                                        "npi": "1235600834",
                                        "organizationName": "THERAPY ASSOCIATES"
                                      }
                                    }
                                  ],
                                  "claimTransactionBatchNumber": "01J1SNRJ0FP4ZE6EFWM4G4XB3N",
                                  "provider": {
                                    "etin": "1235600834",
                                    "organizationName": "TEST DATA HEALTH SERVICES, INC."
                                  },
                                  "providerClaimStatuses": [
                                    {
                                      "providerStatuses": [
                                        {
                                          "healthCareClaimStatusCategoryCode": "A1",
                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Receipt - The claim/encounter has been received. This does not mean that the claim has been accepted for adjudication.",
                                          "statusCode": "20",
                                          "statusCodeValue": "Accepted for processing."
                                        }
                                      ],
                                      "statusInformationEffectiveDate": "20240702"
                                    }
                                  ]
                                }
                              ],
                              "organizationName": "STEDI INC"
                            }
                          ],
                          "referenceIdentification": "1511096803",
                          "transactionSetCreationDate": "20240702",
                          "transactionSetCreationTime": "0815"
                        }
                      ]
                    }
                  },
                  "ConvertReport277_example2": {
                    "description": "",
                    "summary": "Retrieve 277CA - denied claim",
                    "value": {
                      "meta": {
                        "transactionId": "71716ec5-0e96-462f-bb77-869941bb27ab"
                      },
                      "transactions": [
                        {
                          "controlNumber": "1001",
                          "payers": [
                            {
                              "claimStatusTransactions": [
                                {
                                  "claimStatusDetails": [
                                    {
                                      "patientClaimStatusDetails": [
                                        {
                                          "claims": [
                                            {
                                              "claimStatus": {
                                                "claimServiceBeginDate": "20250101",
                                                "claimServiceEndDate": "20250109",
                                                "clearinghouseTraceNumber": "NA",
                                                "informationClaimStatuses": [
                                                  {
                                                    "informationStatuses": [
                                                      {
                                                        "healthCareClaimStatusCategoryCode": "A3",
                                                        "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                        "statusCode": "21",
                                                        "statusCodeValue": "Missing or invalid information."
                                                      }
                                                    ],
                                                    "statusInformationEffectiveDate": "20250201",
                                                    "totalClaimChargeAmount": "3459.3"
                                                  }
                                                ],
                                                "patientAccountNumber": "AAA11111",
                                                "referencedTransactionTraceNumber": "AAA11111"
                                              },
                                              "serviceLines": [
                                                {
                                                  "beginServiceLineDate": "20250101",
                                                  "lineItemControlNumber": "ABCD1234",
                                                  "service": {
                                                    "chargeAmount": "379.39",
                                                    "procedureCode": "97153",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "11"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250101",
                                                  "lineItemControlNumber": "DCBA4321",
                                                  "service": {
                                                    "chargeAmount": "206.94",
                                                    "procedureCode": "97155",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "6"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250101",
                                                  "lineItemControlNumber": "WXYZ1234",
                                                  "service": {
                                                    "chargeAmount": "413.92",
                                                    "procedureCode": "97154",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "16"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250101",
                                                  "lineItemControlNumber": "ZYXW4321",
                                                  "service": {
                                                    "chargeAmount": "138.72",
                                                    "procedureCode": "97156",
                                                    "procedureModifiers": [
                                                      "GT",
                                                      "59"
                                                    ],
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "4"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250101",
                                                  "lineItemControlNumber": "EFGH5678",
                                                  "service": {
                                                    "chargeAmount": "413.92",
                                                    "procedureCode": "97154",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "16"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250102",
                                                  "lineItemControlNumber": "HGFE8765",
                                                  "service": {
                                                    "chargeAmount": "413.92",
                                                    "procedureCode": "97154",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "16"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250105",
                                                  "lineItemControlNumber": "IJKL1234",
                                                  "service": {
                                                    "chargeAmount": "137.96",
                                                    "procedureCode": "97155",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "4"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250105",
                                                  "lineItemControlNumber": "LKJI4321",
                                                  "service": {
                                                    "chargeAmount": "388.05",
                                                    "procedureCode": "97154",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "15"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250107",
                                                  "lineItemControlNumber": "MNOP5678",
                                                  "service": {
                                                    "chargeAmount": "138.72",
                                                    "procedureCode": "97156",
                                                    "procedureModifiers": [
                                                      "GT",
                                                      "59"
                                                    ],
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "4"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250107",
                                                  "lineItemControlNumber": "PONM8765",
                                                  "service": {
                                                    "chargeAmount": "413.88",
                                                    "procedureCode": "97153",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "12"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "beginServiceLineDate": "20250109",
                                                  "lineItemControlNumber": "QRST6789",
                                                  "service": {
                                                    "chargeAmount": "413.88",
                                                    "procedureCode": "97153",
                                                    "serviceIdQualifierCode": "HC",
                                                    "serviceIdQualifierCodeValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes",
                                                    "submittedUnits": "12"
                                                  },
                                                  "serviceClaimStatuses": [
                                                    {
                                                      "serviceStatuses": [
                                                        {
                                                          "entityIdentifierCode": "IL",
                                                          "entityIdentifierCodeValue": "Insured or Subscriber",
                                                          "healthCareClaimStatusCategoryCode": "A3",
                                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Returned as unprocessable claim - The claim/encounter has been rejected and has not been entered into the adjudication system.",
                                                          "statusCode": "164",
                                                          "statusCodeValue": "Entity's contract/member number."
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "subscriber": {
                                            "firstName": "JOHN",
                                            "lastName": "DOE",
                                            "memberId": "XYZ1234567"
                                          }
                                        }
                                      ],
                                      "providerOFServiceInformationTraceIdentifier": "0",
                                      "serviceProvider": {
                                        "npi": "1234567890",
                                        "organizationName": "Provider Organization Name"
                                      }
                                    }
                                  ],
                                  "claimTransactionBatchNumber": "387DKEO986DMGN98733S",
                                  "provider": {
                                    "etin": "1234567890",
                                    "organizationName": "Provider Organization Name"
                                  },
                                  "providerClaimStatuses": [
                                    {
                                      "providerStatuses": [
                                        {
                                          "healthCareClaimStatusCategoryCode": "A1",
                                          "healthCareClaimStatusCategoryCodeValue": "Acknowledgement/Receipt - The claim/encounter has been received. This does not mean that the claim has been accepted for adjudication.",
                                          "statusCode": "20",
                                          "statusCodeValue": "Accepted for processing."
                                        }
                                      ],
                                      "statusInformationEffectiveDate": "20250201"
                                    }
                                  ]
                                }
                              ],
                              "organizationName": "AZ BLUE",
                              "payerIdentification": "BCBSAZ"
                            }
                          ],
                          "referenceIdentification": "94846578362",
                          "transactionSetCreationDate": "20250201",
                          "transactionSetCreationTime": "1439"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ConvertReport277ResponseContent"
                }
              }
            },
            "description": "ConvertReport277 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/change/medicalnetwork/reports/v2/{transactionId}/835": {
      "get": {
        "description": "Retrieve an 835 Electronic Remittance Advice (ERA) in JSON format",
        "operationId": "ConvertReport835",
        "parameters": [
          {
            "description": "A unique identifier for the processed 835 transaction within Stedi. This ID is included in the transaction processed event, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve it through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within the Stedi portal.",
            "examples": {
              "ConvertReport835_example1": {
                "description": "",
                "summary": "Retrieve 835 ERA",
                "value": "d567c2ae-f073-4725-8b8c-06c473b738a6"
              }
            },
            "in": "path",
            "name": "transactionId",
            "required": true,
            "schema": {
              "description": "A unique identifier for the processed 835 transaction within Stedi. This ID is included in the transaction processed event, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve it through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within the Stedi portal.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ConvertReport835_example1": {
                    "description": "",
                    "summary": "Retrieve 835 ERA",
                    "value": {
                      "meta": {
                        "applicationMode": "production",
                        "senderId": "BSW",
                        "transactionId": "7647d644-9348-4596-a3b4-6830b8b48cc8"
                      },
                      "transactions": [
                        {
                          "controlNumber": "112233",
                          "detailInfo": [
                            {
                              "assignedNumber": "1",
                              "paymentInfo": [
                                {
                                  "claimPaymentInfo": {
                                    "claimFilingIndicatorCode": "12",
                                    "claimFrequencyCode": "1",
                                    "claimPaymentAmount": "500",
                                    "claimStatusCode": "1",
                                    "facilityTypeCode": "11",
                                    "patientControlNumber": "1112223333",
                                    "patientResponsibilityAmount": "300",
                                    "payerClaimControlNumber": "94060555410000",
                                    "totalClaimChargeAmount": "800"
                                  },
                                  "claimSupplementalInformation": {
                                    "coverageAmount": "800"
                                  },
                                  "patientName": {
                                    "firstName": "JOHN",
                                    "lastName": "DOE",
                                    "memberId": "1234567891"
                                  },
                                  "serviceLines": [
                                    {
                                      "lineItemControlNumber": "111222333",
                                      "serviceAdjustments": [
                                        {
                                          "adjustmentAmount1": "300",
                                          "adjustmentReason1": "Deductible Amount",
                                          "adjustmentReasonCode1": "1",
                                          "claimAdjustmentGroupCode": "PR",
                                          "claimAdjustmentGroupCodeValue": "Patient Responsibility"
                                        }
                                      ],
                                      "serviceDate": "20190301",
                                      "servicePaymentInformation": {
                                        "adjudicatedProcedureCode": "99211",
                                        "lineItemChargeAmount": "800",
                                        "lineItemProviderPaymentAmount": "500",
                                        "productOrServiceIDQualifier": "HC",
                                        "productOrServiceIDQualifierValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes"
                                      },
                                      "serviceSupplementalAmounts": {
                                        "allowedActual": "800"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "claimPaymentInfo": {
                                    "claimFilingIndicatorCode": "12",
                                    "claimFrequencyCode": "1",
                                    "claimPaymentAmount": "600",
                                    "claimStatusCode": "1",
                                    "facilityTypeCode": "11",
                                    "patientControlNumber": "22255566677",
                                    "patientResponsibilityAmount": "600",
                                    "payerClaimControlNumber": "9407779923000",
                                    "totalClaimChargeAmount": "1200"
                                  },
                                  "claimSupplementalInformation": {
                                    "coverageAmount": "1200"
                                  },
                                  "patientName": {
                                    "firstName": "JANE",
                                    "lastName": "DOE",
                                    "memberId": "1234567891"
                                  },
                                  "serviceLines": [
                                    {
                                      "serviceAdjustments": [
                                        {
                                          "adjustmentAmount1": "600",
                                          "adjustmentReason1": "Deductible Amount",
                                          "adjustmentReasonCode1": "1",
                                          "claimAdjustmentGroupCode": "PR",
                                          "claimAdjustmentGroupCodeValue": "Patient Responsibility"
                                        }
                                      ],
                                      "serviceDate": "20190310",
                                      "servicePaymentInformation": {
                                        "adjudicatedProcedureCode": "93555",
                                        "lineItemChargeAmount": "1200",
                                        "lineItemProviderPaymentAmount": "600",
                                        "productOrServiceIDQualifier": "HC",
                                        "productOrServiceIDQualifierValue": "Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes"
                                      },
                                      "serviceSupplementalAmounts": {
                                        "allowedActual": "1200"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "financialInformation": {
                            "checkIssueOrEFTEffectiveDate": "20190316",
                            "creditOrDebitFlagCode": "C",
                            "payerIdentifier": "000000000",
                            "paymentFormatCode": "CCP",
                            "paymentMethodCode": "ACH",
                            "receiverAccountDetails": {
                              "receiverAccountNumber": "144444",
                              "receiverAccountNumberQualifier": "DA",
                              "receiverDfiIdNumberQualifier": "01",
                              "receiverDfiIdentificationNumber": "111333555"
                            },
                            "senderAccountDetails": {
                              "senderAccountNumber": "11111111",
                              "senderAccountNumberQualifier": "DA",
                              "senderDFIIdentifier": "888999777",
                              "senderDfiIdNumberQualifier": "01"
                            },
                            "totalActualProviderPaymentAmount": "1100",
                            "transactionHandlingCode": "I"
                          },
                          "payee": {
                            "federalTaxPayersIdentificationNumber": "777667755",
                            "name": "ACME MEDICAL CENTER",
                            "npi": "1999999984"
                          },
                          "payer": {
                            "address": {
                              "address1": "10 SOUTH AVENUET",
                              "city": "NEW YORK",
                              "postalCode": "55111",
                              "state": "SD"
                            },
                            "name": "RUSHMORE LIFE",
                            "technicalContactInformation": [
                              {
                                "contactMethods": [
                                  {
                                    "phone": "8005550000"
                                  }
                                ],
                                "contactName": "JOHN DOE"
                              }
                            ]
                          },
                          "paymentAndRemitReassociationDetails": {
                            "checkOrEFTTraceNumber": "71700666555",
                            "originatingCompanyIdentifier": "1935665544",
                            "traceTypeCode": "1"
                          },
                          "productionDate": "20190314"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ConvertReport835ResponseContent"
                }
              }
            },
            "description": "ConvertReport835 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/coordination-of-benefits": {
      "post": {
        "description": "Submit a coordination of benefits (COB) check in JSON format",
        "operationId": "CoordinationOfBenefits",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "CoordinationOfBenefits_example1": {
                  "description": "",
                  "summary": "COB check for a dependent",
                  "value": {
                    "dependent": {
                      "dateOfBirth": "2002-12-31",
                      "firstName": "Jordan",
                      "lastName": "Doe"
                    },
                    "encounter": {
                      "dateOfService": "2024-08-02",
                      "serviceTypeCode": "30"
                    },
                    "provider": {
                      "npi": "1999999984",
                      "organizationName": "ACME Health Services"
                    },
                    "subscriber": {
                      "dateOfBirth": "1985-05-27",
                      "firstName": "John",
                      "lastName": "Doe",
                      "memberId": "W000000000"
                    },
                    "tradingPartnerServiceId": "SOMEID"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/CoordinationOfBenefitsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "CoordinationOfBenefits_example1": {
                    "description": "",
                    "summary": "COB check for a dependent",
                    "value": {
                      "benefitsInformation": [
                        {
                          "benefitsDateInformation": {
                            "benefitBegin": "2023-03-01"
                          },
                          "code": "1",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "1"
                          ],
                          "serviceTypes": [
                            "Medical Care"
                          ],
                          "subscriber": {
                            "dateOfBirth": "2002-02-27"
                          }
                        },
                        {
                          "benefitsDateInformation": {
                            "benefitBegin": "2023-03-01"
                          },
                          "code": "1",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "88"
                          ],
                          "serviceTypes": [
                            "Pharmacy"
                          ],
                          "subscriber": {
                            "dateOfBirth": "2002-02-27"
                          }
                        },
                        {
                          "benefitsDateInformation": {
                            "benefitBegin": "2023-03-01"
                          },
                          "code": "1",
                          "name": "Active Coverage",
                          "serviceTypeCodes": [
                            "AL"
                          ],
                          "serviceTypes": [
                            "Vision (Optometry)"
                          ],
                          "subscriber": {
                            "dateOfBirth": "2002-02-27"
                          }
                        },
                        {
                          "benefitsDateInformation": {
                            "coordinationOfBenefits": "2024-07-01"
                          },
                          "benefitsRelatedEntities": [
                            {
                              "entityIdentification": "PI",
                              "entityIdentificationValue": "1006",
                              "entityIdentifier": "Primary Payer",
                              "entityName": "CIGNA"
                            },
                            {
                              "entityFirstname": "JOHN",
                              "entityIdentification": "MI",
                              "entityIdentificationValue": "00000000000",
                              "entityIdentifier": "Insured or Subscriber",
                              "entityLastname": "DOE",
                              "entityMiddlename": "X"
                            }
                          ],
                          "code": "R",
                          "name": "Other or Additional Payor",
                          "serviceTypeCodes": [
                            "1"
                          ],
                          "serviceTypes": [
                            "Medical Care"
                          ],
                          "subscriber": {
                            "dateOfBirth": "2002-12-31"
                          }
                        }
                      ],
                      "coordinationOfBenefits": {
                        "benefitOverlap": true,
                        "classification": "CobInstanceExistsPrimacyDetermined",
                        "coverageOverlap": true,
                        "instanceExists": true,
                        "primacyDetermined": true
                      },
                      "dependent": {
                        "address": {
                          "address1": "1 MAIN ST.",
                          "city": "NEW YORK",
                          "postalCode": "10000",
                          "state": "NY"
                        },
                        "dateOfBirth": "2002-12-31",
                        "firstName": "JORDAN",
                        "gender": "M",
                        "lastName": "DOE",
                        "relationToSubscriber": "Child",
                        "relationToSubscriberCode": "19"
                      },
                      "errors": [],
                      "meta": {
                        "applicationMode": "production",
                        "outboundTraceId": "01JDQFT4W3KTWZNTADEZ55BFFX",
                        "traceId": "01JDQFT4W3KTWZNTADEZ55BFFX"
                      },
                      "payer": {
                        "name": "Aetna",
                        "payerIdentification": "AETNA-USH"
                      },
                      "provider": {
                        "npi": "1999999984",
                        "providerName": "ACME Health Services"
                      },
                      "subscriber": {
                        "address": {
                          "address1": "1 MAIN ST.",
                          "city": "NEW YORK",
                          "postalCode": "10000",
                          "state": "NY"
                        },
                        "firstName": "JOHN",
                        "lastName": "DOE",
                        "memberId": "W000000000"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CoordinationOfBenefitsResponseContent"
                }
              }
            },
            "description": "CoordinationOfBenefits 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoordinationOfBenefits400ErrorResponseContent"
                }
              }
            },
            "description": "CoordinationOfBenefits400Error 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/dental-claims/raw-x12-submission": {
      "post": {
        "description": "Submit an 837D dental claim in raw X12 EDI format",
        "operationId": "DentalClaimsRawX12Submission",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "DentalClaimsRawX12Submission_example1": {
                  "description": "",
                  "summary": "Submit dental claim - X12 EDI",
                  "value": {
                    "x12": "ISA*00*          *00*          *ZZ*001690149382   *ZZ*STEDITEST      *240630*0847*^*00501*000000001*0*T*>~GS*HC*001690149382*STEDITEST*20240630*084744*000000001*X*005010X224A2~ST*837*3456*005010X224A2~BHT*0019*00*0123*20061123*1023*CH~NM1*41*2*PREMIER BILLING SERVICE*****46*TGJ23~PER*IC*JERRY*TE*7176149999~NM1*40*2*INSURANCE COMPANY XYZ*****46*66783JJT~HL*1**20*1~NM1*85*2*DENTAL ASSOCIATES*****XX*1999999992~N3*234 SEAWAY ST~N4*MIAMI*FL*33111~REF*EI*587654321~HL*2*1*22*1~SBR*P********CI~NM1*IL*1*SMITH*JANE****MI*111223333~NM1*PR*2*INSURANCE COMPANY XYZ*****PI*66783JJT~HL*3*2*23*0~PAT*19~NM1*QC*1*SMITH*TED~N3*236 N MAIN ST~N4*MIAMI*FL*33413~DMG*D8*19920501*M~CLM*26403774*150***11>B>1*Y*A*Y*I~DTP*472*D8*20061029~REF*D9*17312345600006351~NM1*82*1*DOE*JOHN****XX*1999999992~PRV*PE*PXC*1223G0001X~LX*1~SV3*AD>D2150*100****1~TOO*JP*12*M>O~LX*2~SV3*AD>D1110*50****1~SE*31*3456~GE*1*000000001~IEA*1*000000001~"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/DentalClaimsRawX12SubmissionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "DentalClaimsRawX12Submission_example1": {
                    "description": "",
                    "summary": "Submit dental claim - X12 EDI",
                    "value": {
                      "claimReference": {
                        "correlationId": "01J1M588QT2TAV2N093GNJ998T",
                        "formatVersion": "5010",
                        "patientControlNumber": "22266555",
                        "payerID": "60054",
                        "rhclaimNumber": "01J1M588QT2TAV2N093GNJ998T",
                        "serviceLines": [
                          {
                            "lineItemControlNumber": "111222333"
                          }
                        ],
                        "timeOfResponse": "2024-07-10T22:05:32.203Z"
                      },
                      "controlNumber": "000000001",
                      "httpStatusCode": "200 OK",
                      "meta": {
                        "traceId": "b727b8e7-1f00-4011-bc6e-e41444d406d8"
                      },
                      "payer": {
                        "payerID": "60054",
                        "payerName": "Cigna"
                      },
                      "status": "SUCCESS",
                      "tradingPartnerServiceId": "60054"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DentalClaimsRawX12SubmissionResponseContent"
                }
              }
            },
            "description": "DentalClaimsRawX12Submission 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/dental-claims/submission": {
      "post": {
        "description": "Submit an 837D dental claim in JSON format",
        "operationId": "DentalClaimsSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "DentalClaimsSubmission_example1": {
                  "description": "",
                  "summary": "Submit dental claim - JSON",
                  "value": {
                    "billing": {
                      "address": {
                        "address1": "ABA Inc 123 Some St",
                        "city": "Denver",
                        "postalCode": "802383000",
                        "state": "CO"
                      },
                      "contactInformation": {
                        "name": "ABA Inc",
                        "phoneNumber": "3134893157"
                      },
                      "employerId": "123456789",
                      "npi": "1999999992",
                      "organizationName": "ABA Inc",
                      "providerType": "BillingProvider",
                      "taxonomyCode": "106S00000X"
                    },
                    "claimInformation": {
                      "benefitsAssignmentCertificationIndicator": "Y",
                      "claimChargeAmount": "832.00",
                      "claimFilingCode": "FI",
                      "claimFrequencyCode": "1",
                      "claimSupplementalInformation": {
                        "priorAuthorizationNumber": "20231010012345678"
                      },
                      "healthCareCodeInformation": [
                        {
                          "diagnosisCode": "K081",
                          "diagnosisTypeCode": "ABK"
                        }
                      ],
                      "patientControlNumber": "<YOUR-CLAIM-ID>",
                      "placeOfServiceCode": "12",
                      "planParticipationCode": "A",
                      "releaseInformationCode": "Y",
                      "serviceFacilityLocation": {
                        "address": {
                          "address1": "ABA Inc 123 Some St",
                          "city": "Denver",
                          "postalCode": "802383100",
                          "state": "CO"
                        },
                        "npi": "1999999992",
                        "organizationName": "ABA Inc",
                        "phoneNumber": "3131234567"
                      },
                      "serviceLines": [
                        {
                          "dentalService": {
                            "compositeDiagnosisCodePointers": {
                              "diagnosisCodePointers": [
                                "1"
                              ]
                            },
                            "lineItemChargeAmount": "832.00",
                            "oralCavityDesignation": [
                              "1",
                              "2"
                            ],
                            "placeOfServiceCode": "12",
                            "procedureCode": "D7140",
                            "procedureCount": 2,
                            "prosthesisCrownOrInlayCode": "I"
                          },
                          "providerControlNumber": "a0UDo000000dd2dMAA",
                          "renderingProvider": {
                            "firstName": "Jane",
                            "lastName": "Doe",
                            "npi": "1999999992",
                            "taxonomyCode": "122300000X"
                          },
                          "serviceDate": "20230428",
                          "teethInformation": [
                            {
                              "toothCode": "3",
                              "toothSurfaceCodes": [
                                "M",
                                "O"
                              ]
                            }
                          ]
                        }
                      ],
                      "signatureIndicator": "Y",
                      "toothStatus": [
                        {
                          "toothNumber": "3",
                          "toothStatusCode": "E"
                        }
                      ]
                    },
                    "payerAddress": {
                      "address1": "PO Box 7000",
                      "city": "Camden",
                      "postalCode": "29000",
                      "state": "SC"
                    },
                    "receiver": {
                      "organizationName": "United HealthCare Dental"
                    },
                    "rendering": {
                      "firstName": "Jane",
                      "lastName": "Doe",
                      "npi": "1999999992",
                      "providerType": "RenderingProvider",
                      "taxonomyCode": "106S00000X"
                    },
                    "submitter": {
                      "contactInformation": {
                        "name": "BILLING DEPARTMENT",
                        "phoneNumber": "3131234567"
                      },
                      "organizationName": "ABA Inc",
                      "submitterIdentification": "<YOUR-SUBMITTER-ID"
                    },
                    "subscriber": {
                      "address": {
                        "address1": "1234 Some St",
                        "city": "Buckeye",
                        "postalCode": "85326",
                        "state": "AZ"
                      },
                      "dateOfBirth": "20180615",
                      "firstName": "John",
                      "gender": "F",
                      "groupNumber": "1234567890",
                      "lastName": "Doe",
                      "memberId": "123412345",
                      "paymentResponsibilityLevelCode": "P"
                    },
                    "tradingPartnerName": "United HealthCare Dental",
                    "tradingPartnerServiceId": "52133",
                    "usageIndicator": "T"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/DentalClaimsSubmissionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "DentalClaimsSubmission_example1": {
                    "description": "",
                    "summary": "Submit dental claim - JSON",
                    "value": {
                      "claimReference": {
                        "correlationId": "01JDQMX92Q1T561BH8NKX750TQ",
                        "formatVersion": "5010",
                        "patientControlNumber": "0U1LBRS4",
                        "payerID": "52133",
                        "rhclaimNumber": "01JDQMX92Q1T561BH8NKX750TQ",
                        "serviceLines": [
                          {
                            "lineItemControlNumber": "a0UDo000000dd2dMAA"
                          }
                        ],
                        "timeOfResponse": "2024-11-27T20:27:27.077Z"
                      },
                      "controlNumber": "1",
                      "httpStatusCode": "200 OK",
                      "meta": {
                        "traceId": "9b491769-052e-4738-93d6-e0b5f6d83f53"
                      },
                      "payer": {
                        "payerID": "52133",
                        "payerName": "United HealthCare Dental"
                      },
                      "status": "SUCCESS",
                      "tradingPartnerServiceId": "52133"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DentalClaimsSubmissionResponseContent"
                }
              }
            },
            "description": "DentalClaimsSubmission 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/export/pdf": {
      "get": {
        "description": "Retrieve a Stedi generatedCMS-1500 Claim Form PDF for a submitted 837P (professional) claim by business identifier",
        "operationId": "ExportPDF",
        "parameters": [
          {
            "description": "The business identifier for the claim PDF you want to retrieve. This value is returned as the `claimReference.correlationId` in the synchronous response Stedi returns when you submit a professional claim.",
            "examples": {
              "ExportPDF_example1": {
                "description": "",
                "summary": "Retrieve PDF by business identifier",
                "value": "a10b1111-7233-484c-8dee-b240c590c767"
              }
            },
            "in": "query",
            "name": "businessId",
            "required": true,
            "schema": {
              "description": "The business identifier for the claim PDF you want to retrieve. This value is returned as the `claimReference.correlationId` in the synchronous response Stedi returns when you submit a professional claim.",
              "type": "string"
            }
          },
          {
            "description": "If false, the generated PDF will only contain the form data on a white background, suitable for printing on pre-printed forms. The default is true.",
            "in": "query",
            "name": "background",
            "schema": {
              "description": "If false, the generated PDF will only contain the form data on a white background, suitable for printing on pre-printed forms. The default is true.",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ExportPDF_example1": {
                    "description": "",
                    "summary": "Retrieve PDF by business identifier",
                    "value": {
                      "errors": [
                        {
                          "error": "No artifacts found for transaction",
                          "transactionId": "a10b3344-7288-484j-8dbb-b240c123c767"
                        }
                      ],
                      "pdfs": [
                        {
                          "data": "JVBERi0xLjcKJYGBgYEKCjcgMCBvYmoKPDwKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCAxMAo ...",
                          "transactionId": "a10b1111-7233-484c-8dee-b240c590c767"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExportPDFResponseContent"
                }
              }
            },
            "description": "ExportPDF 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportPDF400ErrorResponseContent"
                }
              }
            },
            "description": "ExportPDF400Error 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportPDF403ErrorResponseContent"
                }
              }
            },
            "description": "ExportPDF403Error 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportPDF404ErrorResponseContent"
                }
              }
            },
            "description": "ExportPDF404Error 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/export/{transactionId}/1500/pdf": {
      "get": {
        "description": "Retrieve the generated CMS-1500 Claim Form PDF for a submitted 837P professional claim",
        "operationId": "GetPDF1500",
        "parameters": [
          {
            "description": "A unique identifier for the processed claim within Stedi. This ID is included in the transaction processed event for the claim, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve this ID through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within Stedi.",
            "examples": {
              "GetPDF1500_example1": {
                "description": "",
                "summary": "Retrieve PDF by transaction ID",
                "value": "a10b1111-7233-484c-8dee-b240c590c767"
              }
            },
            "in": "path",
            "name": "transactionId",
            "required": true,
            "schema": {
              "description": "A unique identifier for the processed claim within Stedi. This ID is included in the transaction processed event for the claim, which you can receive automatically through Stedi [webhooks](https://www.stedi.com/docs/healthcare/configure-webhooks). You can also retrieve this ID through the [Poll Transactions endpoint](https://www.stedi.com/docs/api-reference/edi-platform/core/get-pollingtransactions) or from the transaction's details page within Stedi.",
              "type": "string"
            }
          },
          {
            "description": "If false, the generated PDF will only contain the form data on a white background, suitable for printing on pre-printed forms. The default is true.",
            "in": "query",
            "name": "background",
            "schema": {
              "description": "If false, the generated PDF will only contain the form data on a white background, suitable for printing on pre-printed forms. The default is true.",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "examples": {
                  "GetPDF1500_example1": {
                    "description": "",
                    "summary": "Retrieve PDF by transaction ID",
                    "value": "JVBERi0xLjcKJYGBgYEKCjcgMCBvYmoKPDwKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCAxMAo ..."
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetPDF1500OutputPayload"
                }
              }
            },
            "description": "GetPDF1500 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/insurance-discovery/check/v1": {
      "post": {
        "description": "Submit an insurance discovery check in JSON format",
        "operationId": "InsuranceDiscoveryCheck",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "InsuranceDiscoveryCheck_example1": {
                  "description": "",
                  "summary": "Insurance discovery check",
                  "value": {
                    "encounter": {
                      "beginningDateOfService": "20240326",
                      "endDateOfService": "20240326"
                    },
                    "provider": {
                      "npi": "1999999984"
                    },
                    "subscriber": {
                      "address": {
                        "address1": "123 Main St",
                        "city": "Springfield",
                        "postalCode": "62701",
                        "state": "IL"
                      },
                      "dateOfBirth": "19800101",
                      "firstName": "John",
                      "gender": "M",
                      "lastName": "Smith",
                      "middleName": "Robert",
                      "ssn": "123456789"
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/InsuranceDiscoveryCheckRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "InsuranceDiscoveryCheck_example1": {
                    "description": "",
                    "summary": "Insurance discovery check",
                    "value": {
                      "discoveryId": "12345678-abcd-4321-efgh-987654321abc",
                      "items": [
                        {
                          "benefitsInformation": [
                            {
                              "additionalInformation": [
                                {
                                  "description": "To determine if a prior authorization is required, please check the health plan's website."
                                }
                              ],
                              "benefitsRelatedEntities": [
                                {
                                  "entityFirstname": "Jane",
                                  "entityIdentification": "XX",
                                  "entityIdentificationValue": "1234567890",
                                  "entityIdentifier": "Primary Care Provider",
                                  "entityName": "Dough",
                                  "entityType": "Person"
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Not Applicable",
                              "inPlanNetworkIndicatorCode": "W",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Not Applicable",
                              "inPlanNetworkIndicatorCode": "W",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "1"
                              ],
                              "serviceTypes": [
                                "Medical Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "5"
                              ],
                              "serviceTypes": [
                                "Diagnostic Lab"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "20",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "5"
                              ],
                              "serviceTypes": [
                                "Diagnostic Lab"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "5"
                              ],
                              "serviceTypes": [
                                "Diagnostic Lab"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "12"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Purchase"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "12"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Purchase"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "12"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Purchase"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "13"
                              ],
                              "serviceTypes": [
                                "Ambulatory Service Center Facility"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "13"
                              ],
                              "serviceTypes": [
                                "Ambulatory Service Center Facility"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "13"
                              ],
                              "serviceTypes": [
                                "Ambulatory Service Center Facility"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "18"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Rental"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "18"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Rental"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "18"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Rental"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Limited to 26 visits per year (visits in excess of 26 require prior authorization)."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "33"
                              ],
                              "serviceTypes": [
                                "Chiropractic"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "33"
                              ],
                              "serviceTypes": [
                                "Chiropractic"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "33"
                              ],
                              "serviceTypes": [
                                "Chiropractic"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "48"
                              ],
                              "serviceTypes": [
                                "Hospital - Inpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "48"
                              ],
                              "serviceTypes": [
                                "Hospital - Inpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "48"
                              ],
                              "serviceTypes": [
                                "Hospital - Inpatient"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "50"
                              ],
                              "serviceTypes": [
                                "Hospital - Outpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "50"
                              ],
                              "serviceTypes": [
                                "Hospital - Outpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "50"
                              ],
                              "serviceTypes": [
                                "Hospital - Outpatient"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "53"
                              ],
                              "serviceTypes": [
                                "Hospital - Ambulatory Surgical"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "53"
                              ],
                              "serviceTypes": [
                                "Hospital - Ambulatory Surgical"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "53"
                              ],
                              "serviceTypes": [
                                "Hospital - Ambulatory Surgical"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "62"
                              ],
                              "serviceTypes": [
                                "MRI/CAT Scan"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "62"
                              ],
                              "serviceTypes": [
                                "MRI/CAT Scan"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "62"
                              ],
                              "serviceTypes": [
                                "MRI/CAT Scan"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "65"
                              ],
                              "serviceTypes": [
                                "Newborn Care"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "65"
                              ],
                              "serviceTypes": [
                                "Newborn Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "65"
                              ],
                              "serviceTypes": [
                                "Newborn Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered in accordance with ACA guidelines."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "68"
                              ],
                              "serviceTypes": [
                                "Well Baby Care"
                              ]
                            },
                            {
                              "benefitAmount": "0",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "68"
                              ],
                              "serviceTypes": [
                                "Well Baby Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "68"
                              ],
                              "serviceTypes": [
                                "Well Baby Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "69"
                              ],
                              "serviceTypes": [
                                "Maternity"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "69"
                              ],
                              "serviceTypes": [
                                "Maternity"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "69"
                              ],
                              "serviceTypes": [
                                "Maternity"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "88"
                              ],
                              "serviceTypes": [
                                "Pharmacy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per prescription"
                                }
                              ],
                              "benefitAmount": "10",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "88"
                              ],
                              "serviceTypes": [
                                "Pharmacy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "88"
                              ],
                              "serviceTypes": [
                                "Pharmacy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "PCP"
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                },
                                {
                                  "description": "PCP"
                                }
                              ],
                              "benefitAmount": "15",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "PCP"
                                }
                              ],
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Specialist"
                                },
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                },
                                {
                                  "description": "Specialist"
                                }
                              ],
                              "benefitAmount": "30",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Specialist"
                                }
                              ],
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit. (Primary Care Provider (PCP) and other practitioner office visits do not require prior authorization.) Note| Services (excluding Emergency Room Care / Emergency Services) rendered by an out-of-network provider"
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A4"
                              ],
                              "serviceTypes": [
                                "Psychiatric"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A4"
                              ],
                              "serviceTypes": [
                                "Psychiatric"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A4"
                              ],
                              "serviceTypes": [
                                "Psychiatric"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A6"
                              ],
                              "serviceTypes": [
                                "Psychotherapy"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A6"
                              ],
                              "serviceTypes": [
                                "Psychotherapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A6"
                              ],
                              "serviceTypes": [
                                "Psychotherapy"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A7"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A7"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A7"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AD"
                              ],
                              "serviceTypes": [
                                "Occupational Therapy"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AD"
                              ],
                              "serviceTypes": [
                                "Occupational Therapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AD"
                              ],
                              "serviceTypes": [
                                "Occupational Therapy"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AF"
                              ],
                              "serviceTypes": [
                                "Speech Therapy"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AF"
                              ],
                              "serviceTypes": [
                                "Speech Therapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AF"
                              ],
                              "serviceTypes": [
                                "Speech Therapy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Limited to 150 days per year."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AG"
                              ],
                              "serviceTypes": [
                                "Skilled Nursing Care"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AG"
                              ],
                              "serviceTypes": [
                                "Skilled Nursing Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AG"
                              ],
                              "serviceTypes": [
                                "Skilled Nursing Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered in accordance with ACA guidelines."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "BZ"
                              ],
                              "serviceTypes": [
                                "Physician Visit - Office: Well"
                              ]
                            },
                            {
                              "benefitAmount": "0",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "BZ"
                              ],
                              "serviceTypes": [
                                "Physician Visit - Office: Well"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "BZ"
                              ],
                              "serviceTypes": [
                                "Physician Visit - Office: Well"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "PT"
                              ],
                              "serviceTypes": [
                                "Physical Therapy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "15",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "PT"
                              ],
                              "serviceTypes": [
                                "Physical Therapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "PT"
                              ],
                              "serviceTypes": [
                                "Physical Therapy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "10",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "10",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "3000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "2000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "6000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "5000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            }
                          ],
                          "confidence": {
                            "level": "REVIEW_NEEDED",
                            "reason": "This record was identified as a low confidence match due to a DOB partial match"
                          },
                          "payer": {
                            "name": "EXAMPLE INSURANCE CO"
                          },
                          "planDateInformation": {
                            "eligibilityBegin": "20250101",
                            "planBegin": "20250101",
                            "service": "20250301"
                          },
                          "planInformation": {
                            "groupDescription": "Individual On-Exchange",
                            "groupNumber": "123456-78",
                            "planNumber": "123456-EXMPL9876"
                          },
                          "provider": {
                            "entityType": "Non-Person Entity",
                            "npi": "1999999984",
                            "providerName": "provider"
                          },
                          "subscriber": {
                            "address": {
                              "address1": "123 Main Street",
                              "city": "ANYTOWN",
                              "postalCode": "12345",
                              "state": "CA"
                            },
                            "dateOfBirth": "19900115",
                            "firstName": "John",
                            "gender": "M",
                            "groupDescription": "Individual On-Exchange",
                            "groupNumber": "123456-78",
                            "lastName": "Doe",
                            "memberId": "987654321000",
                            "middleName": "Smith",
                            "planNumber": "123456-EXMPL9876"
                          }
                        }
                      ],
                      "meta": {
                        "applicationMode": "production",
                        "traceId": "1-abcdef12-123456789abcdef123456789"
                      },
                      "status": "COMPLETE"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/InsuranceDiscoveryCheckResponseContent"
                }
              }
            },
            "description": "InsuranceDiscoveryCheck 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/insurance-discovery/check/v1/{discoveryId}": {
      "get": {
        "description": "Retrieve insurance discovery check results by `discoveryId`",
        "operationId": "GetInsuranceDiscoveryCheck",
        "parameters": [
          {
            "description": "The unique ID for the insurance discovery check. Stedi returns this value in the response from the [Insurance Discovery Check](https://www.stedi.com/docs/api-reference/healthcare/post-insurance-discovery) endpoint.",
            "examples": {
              "GetInsuranceDiscoveryCheck_example1": {
                "description": "",
                "summary": "Poll for insurance discovery check results",
                "value": "12345678-abcd-4321-efgh-987654321abc"
              }
            },
            "in": "path",
            "name": "discoveryId",
            "required": true,
            "schema": {
              "description": "The unique ID for the insurance discovery check. Stedi returns this value in the response from the [Insurance Discovery Check](https://www.stedi.com/docs/api-reference/healthcare/post-insurance-discovery) endpoint.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "GetInsuranceDiscoveryCheck_example1": {
                    "description": "",
                    "summary": "Poll for insurance discovery check results",
                    "value": {
                      "discoveryId": "12345678-abcd-4321-efgh-987654321abc",
                      "items": [
                        {
                          "benefitsInformation": [
                            {
                              "additionalInformation": [
                                {
                                  "description": "To determine if a prior authorization is required, please check the health plan's website."
                                }
                              ],
                              "benefitsRelatedEntities": [
                                {
                                  "entityFirstname": "Jane",
                                  "entityIdentification": "XX",
                                  "entityIdentificationValue": "1234567890",
                                  "entityIdentifier": "Primary Care Provider",
                                  "entityName": "Dough",
                                  "entityType": "Person"
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Not Applicable",
                              "inPlanNetworkIndicatorCode": "W",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Not Applicable",
                              "inPlanNetworkIndicatorCode": "W",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "1"
                              ],
                              "serviceTypes": [
                                "Medical Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "4"
                              ],
                              "serviceTypes": [
                                "Diagnostic X-Ray"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "5"
                              ],
                              "serviceTypes": [
                                "Diagnostic Lab"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "20",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "5"
                              ],
                              "serviceTypes": [
                                "Diagnostic Lab"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "5"
                              ],
                              "serviceTypes": [
                                "Diagnostic Lab"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "12"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Purchase"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "12"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Purchase"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "12"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Purchase"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "13"
                              ],
                              "serviceTypes": [
                                "Ambulatory Service Center Facility"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "13"
                              ],
                              "serviceTypes": [
                                "Ambulatory Service Center Facility"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "13"
                              ],
                              "serviceTypes": [
                                "Ambulatory Service Center Facility"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "18"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Rental"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "18"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Rental"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "18"
                              ],
                              "serviceTypes": [
                                "Durable Medical Equipment Rental"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Limited to 26 visits per year (visits in excess of 26 require prior authorization)."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "33"
                              ],
                              "serviceTypes": [
                                "Chiropractic"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "33"
                              ],
                              "serviceTypes": [
                                "Chiropractic"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "33"
                              ],
                              "serviceTypes": [
                                "Chiropractic"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "48"
                              ],
                              "serviceTypes": [
                                "Hospital - Inpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "48"
                              ],
                              "serviceTypes": [
                                "Hospital - Inpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "48"
                              ],
                              "serviceTypes": [
                                "Hospital - Inpatient"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "50"
                              ],
                              "serviceTypes": [
                                "Hospital - Outpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "50"
                              ],
                              "serviceTypes": [
                                "Hospital - Outpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "50"
                              ],
                              "serviceTypes": [
                                "Hospital - Outpatient"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "51"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Accident"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "52"
                              ],
                              "serviceTypes": [
                                "Hospital - Emergency Medical"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "53"
                              ],
                              "serviceTypes": [
                                "Hospital - Ambulatory Surgical"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "53"
                              ],
                              "serviceTypes": [
                                "Hospital - Ambulatory Surgical"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "53"
                              ],
                              "serviceTypes": [
                                "Hospital - Ambulatory Surgical"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "62"
                              ],
                              "serviceTypes": [
                                "MRI/CAT Scan"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "62"
                              ],
                              "serviceTypes": [
                                "MRI/CAT Scan"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "62"
                              ],
                              "serviceTypes": [
                                "MRI/CAT Scan"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "65"
                              ],
                              "serviceTypes": [
                                "Newborn Care"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "65"
                              ],
                              "serviceTypes": [
                                "Newborn Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "65"
                              ],
                              "serviceTypes": [
                                "Newborn Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered in accordance with ACA guidelines."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "68"
                              ],
                              "serviceTypes": [
                                "Well Baby Care"
                              ]
                            },
                            {
                              "benefitAmount": "0",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "68"
                              ],
                              "serviceTypes": [
                                "Well Baby Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "68"
                              ],
                              "serviceTypes": [
                                "Well Baby Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "69"
                              ],
                              "serviceTypes": [
                                "Maternity"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "69"
                              ],
                              "serviceTypes": [
                                "Maternity"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "69"
                              ],
                              "serviceTypes": [
                                "Maternity"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "86"
                              ],
                              "serviceTypes": [
                                "Emergency Services"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "88"
                              ],
                              "serviceTypes": [
                                "Pharmacy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per prescription"
                                }
                              ],
                              "benefitAmount": "10",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "88"
                              ],
                              "serviceTypes": [
                                "Pharmacy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "88"
                              ],
                              "serviceTypes": [
                                "Pharmacy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "PCP"
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                },
                                {
                                  "description": "PCP"
                                }
                              ],
                              "benefitAmount": "15",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "PCP"
                                }
                              ],
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Specialist"
                                },
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                },
                                {
                                  "description": "Specialist"
                                }
                              ],
                              "benefitAmount": "30",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Specialist"
                                }
                              ],
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "98"
                              ],
                              "serviceTypes": [
                                "Professional (Physician) Visit - Office"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit. (Primary Care Provider (PCP) and other practitioner office visits do not require prior authorization.) Note| Services (excluding Emergency Room Care / Emergency Services) rendered by an out-of-network provider"
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A4"
                              ],
                              "serviceTypes": [
                                "Psychiatric"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A4"
                              ],
                              "serviceTypes": [
                                "Psychiatric"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A4"
                              ],
                              "serviceTypes": [
                                "Psychiatric"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A6"
                              ],
                              "serviceTypes": [
                                "Psychotherapy"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A6"
                              ],
                              "serviceTypes": [
                                "Psychotherapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A6"
                              ],
                              "serviceTypes": [
                                "Psychotherapy"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A7"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A7"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A7"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Inpatient"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "A8"
                              ],
                              "serviceTypes": [
                                "Psychiatric - Outpatient"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AD"
                              ],
                              "serviceTypes": [
                                "Occupational Therapy"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AD"
                              ],
                              "serviceTypes": [
                                "Occupational Therapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AD"
                              ],
                              "serviceTypes": [
                                "Occupational Therapy"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AF"
                              ],
                              "serviceTypes": [
                                "Speech Therapy"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AF"
                              ],
                              "serviceTypes": [
                                "Speech Therapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AF"
                              ],
                              "serviceTypes": [
                                "Speech Therapy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Limited to 150 days per year."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AG"
                              ],
                              "serviceTypes": [
                                "Skilled Nursing Care"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AG"
                              ],
                              "serviceTypes": [
                                "Skilled Nursing Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "AG"
                              ],
                              "serviceTypes": [
                                "Skilled Nursing Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered in accordance with ACA guidelines."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "BZ"
                              ],
                              "serviceTypes": [
                                "Physician Visit - Office: Well"
                              ]
                            },
                            {
                              "benefitAmount": "0",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "BZ"
                              ],
                              "serviceTypes": [
                                "Physician Visit - Office: Well"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "BZ"
                              ],
                              "serviceTypes": [
                                "Physician Visit - Office: Well"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Prior authorization may be required. Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ]
                            },
                            {
                              "benefitPercent": "0.5",
                              "code": "A",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Insurance",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "MH"
                              ],
                              "serviceTypes": [
                                "Mental Health"
                              ]
                            },
                            {
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "PT"
                              ],
                              "serviceTypes": [
                                "Physical Therapy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "15",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "PT"
                              ],
                              "serviceTypes": [
                                "Physical Therapy"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "code": "I",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Non-Covered",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "PT"
                              ],
                              "serviceTypes": [
                                "Physical Therapy"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "10",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "Covered No Limit."
                                }
                              ],
                              "code": "1",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Active Coverage",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ]
                            },
                            {
                              "additionalInformation": [
                                {
                                  "description": "per visit"
                                }
                              ],
                              "benefitAmount": "10",
                              "code": "B",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Co-Payment",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "UC"
                              ],
                              "serviceTypes": [
                                "Urgent Care"
                              ],
                              "timeQualifier": "Visit",
                              "timeQualifierCode": "27"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "C",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Deductible",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "3000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "2000",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "6000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "5000",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "Yes",
                              "inPlanNetworkIndicatorCode": "Y",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Individual",
                              "coverageLevelCode": "IND",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Calendar Year",
                              "timeQualifierCode": "23"
                            },
                            {
                              "benefitAmount": "0",
                              "code": "G",
                              "coverageLevel": "Family",
                              "coverageLevelCode": "FAM",
                              "inPlanNetworkIndicator": "No",
                              "inPlanNetworkIndicatorCode": "N",
                              "name": "Out of Pocket (Stop Loss)",
                              "planCoverage": "Gold Plan",
                              "serviceTypeCodes": [
                                "30"
                              ],
                              "serviceTypes": [
                                "Health Benefit Plan Coverage"
                              ],
                              "timeQualifier": "Remaining",
                              "timeQualifierCode": "29"
                            }
                          ],
                          "confidence": {
                            "level": "REVIEW_NEEDED",
                            "reason": "This record was identified as a low confidence match due to a DOB partial match"
                          },
                          "payer": {
                            "name": "EXAMPLE INSURANCE CO"
                          },
                          "planDateInformation": {
                            "eligibilityBegin": "20250101",
                            "planBegin": "20250101",
                            "service": "20250301"
                          },
                          "planInformation": {
                            "groupDescription": "Individual On-Exchange",
                            "groupNumber": "123456-78",
                            "planNumber": "123456-EXMPL9876"
                          },
                          "provider": {
                            "entityType": "Non-Person Entity",
                            "npi": "1999999984",
                            "providerName": "provider"
                          },
                          "subscriber": {
                            "address": {
                              "address1": "123 Main Street",
                              "city": "ANYTOWN",
                              "postalCode": "12345",
                              "state": "CA"
                            },
                            "dateOfBirth": "19900115",
                            "firstName": "John",
                            "gender": "M",
                            "groupDescription": "Individual On-Exchange",
                            "groupNumber": "123456-78",
                            "lastName": "Doe",
                            "memberId": "987654321000",
                            "middleName": "Smith",
                            "planNumber": "123456-EXMPL9876"
                          }
                        }
                      ],
                      "meta": {
                        "applicationMode": "production",
                        "traceId": "1-abcdef12-123456789abcdef123456789"
                      },
                      "status": "COMPLETE"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetInsuranceDiscoveryCheckResponseContent"
                }
              }
            },
            "description": "GetInsuranceDiscoveryCheck 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/payer/{stediId}": {
      "get": {
        "description": "Retrieve a single payer record by its Stedi payer ID.",
        "operationId": "GetPayerRecord",
        "parameters": [
          {
            "description": "The Stedi payer ID, a unique identifier Stedi assigns to each payer that will never change. You can find the Stedi payer ID for any supported payer in the [Payer Network](https://www.stedi.com/healthcare/network).\n\nThis must be the Stedi payer ID - querying with the primary payer ID or payer ID aliases isn't supported.",
            "examples": {
              "GetPayerRecord_example1": {
                "description": "",
                "summary": "Retrieve a payer record",
                "value": "KRPCH"
              }
            },
            "in": "path",
            "name": "stediId",
            "required": true,
            "schema": {
              "description": "The Stedi payer ID, a unique identifier Stedi assigns to each payer that will never change. You can find the Stedi payer ID for any supported payer in the [Payer Network](https://www.stedi.com/healthcare/network).\n\nThis must be the Stedi payer ID - querying with the primary payer ID or payer ID aliases isn't supported.",
              "pattern": "^[A-Z]{5}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "GetPayerRecord_example1": {
                    "description": "",
                    "summary": "Retrieve a payer record",
                    "value": {
                      "payer": {
                        "aliases": [
                          "00210I",
                          "00710",
                          "00710D",
                          "00710P",
                          "1421",
                          "2287",
                          "2426",
                          "710",
                          "CBMI1",
                          "MIBCSI",
                          "MIBCSP",
                          "SB710",
                          "Z1380"
                        ],
                        "coverageTypes": [
                          "dental",
                          "medical"
                        ],
                        "displayName": "Blue Cross Blue Shield of Michigan",
                        "enrollment": {
                          "ptanRequired": false,
                          "transactionEnrollmentProcesses": {
                            "claimPayment": {
                              "type": "ONE_CLICK"
                            }
                          }
                        },
                        "names": [
                          "Blue Cross Blue Shield Michigan Dental",
                          "Blue Cross Blue Shield Michigan Institutional",
                          "Blue Cross Blue Shield Michigan Professional"
                        ],
                        "parentPayerGroupId": "AWOCR",
                        "primaryPayerId": "00710",
                        "stediId": "KRPCH",
                        "transactionSupport": {
                          "claimPayment": "ENROLLMENT_REQUIRED",
                          "claimStatus": "SUPPORTED",
                          "claimSubmission": "SUPPORTED",
                          "coordinationOfBenefits": "SUPPORTED",
                          "dentalClaimSubmission": "NOT_SUPPORTED",
                          "eligibilityCheck": "SUPPORTED",
                          "institutionalClaimSubmission": "SUPPORTED",
                          "professionalClaimSubmission": "SUPPORTED",
                          "unsolicitedClaimAttachment": "NOT_SUPPORTED"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GetPayerRecordResponseContent"
                }
              }
            },
            "description": "GetPayerRecord 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/payers": {
      "get": {
        "description": "List Stedi's supported payers in JSON format",
        "operationId": "ListPayerRecords",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "ListPayerRecords_example1": {
                    "description": "",
                    "summary": "List payers - JSON",
                    "value": {
                      "items": [
                        {
                          "aliases": [
                            "1411",
                            "560894904",
                            "61473",
                            "7472",
                            "7814",
                            "BCSNC",
                            "NCBCBS",
                            "NCPNHP",
                            "SB810",
                            "SB810MA"
                          ],
                          "coverageTypes": [
                            "dental",
                            "medical"
                          ],
                          "displayName": "Blue Cross Blue Shield of North Carolina",
                          "employerIdentificationNumbers": [
                            "56-0894904"
                          ],
                          "names": [
                            "Blue Cross Blue Shield North Carolina",
                            "Partners National Health Plans of North Carolina Inc"
                          ],
                          "parentPayerGroupId": "OVWIG",
                          "primaryPayerId": "BCSNC",
                          "stediId": "UPICO",
                          "transactionSupport": {
                            "claimPayment": "ENROLLMENT_REQUIRED",
                            "claimStatus": "SUPPORTED",
                            "claimSubmission": "SUPPORTED",
                            "coordinationOfBenefits": "SUPPORTED",
                            "dentalClaimSubmission": "SUPPORTED",
                            "eligibilityCheck": "SUPPORTED",
                            "institutionalClaimSubmission": "SUPPORTED",
                            "professionalClaimSubmission": "SUPPORTED",
                            "unsolicitedClaimAttachment": "NOT_SUPPORTED"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListPayerRecordsResponseContent"
                }
              }
            },
            "description": "ListPayerRecords 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/payers/csv": {
      "get": {
        "description": "List Stedi's supported payers in CSV format",
        "operationId": "ListPayerRecordsCsv",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "examples": {
                  "ListPayerRecordsCsv_example1": {
                    "description": "",
                    "summary": "List payers - CSV",
                    "value": "\"StediId\",\"PrimaryPayerId\",\"DisplayName\",\"Names\",\"Aliases\",\"EligibilityInquiry\",\"EligibilityInquiryEnrollmentRequired\",\"EligibilityInquiryEnrollmentType\",\"EligibilityInquiryEnrollmentTimeframe\",\"ClaimStatusInquiry\",\"ClaimStatusInquiryEnrollmentRequired\",\"ClaimStatusInquiryEnrollmentType\",\"ClaimStatusInquiryEnrollmentTimeframe\",\"ProfessionalClaim\",\"ProfessionalClaimEnrollmentRequired\",\"ProfessionalClaimEnrollmentType\",\"ProfessionalClaimEnrollmentTimeframe\",\"InstitutionalClaim\",\"InstitutionalClaimEnrollmentRequired\",\"InstitutionalClaimEnrollmentType\",\"InstitutionalClaimEnrollmentTimeframe\",\"DentalClaim\",\"DentalClaimEnrollmentRequired\",\"DentalClaimEnrollmentType\",\"DentalClaimEnrollmentTimeframe\",\"ClaimPaymentAdvice\",\"ClaimPaymentAdviceEnrollmentRequired\",\"ClaimPaymentEnrollmentType\",\"ClaimPaymentEnrollmentTimeframe\",\"CoordinationOfBenefits\",\"CoordinationOfBenefitsEnrollmentRequired\",\"CoordinationOfBenefitsEnrollmentType\",\"CoordinationOfBenefitsEnrollmentTimeframe\",\"ClaimAttachmentsSupport\",\"ClaimAttachmentsSupportEnrollmentRequired\",\"ClaimAttachmentEnrollmentType\",\"ClaimAttachmentEnrollmentTimeframe\",\"EmployerIdentificationNumbers\",\"CoverageTypes\",\"PtanRequired\",\"ParentPayerGroupId\"\n\"UPICO\",\"BCSNC\",\"Blue Cross Blue Shield of North Carolina\",\"Blue Cross Blue Shield North Carolina|Partners National Health Plans of North Carolina Inc\",\"1411|560894904|61472|61473|7472|7514|7814|BCSNC|NCBCBS|NCPNHP|SB810|SB810MA\",\"true\",\"false\",\"\",\"\",\"true\",\"false\",\"\",\"\",\"true\",\"false\",\"\",\"\",\"true\",\"false\",\"\",\"\",\"true\",\"false\",\"\",\"\",\"true\",\"true\",\"\",\"\",\"true\",\"false\",\"\",\"\",\"false\",\"false\",\"\",\"\",\"56-0894904\",\"dental|medical\",\"false\",\"OVWIG\""
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListPayerRecordsCsvOutputPayload"
                }
              }
            },
            "description": "ListPayerRecordsCsv 200 response",
            "headers": {
              "Content-Type": {
                "description": "Content type for CSV data",
                "schema": {
                  "description": "Content type for CSV data",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    },
    "/payers/search": {
      "get": {
        "description": "Search for payers by name, ID, or alias.",
        "operationId": "SearchPayers",
        "parameters": [
          {
            "description": "The maximum number of elements to return in a page. If not specified, the default is 20.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "description": "The maximum number of elements to return in a page. If not specified, the default is 20.",
              "maximum": 100,
              "minimum": 10,
              "type": "number"
            }
          },
          {
            "description": "An opaque token returned by a previous call to this endpoint in the `nextPageToken` property. You can use it to request the next page of results. If not specified, Stedi returns the first page of results.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "description": "An opaque token returned by a previous call to this endpoint in the `nextPageToken` property. You can use it to request the next page of results. If not specified, Stedi returns the first page of results.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "The query Stedi will use to search the Payer Network database. You can supply a payer's name, ID, or alias. The query is case-insensitive, and fuzzy matching is supported. For example, `cig`, `62308`, and `SX071` all return Cigna in the results. If not provided, the other search options are used to conduct the search.",
            "examples": {
              "SearchPayers_example1": {
                "description": "",
                "summary": "Basic Search",
                "value": "Blue Cross"
              },
              "SearchPayers_example2": {
                "description": "",
                "summary": "Search with multiple transaction filters (AND logic)",
                "value": "Blue Cross"
              }
            },
            "in": "query",
            "name": "query",
            "schema": {
              "description": "The query Stedi will use to search the Payer Network database. You can supply a payer's name, ID, or alias. The query is case-insensitive, and fuzzy matching is supported. For example, `cig`, `62308`, and `SX071` all return Cigna in the results. If not provided, the other search options are used to conduct the search.",
              "type": "string"
            }
          },
          {
            "description": "Filter for matching payers with the specified 270 eligibility checks support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "examples": {
              "SearchPayers_example2": {
                "description": "",
                "summary": "Search with multiple transaction filters (AND logic)",
                "value": "SUPPORTED"
              }
            },
            "in": "query",
            "name": "eligibilityCheck",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified 276/277 real-time claim status checks support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "examples": {
              "SearchPayers_example2": {
                "description": "",
                "summary": "Search with multiple transaction filters (AND logic)",
                "value": "SUPPORTED"
              }
            },
            "in": "query",
            "name": "claimStatus",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified 837 professional claims support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "in": "query",
            "name": "professionalClaimSubmission",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified 837 dental claims support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "in": "query",
            "name": "dentalClaimSubmission",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified 837 institutional claims support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "in": "query",
            "name": "institutionalClaimSubmission",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified 835 Electronic Remittance Advice (ERA) support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "in": "query",
            "name": "claimPayment",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified coordination of benefits (COB) checks support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "in": "query",
            "name": "coordinationOfBenefits",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers with the specified unsolicited 275 claim attachments support. When combined with other transaction filters, payers must satisfy **all** specified criteria to be included in results.",
            "in": "query",
            "name": "unsolicitedClaimAttachment",
            "schema": {
              "$ref": "#/components/schemas/TransactionFilterValue"
            }
          },
          {
            "description": "Filter for matching payers that support transactions for **all** of the specified coverage types. For example, setting this array to `[\"medical\", \"dental\"]` returns only payers who provide both medical and dental coverage.\n\nThe results also exclude payers without coverage type classifications in Stedi's database.",
            "explode": true,
            "in": "query",
            "name": "coverageTypes",
            "schema": {
              "description": "Filter for matching payers that support transactions for **all** of the specified coverage types. For example, setting this array to `[\"medical\", \"dental\"]` returns only payers who provide both medical and dental coverage.\n\nThe results also exclude payers without coverage type classifications in Stedi's database.",
              "items": {
                "$ref": "#/components/schemas/CoverageType"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "SearchPayers_example1": {
                    "description": "",
                    "summary": "Basic Search",
                    "value": {
                      "items": [
                        {
                          "matches": {
                            "aliases": [
                              "<b>00710</b>"
                            ],
                            "displayName": "<b>Blue Cross Blue</b> Shield of Michigan",
                            "names": [
                              "<b>Blue Cross Blue</b> Shield Michigan Dental",
                              "<b>Blue Cross Blue</b> Shield Michigan Institutional",
                              "<b>Blue Cross Blue</b> Shield Michigan Professional"
                            ],
                            "stediId": "<b>KRP</b>CH"
                          },
                          "payer": {
                            "aliases": [
                              "00210I",
                              "00710",
                              "00710D",
                              "00710P",
                              "1421",
                              "2287",
                              "2426",
                              "710",
                              "CBMI1",
                              "MIBCSI",
                              "MIBCSP",
                              "SB710",
                              "Z1380"
                            ],
                            "coverageTypes": [
                              "dental",
                              "medical"
                            ],
                            "displayName": "Blue Cross Blue Shield of Michigan",
                            "enrollment": {
                              "ptanRequired": false,
                              "transactionEnrollmentProcesses": {
                                "claimPayment": {
                                  "type": "ONE_CLICK"
                                }
                              }
                            },
                            "names": [
                              "Blue Cross Blue Shield Michigan Dental",
                              "Blue Cross Blue Shield Michigan Institutional",
                              "Blue Cross Blue Shield Michigan Professional"
                            ],
                            "parentPayerGroupId": "AWOCR",
                            "primaryPayerId": "00710",
                            "stediId": "KRPCH",
                            "transactionSupport": {
                              "claimPayment": "ENROLLMENT_REQUIRED",
                              "claimStatus": "SUPPORTED",
                              "coordinationOfBenefits": "SUPPORTED",
                              "dentalClaimSubmission": "NOT_SUPPORTED",
                              "eligibilityCheck": "SUPPORTED",
                              "institutionalClaimSubmission": "SUPPORTED",
                              "professionalClaimSubmission": "SUPPORTED",
                              "unsolicitedClaimAttachment": "NOT_SUPPORTED"
                            }
                          },
                          "score": 1157451437081362400
                        }
                      ],
                      "stats": {
                        "total": 100,
                        "transactionSupport": {
                          "claimPayment": {
                            "enrollmentRequired": 35,
                            "notSupported": 20,
                            "supported": 45
                          },
                          "claimStatus": {
                            "enrollmentRequired": 5,
                            "notSupported": 3,
                            "supported": 92
                          },
                          "coordinationOfBenefits": {
                            "enrollmentRequired": 10,
                            "notSupported": 25,
                            "supported": 65
                          },
                          "dentalClaimSubmission": {
                            "enrollmentRequired": 10,
                            "notSupported": 20,
                            "supported": 70
                          },
                          "eligibilityCheck": {
                            "enrollmentRequired": 5,
                            "notSupported": 8,
                            "supported": 87
                          },
                          "institutionalClaimSubmission": {
                            "enrollmentRequired": 10,
                            "notSupported": 15,
                            "supported": 75
                          },
                          "professionalClaimSubmission": {
                            "enrollmentRequired": 5,
                            "notSupported": 10,
                            "supported": 85
                          },
                          "unsolicitedClaimAttachment": {
                            "enrollmentRequired": 10,
                            "notSupported": 35,
                            "supported": 55
                          }
                        },
                        "transactionSupportCounts": {
                          "claimPayment": {
                            "notSupported": {
                              "total": 20
                            },
                            "supported": {
                              "enrollmentNotRequired": 45,
                              "enrollmentRequired": 35,
                              "total": 80
                            }
                          },
                          "claimStatus": {
                            "notSupported": {
                              "total": 3
                            },
                            "supported": {
                              "enrollmentNotRequired": 92,
                              "enrollmentRequired": 5,
                              "total": 97
                            }
                          },
                          "coordinationOfBenefits": {
                            "notSupported": {
                              "total": 25
                            },
                            "supported": {
                              "enrollmentNotRequired": 65,
                              "enrollmentRequired": 10,
                              "total": 75
                            }
                          },
                          "dentalClaimSubmission": {
                            "notSupported": {
                              "total": 20
                            },
                            "supported": {
                              "enrollmentNotRequired": 70,
                              "enrollmentRequired": 10,
                              "total": 80
                            }
                          },
                          "eligibilityCheck": {
                            "notSupported": {
                              "total": 8
                            },
                            "supported": {
                              "enrollmentNotRequired": 87,
                              "enrollmentRequired": 5,
                              "total": 92
                            }
                          },
                          "institutionalClaimSubmission": {
                            "notSupported": {
                              "total": 15
                            },
                            "supported": {
                              "enrollmentNotRequired": 75,
                              "enrollmentRequired": 10,
                              "total": 85
                            }
                          },
                          "professionalClaimSubmission": {
                            "notSupported": {
                              "total": 10
                            },
                            "supported": {
                              "enrollmentNotRequired": 85,
                              "enrollmentRequired": 5,
                              "total": 90
                            }
                          },
                          "unsolicitedClaimAttachment": {
                            "notSupported": {
                              "total": 35
                            },
                            "supported": {
                              "enrollmentNotRequired": 55,
                              "enrollmentRequired": 10,
                              "total": 65
                            }
                          }
                        }
                      }
                    }
                  },
                  "SearchPayers_example2": {
                    "description": "",
                    "summary": "Search with multiple transaction filters (AND logic)",
                    "value": {
                      "items": [
                        {
                          "matches": {
                            "aliases": [
                              "<b>00710</b>"
                            ],
                            "displayName": "<b>Blue Cross Blue</b> Shield of Michigan",
                            "names": [
                              "<b>Blue Cross Blue</b> Shield Michigan Dental",
                              "<b>Blue Cross Blue</b> Shield Michigan Institutional",
                              "<b>Blue Cross Blue</b> Shield Michigan Professional"
                            ],
                            "stediId": "<b>KRP</b>CH"
                          },
                          "payer": {
                            "aliases": [
                              "00210I",
                              "00710",
                              "00710D",
                              "00710P",
                              "1421",
                              "2287",
                              "2426",
                              "710",
                              "CBMI1",
                              "MIBCSI",
                              "MIBCSP",
                              "SB710",
                              "Z1380"
                            ],
                            "coverageTypes": [
                              "dental",
                              "medical"
                            ],
                            "displayName": "Blue Cross Blue Shield of Michigan",
                            "enrollment": {
                              "ptanRequired": false,
                              "transactionEnrollmentProcesses": {
                                "claimPayment": {
                                  "type": "ONE_CLICK"
                                }
                              }
                            },
                            "names": [
                              "Blue Cross Blue Shield Michigan Dental",
                              "Blue Cross Blue Shield Michigan Institutional",
                              "Blue Cross Blue Shield Michigan Professional"
                            ],
                            "parentPayerGroupId": "AWOCR",
                            "primaryPayerId": "00710",
                            "stediId": "KRPCH",
                            "transactionSupport": {
                              "claimPayment": "ENROLLMENT_REQUIRED",
                              "claimStatus": "SUPPORTED",
                              "coordinationOfBenefits": "SUPPORTED",
                              "dentalClaimSubmission": "NOT_SUPPORTED",
                              "eligibilityCheck": "SUPPORTED",
                              "institutionalClaimSubmission": "SUPPORTED",
                              "professionalClaimSubmission": "SUPPORTED",
                              "unsolicitedClaimAttachment": "NOT_SUPPORTED"
                            }
                          },
                          "score": 1157451437081362400
                        }
                      ],
                      "stats": {
                        "total": 80,
                        "transactionSupport": {
                          "claimPayment": {
                            "enrollmentRequired": 25,
                            "notSupported": 15,
                            "supported": 40
                          },
                          "claimStatus": {
                            "enrollmentRequired": 0,
                            "notSupported": 0,
                            "supported": 80
                          },
                          "coordinationOfBenefits": {
                            "enrollmentRequired": 5,
                            "notSupported": 20,
                            "supported": 55
                          },
                          "dentalClaimSubmission": {
                            "enrollmentRequired": 5,
                            "notSupported": 15,
                            "supported": 60
                          },
                          "eligibilityCheck": {
                            "enrollmentRequired": 0,
                            "notSupported": 0,
                            "supported": 80
                          },
                          "institutionalClaimSubmission": {
                            "enrollmentRequired": 5,
                            "notSupported": 15,
                            "supported": 60
                          },
                          "professionalClaimSubmission": {
                            "enrollmentRequired": 5,
                            "notSupported": 5,
                            "supported": 70
                          },
                          "unsolicitedClaimAttachment": {
                            "enrollmentRequired": 5,
                            "notSupported": 30,
                            "supported": 45
                          }
                        },
                        "transactionSupportCounts": {
                          "claimPayment": {
                            "notSupported": {
                              "total": 15
                            },
                            "supported": {
                              "enrollmentNotRequired": 40,
                              "enrollmentRequired": 25,
                              "total": 65
                            }
                          },
                          "claimStatus": {
                            "notSupported": {
                              "total": 0
                            },
                            "supported": {
                              "enrollmentNotRequired": 80,
                              "enrollmentRequired": 0,
                              "total": 80
                            }
                          },
                          "coordinationOfBenefits": {
                            "notSupported": {
                              "total": 20
                            },
                            "supported": {
                              "enrollmentNotRequired": 55,
                              "enrollmentRequired": 5,
                              "total": 60
                            }
                          },
                          "dentalClaimSubmission": {
                            "notSupported": {
                              "total": 15
                            },
                            "supported": {
                              "enrollmentNotRequired": 60,
                              "enrollmentRequired": 5,
                              "total": 65
                            }
                          },
                          "eligibilityCheck": {
                            "notSupported": {
                              "total": 0
                            },
                            "supported": {
                              "enrollmentNotRequired": 80,
                              "enrollmentRequired": 0,
                              "total": 80
                            }
                          },
                          "institutionalClaimSubmission": {
                            "notSupported": {
                              "total": 15
                            },
                            "supported": {
                              "enrollmentNotRequired": 60,
                              "enrollmentRequired": 5,
                              "total": 65
                            }
                          },
                          "professionalClaimSubmission": {
                            "notSupported": {
                              "total": 5
                            },
                            "supported": {
                              "enrollmentNotRequired": 70,
                              "enrollmentRequired": 5,
                              "total": 75
                            }
                          },
                          "unsolicitedClaimAttachment": {
                            "notSupported": {
                              "total": 30
                            },
                            "supported": {
                              "enrollmentNotRequired": 45,
                              "enrollmentRequired": 5,
                              "total": 50
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SearchPayersResponseContent"
                }
              }
            },
            "description": "SearchPayers 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            },
            "description": "ValidationException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            },
            "description": "InternalFailureException 500 response"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            },
            "description": "ServiceUnavailableException 503 response"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            },
            "description": "GatewayTimeoutException 504 response"
          }
        }
      }
    }
  },
  "security": [
    {
      "httpApiKeyAuth": []
    }
  ],
  "servers": [
    {
      "description": "Production",
      "url": "https://healthcare.us.stedi.com/2024-04-01"
    }
  ],
  "tags": [],
  "x-eligibility-error-400-example": {
    "controlNumber": "000647813",
    "eligibilitySearchId": "0198afa8-1610-7602-a436-911cb4bf2a9f",
    "errors": [
      {
        "code": "44",
        "description": "Invalid/Missing Provider Name",
        "field": "AAA",
        "followupAction": "Please Correct and Resubmit",
        "location": "Loop 2100B",
        "possibleResolutions": "Provider's NPI is registered with incorrect name at the payer. Contact the payer directly using the information in the `payer.contactInformation` object (if available) to resolve the issue."
      }
    ],
    "meta": {
      "applicationMode": "test",
      "outboundTraceId": "01K2QTG5GGN7SSM34JMHS7QBDZ",
      "senderId": "STEDI",
      "submitterId": "117151744",
      "traceId": "01K2QTG5GGN7SSM34JMHS7QBDZ"
    },
    "payer": {
      "entityIdentifier": "Payer",
      "entityType": "Non-Person Entity",
      "name": "100935",
      "payorIdentification": "100935"
    },
    "planDateInformation": {
      "plan": "20240726"
    },
    "provider": {
      "aaaErrors": [
        {
          "code": "44",
          "description": "Invalid/Missing Provider Name",
          "field": "AAA",
          "followupAction": "Please Correct and Resubmit",
          "location": "Loop 2100B",
          "possibleResolutions": "Provider's NPI is registered with incorrect name at the payer. Contact the payer directly using the information in the `payer.contactInformation` object (if available) to resolve the issue."
        }
      ],
      "entityIdentifier": "Provider",
      "entityType": "Person",
      "npi": "1447848577",
      "providerName": "SIMPSON"
    },
    "reassociationKey": "000647813",
    "subscriber": {
      "dateOfBirth": "20240606",
      "entityIdentifier": "Insured or Subscriber",
      "entityType": "Person",
      "firstName": "ABE",
      "lastName": "STEDI"
    },
    "subscriberTraceNumbers": [
      {
        "originatingCompanyIdentifier": "3117151744",
        "referenceIdentification": "01K2QTG5GJ8K030SK9QDWF5HD9",
        "traceType": "Current Transaction Trace Numbers",
        "traceTypeCode": "1"
      }
    ],
    "tradingPartnerServiceId": "BS001",
    "warnings": [
      {
        "code": "response::271::invalid_subscriber_insured_id",
        "description": "[Subscriber/dependent] ID must use one of these formats: a three character alpha-numeric prefix (no zeros or ones) followed by a maximum of 14 alpha-numeric characters, an `R` followed by exactly 8 numbers, or an `H` followed by exactly 8 or 10 numbers."
      }
    ],
    "x12": "ISA*00*          *00*          *ZZ*STEDI          *01*117151744      *250815*1734*^*00501*000647813*0*T*:~GS*HB*STEDI*117151744*20250815*173448*1*X*005010X279A1~ST*271*1001*005010X279A1~BHT*0022*11*01K2QTG5GGN7SSM34JMHS7QBDZ*20250815*1734~HL*1**20*1~NM1*PR*2*100935*****PI*100935~HL*2*1*21*1~NM1*1P*1*SIMPSON*****XX*1447848577~AAA*N**44*C~HL*3*2*22*0~TRN*1*01K2QTG5GJ8K030SK9QDWF5HD9*3117151744~NM1*IL*1*STEDI*ABE~DMG*D8*20240606~DTP*291*D8*20240726~SE*13*1001~GE*1*1~IEA*1*000647813~"
  },
  "x-raw-x12-parse-error-example": {
    "code": "BAD_REQUEST",
    "eligibilitySearchId": "0198afb0-0e35-7ed3-bc66-6c387c60f4bb",
    "message": "Parse errors: [ParseError { message: \"Loop has fewer than the minimum of 1 items\", mark: Mark { start: Index { line: 1, column: 328 }, end: None }, context: Some(ParseErrorContext { schema_path: Pointer { path_segments: [Name(\"properties\"), Name(\"detail\"), Name(\"properties\"), Name(\"information_source_level_HL_loop\"), Name(\"items\"), Name(\"properties\"), Name(\"information_receiver_level_HL_loop\"), Name(\"items\"), Name(\"properties\"), Name(\"subscriber_level_HL_loop\")] }, actual: None, code: LoopRepeatLessThanRequired, lineage: None, segment_index: Some(7), element_refnum: None, trigger_element_position: None }) }]"
  },
  "x-stedi": {
    "lifecycle": "general_availability",
    "product": "healthcare",
    "public": true
  }
}
